{
  "req": "I want the flashlight to turn on instantly when I grip it and press the power button, emitting a focused, steady beam that precisely lights up the area I need to see in front of me; when I press the same button again, the beam should shut off quickly to avoid unnecessary light pollution in the dark. I also expect the beam to be effectively reflected or diffused by nearby surfaces, widening the illuminated area so I can clearly see my surroundings while walking outdoors at night or inspecting tight spaces.",
  "design": "package 'Flashlight' {\n\tattribute def OnOffCmd;\n\tattribute def Light;\n\tport def OnOffCmdPort {\n\t\tout onOffCmd : OnOffCmd;\n\t}\n\tport def LightPort {\n\t\tout light: Light;\n\t}\n\tpart context {\n\t\tpart user {\n\t\t\tport onOffCmdPort: OnOffCmdPort;\n\t\t\tperform illuminateRegion.sendOnOffCmd {\n\t\t\t\tout onOffCmd = onOffCmdPort.onOffCmd;\n\t\t\t}\n\t\t}\n\t\tinterface userToFlashlight connect user.onOffCmdPort to flashlight.onOffCmdPort {\n\t\t\tref flow references illuminateRegion.onOffCmdFlow\n\t\t\t\tfrom source.onOffCmd to target.onOffCmd; \n\t\t}\n\t\tpart flashlight {\n\t\t\tport onOffCmdPort: ~OnOffCmdPort;\n\t\t\tperform illuminateRegion.produceDirectedLight {\n\t\t\t\tin onOffCmd = onOffCmdPort.onOffCmd;\n\t\t\t\tout light = lightPort.light;\n\t\t\t}\n\t\t\tport lightPort: LightPort ;\n\t\t}\n\t\tpart reflectingSource {\n\t\t\tport lightPort: ~LightPort;\n\t\t\tperform illuminateRegion.reflectLight {\n\t\t\t\tin light = lightPort.light;\n\t\t\t}\n\t\t}\n\t}\n\taction illuminateRegion {\n\t\taction sendOnOffCmd { out onOffCmd: OnOffCmd; }\n\t\tsuccession flow onOffCmdFlow from sendOnOffCmd.onOffCmd to produceDirectedLight.onOffCmd;\n\t\taction produceDirectedLight { in onOffCmd; out light: Light; }\n\t\tsuccession flow lightFlow from produceDirectedLight.light to reflectLight.light;\n\t\taction reflectLight { in light: Light; }\n\t}\n}"
}