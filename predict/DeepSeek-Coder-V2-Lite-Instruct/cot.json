[
    "\n```sysml\n! ------------------------------------------------------------\n! System: Vehicle Management System\n! Author: [Your Name]\n! Date: [Date]\n! ------------------------------------------------------------{\n  SystemDefinition : VehicleManagementSystem {\n    System {\n      Name : \"Vehicle Management System\"\n      Description : \"System to manage vehicles, including vehicle mass, current status, engine, and driver, etc.\"\n    }\n\n    ! Define Vehicle Class\n    Class : Vehicle {\n      Name : \"Vehicle\"\n      Description : \"Base class for all vehicles\"\n\n      ! Attributes\n      Attribute : vehicleMass : Real {\n        Description : \"Mass of the vehicle\"\n      }\n      Attribute : currentStatus : String {\n        Description : \"Current status of the vehicle\"\n      }\n\n      ! Associations\n      Association : hasEngine : Engine {\n        Description : \"Vehicle has one engine\"\n      }\n      Association : hasDriver : Driver {\n        Description : \"Vehicle has one driver\"\n      }\n\n      ! Operations\n      Operation : setVehicleMass(newMass : Real) {\n        Description : \"Set the mass of the vehicle\"\n      }\n      Operation : getVehicleMass()",
    "\n```sysml\n// Define the system\nSystem mySystem {\n  // Define the system's components\n  Components {\n    // Define the personnel entity\n    Entity Personnel {\n      // Define the personnel's properties\n      Properties {\n        name : String;\n        id : Integer;\n      }\n    }\n    // Define the engine entity\n    Entity Engine {\n      // Define the engine's properties\n      Properties {\n        power : Integer;\n        type : String;\n      }\n    }\n    // Define the vehicle entity\n    Entity Vehicle {\n      // Define the vehicle's properties\n      Properties {\n        name : String;\n        vehicleType : String;\n      }\n      // Define the vehicle's relationships\n      Relationships {\n        operates : Personnel;\n        hasPower : Engine;\n      }\n    }\n  }\n  // Define the system's connectors\n  Connectors {\n    // Define the connector for manually operated vehicles\n    Connector ManuallyOperatedVehicle {\n      // Define the connector's participants\n      Participants {\n        vehicle : Vehicle;\n        driver : Personnel;\n      }\n      // Define the connector",
    "\n```sysml\n!Model VehicleStructureModel\n\n!ClassDefinition Vehicle\n!Attribute name : String\n!Attribute components : Set(VehicleComponent)\n\n!ClassDefinition VehicleComponent\n!Attribute name : String\n!Attribute type : String\n\n!ClassDefinition Engine : VehicleComponent\n!Attribute power : Integer\n\n!ClassDefinition Transmission : VehicleComponent\n!Attribute gearRatio : Float\n\n!ClassDefinition Wheel : VehicleComponent\n!Attribute diameter : Float\n\n!ClassDefinition VehicleStructure\n!Attribute vehicles : Set(Vehicle)\n```\n\n```sysml\n!Model VehicleStructureModel\n\n!ClassDefinition Vehicle\n!Attribute name : String\n!Attribute components : Set(VehicleComponent)\n\n!ClassDefinition VehicleComponent\n!Attribute name : String\n!Attribute type : String\n\n!ClassDefinition Engine : VehicleComponent\n!Attribute power : Integer\n\n!ClassDefinition Transmission : VehicleComponent\n!Attribute gearRatio : Float\n\n!ClassDefinition Wheel : VehicleComponent\n!Attribute diameter : Float\n\n!ClassDefinition VehicleStructure\n!Attribute vehicles : Set(Vehicle)\n```",
    "\n```sysml\n{\n  \"Vehicle\": {\n    \"type\": \"System\",\n    \"properties\": {\n      \"vehicleType\": {\n        \"type\": \"Property\",\n        \"value\": \"small\"\n      },\n      \"engine\": {\n        \"type\": \"Property\",\n        \"value\": \"smallEngine\"\n      }\n    }\n  },\n  \"Vehicle\": {\n    \"type\": \"System\",\n    \"properties\": {\n      \"vehicleType\": {\n        \"type\": \"Property\",\n        \"value\": \"large\"\n      },\n      \"engine\": {\n        \"type\": \"Property\",\n        \"value\": \"largeEngine\"\n      }\n    }\n  },\n  \"smallEngine\": {\n    \"type\": \"System\",\n    \"properties\": {\n      \"engineType\": {\n        \"type\": \"Property\",\n        \"value\": \"small\"\n      },\n      \"cylinderCount\": {\n        \"type\": \"Property\",\n        \"value\": 4\n      }\n    }\n  },\n  \"largeEngine\": {\n    \"type\": \"System\",\n",
    "\n```sysml\n{\n  \"system\": {\n    \"name\": \"Traffic Signal System\",\n    \"components\": [\n      {\n        \"name\": \"Traffic Signal Component\",\n        \"properties\": [\n          {\n            \"name\": \"Color\",\n            \"type\": \"TrafficLightColor\",\n            \"values\": [\"Green\", \"Yellow\", \"Red\"]\n          }\n        ]\n      },\n      {\n        \"name\": \"Specific Traffic Signal Component\",\n        \"properties\": [\n          {\n            \"name\": \"Color\",\n            \"type\": \"TrafficLightColor\",\n            \"value\": \"Green\"\n          }\n        ]\n      }\n    ]\n  }\n}\n```\n\n```sysml\n{\n  \"system\": {\n    \"name\": \"Traffic Signal System\",\n    \"components\": [\n      {\n        \"name\": \"Traffic Signal Component\",\n        \"properties\": [\n          {\n            \"name\": \"Color\",\n            \"type\": \"TrafficLightColor\",\n            \"values\": [\"Green\", \"Yellow\", \"Red\"]\n          }\n        ],\n        \"constraints\": [\n         ",
    "\n```sysml\n!Model (InformationClassificationManagement)\n{\n  !Class (InformationClassification)\n  {\n    !Attribute (code : String)\n    !Attribute (color : String)\n  }\n\n  !Class (GradeClassification)\n  {\n    !Attribute (grade : String)\n    !Attribute (score : Real)\n  }\n\n  !Class (System)\n  {\n    !Association (InformationClassification -- Information)\n    !Association (GradeClassification -- Information)\n  }\n}\n```\n\nExplanation:\n- The model `InformationClassificationManagement` contains two classification classes: `InformationClassification` and `GradeClassification`.\n- `InformationClassification` has two attributes: `code` (a string) and `color` (a string).\n- `GradeClassification` has two attributes: `grade` (a string) and `score` (a real number).\n- The `System` class has two associations: one to `InformationClassification` and one to `GradeClassification`.\n\nThis model represents the structure of the system for managing information classification and grade classification, ensuring that different types of information and grades are clearly defined and distinguished.",
    "\n```sysml\n{\n  \"system\": {\n    \"name\": \"Vehicle Engine System\",\n    \"description\": \"This system mainly includes two types of vehicles: small vehicles and large vehicles. Each type is equipped with an engine, and each engine consists of several cylinders. The engine of a small vehicle has 4 cylinders, while the engine of a large vehicle has 6 cylinders.\",\n    \"components\": [\n      {\n        \"name\": \"Small Vehicle\",\n        \"description\": \"A type of vehicle with a 4-cylinder engine.\",\n        \"engine\": {\n          \"name\": \"Small Vehicle Engine\",\n          \"cylinders\": 4\n        }\n      },\n      {\n        \"name\": \"Large Vehicle\",\n        \"description\": \"A type of vehicle with a 6-cylinder engine.\",\n        \"engine\": {\n          \"name\": \"Large Vehicle Engine\",\n          \"cylinders\": 6\n        }\n      }\n    ]\n  }\n}\n```",
    "\n```sysml\n!",
    "\n```sysml\n{\n  \"system\": {\n    \"name\": \"Automobile Wheel Assembly\",\n    \"components\": [\n      {\n        \"name\": \"Wheel Bearing Unit\",\n        \"type\": \"component\"\n      },\n      {\n        \"name\": \"Tire\",\n        \"type\": \"component\"\n      },\n      {\n        \"name\": \"Bead\",\n        \"type\": \"component\"\n      },\n      {\n        \"name\": \"Hub\",\n        \"type\": \"component\"\n      },\n      {\n        \"name\": \"Rim\",\n        \"type\": \"component\"\n      },\n      {\n        \"name\": \"Bolt Mounting Hole\",\n        \"type\": \"component\"\n      },\n      {\n        \"name\": \"Threaded Hole\",\n        \"type\": \"component\"\n      },\n      {\n        \"name\": \"Bolt Connection\",\n        \"type\": \"component\"\n      }\n    ],\n    \"connections\": [\n      {\n        \"source\": \"Tire\",\n        \"target\": \"Bead\",\n        \"type\": \"connects",
    "\n```sysml\n{\n  \"System\": {\n    \"Name\": \"Fuel Management System\",\n    \"Components\": [\n      {\n        \"Name\": \"Fuel Tank Assembly\",\n        \"Ports\": [\n          {\n            \"Name\": \"Fuel Supply Port\",\n            \"Type\": \"FuelPort\",\n            \"Direction\": \"Out\"\n          },\n          {\n            \"Name\": \"Fuel Return Port\",\n            \"Type\": \"FuelPort\",\n            \"Direction\": \"In\"\n          }\n        ]\n      },\n      {\n        \"Name\": \"Engine\",\n        \"Ports\": [\n          {\n            \"Name\": \"Fuel Supply Port\",\n            \"Type\": \"FuelPort\",\n            \"Direction\": \"In\"\n          }\n        ]\n      }\n    ],\n    \"DataItems\": [\n      {\n        \"Name\": \"Temperature Data\",\n        \"Type\": \"Temperature\",\n        \"Description\": \"Temperature information detected and transmitted at the interface\",\n        \"Ports\": [\n          {\n            \"Name\": \"Temperature Interface\",\n            \"Type\": \"DataPort\",\n",
    "\n```sysml\n{\n  System mySystem {\n    Name = \"Vehicle Configuration Model\"\n    Description = \"This system is designed for modeling configuration variants of vehicles.\"\n\n    Component myVehicle {\n      Name = \"Complete Vehicle\"\n      Description = \"The core components include the complete vehicle, front and rear axles, and tires.\"\n      Attribute mass = 1750.0 \"kg\"\n\n      Component myFrontAxle {\n        Name = \"Front Axle\"\n        Description = \"One front axle equipped with two ordered tires.\"\n        Attribute mass = 0.0 \"kg\"\n\n        Component myFrontTire1 {\n          Name = \"Front Tire 1\"\n          Description = \"First tire of the front axle.\"\n        }\n\n        Component myFrontTire2 {\n          Name = \"Front Tire 2\"\n          Description = \"Second tire of the front axle.\"\n        }\n      }\n\n      Component myRearAxle {\n        Name = \"Rear Axle\"\n        Description = \"One rear axle equipped with two ordered tires.\"\n        Attribute mass = 0.0 \"kg\"\n\n        Component",
    "\n```sysml\n{\n  SystemDefinition : CouplingSystem\n  {\n    System : Vehicle\n    {\n      Feature : VehicleFeature\n      {\n        Feature : Hitch\n        {\n          Feature : CouplingBall\n          {\n            Feature : Reference\n            {\n              Feature : CouplingBallReference\n              {\n                Feature : CompatibleHitch\n              {\n                // Define compatible hitch types\n              }\n            }\n          }\n        }\n      }\n    }\n\n    System : Trailer\n    {\n      Feature : TrailerFeature\n      {\n        Feature : Hitch\n        {\n          Feature : Connector\n        {\n          Feature : Reference\n          {\n            Feature : HitchConnectorReference\n          {\n            Feature : VehicleHitch\n          {\n            // Define vehicle hitch types\n          }\n        }\n      }\n    }\n  }\n}\n```\n\nOutput Non-Functional Requirements:\n```sysml\n{\n  NonFunctionalRequirement : Reusability\n  {\n    Description : \"The system design allows for easy reuse of vehicle and trailer components, facilitating quick adaptation and assembly of various vehicle and trailer models.\"\n  }\n\n  Non",
    "\n```sysml\n// Define the system\nSystem mySystem {\n  // Define the components\n  Component engine {\n    // Define the ports\n    Port fuelCommandPort {\n      // Define the interface\n      Interface fuelCommandInterface {\n        // Define the data type\n        DataType fuelCommandType {\n          // Define the attributes\n          Attribute command : String;\n        }\n      }\n    }\n  }\n\n  Component transmission {\n    // Define the ports\n    Port powerPort {\n      // Define the interface\n      Interface powerInterface {\n        // Define the data type\n        DataType powerType {\n          // Define the attributes\n          Attribute powerLevel : Integer;\n        }\n      }\n    }\n    Port clutchPort {\n      // Define the interface\n      Interface clutchInterface {\n        // Define the data type\n        DataType clutchState : Boolean;\n      }\n    }\n  }\n\n  Component driveshaft {\n    // Define the ports\n    Port driveshaftPort {\n      // Define the interface\n      Interface driveshaftInterface {\n        // Define the data type\n        DataType driveshaftType {\n          // Define the attributes\n",
    "\n```sysml\nsystemDefinition: System\n{\n  systemName: \"Multi-Architecture System Management\"\n  systemPart: [\n    systemDefinition: Subsystem\n    {\n      subsystemName: \"Subsystem b11\"\n      systemPart: [\n        systemDefinition: Component\n        {\n          componentName: \"c1\"\n          systemPort: [\n            systemDefinition: SignalPort\n            {\n              portName: \"pe\"\n            }\n          ]\n        }\n        systemDefinition: Component\n        {\n          componentName: \"c2\"\n          systemPort: [\n            systemDefinition: SignalPort\n            {\n              portName: \"pb\"\n            }\n          ]\n        }\n      ]\n    }\n    systemDefinition: Subsystem\n    {\n      subsystemName: \"Subsystem b12\"\n      systemPart: [\n        systemDefinition: Component\n        {\n          componentName: \"c3\"\n          systemPort: [\n            systemDefinition: SignalPort\n            {\n              portName: \"pf\"\n            }\n          }\n        }\n        systemDefinition: Component\n        {\n          componentName:",
    "\n```sysml\n!",
    "\n```sysml\n{\n  \"system\": {\n    \"name\": \"Automotive Powertrain Control System\",\n    \"description\": \"This system is designed to implement the control logic of an automotive powertrain.\",\n    \"functions\": [\n      {\n        \"name\": \"Receive Fuel Control Command\",\n        \"description\": \"Upon receiving a fuel control command, the system starts the engine and generates torque according to the predetermined order.\"\n      },\n      {\n        \"name\": \"Generate Torque\",\n        \"description\": \"The system generates torque according to the predetermined order.\"\n      },\n      {\n        \"name\": \"Amplify and Transmit Power\",\n        \"description\": \"The generated torque is then successively amplified, transmitted, and distributed, delivering power stage by stage to the vehicle’s drive wheels.\"\n      },\n      {\n        \"name\": \"Deliver Power to Drive Wheels\",\n        \"description\": \"The system delivers power to the vehicle’s drive wheels to ensure normal driving.\"\n      },\n      {\n        \"name\": \"Halt Operations on Stall Signal\",\n        \"description\": \"When a stall signal is detected, the relevant operational processes will",
    "\n```sysml\nSystem {\n  Name = \"Vehicle Powertrain Management System\"\n  Description = \"This system can achieve integrated management of the vehicle powertrain system according to the driver's fuel input command.\"\n  Features {\n    Feature \"Engine Start Signal Handling\" {\n      Description = \"When the engine start signal is activated, the system first generates the corresponding engine output torque based on the fuel command.\"\n      Triggers {\n        Trigger \"Engine Start\" {\n          Description = \"Triggers the system to generate engine output torque.\"\n        }\n      }\n      Effects {\n        Effect \"Generate Engine Output Torque\" {\n          Description = \"Generates the corresponding engine output torque based on the fuel command.\"\n        }\n      }\n    }\n    Feature \"Torque Transmission and Distribution\" {\n      Description = \"Then amplifies and transmits the torque sequentially through the transmission, and subsequently distributes the torque to each wheel.\"\n      Effects {\n        Effect \"Transmit Torque Through Transmission\" {\n          Description = \"Amplifies and transmits the torque sequentially through the transmission.\"\n        }\n        Effect \"Distribute Torque to Wheels\" {\n          Description = \"Distributes",
    "\n```sysml\n{\n  \"system\": {\n    \"name\": \"Vehicle and Trailer Power Connection System\",\n    \"description\": \"This system is designed to implement a power connection and disconnection mechanism between a vehicle and a trailer.\",\n    \"components\": [\n      {\n        \"name\": \"Vehicle Frame\",\n        \"description\": \"The structural frame of the vehicle.\",\n        \"ports\": [\n          {\n            \"name\": \"Hitch Ball\",\n            \"description\": \"Installed on the vehicle frame to facilitate connection with the trailer.\",\n            \"type\": \"connectable\"\n          }\n        ]\n      },\n      {\n        \"name\": \"Trailer Frame\",\n        \"description\": \"The structural frame of the trailer.\",\n        \"ports\": [\n          {\n            \"name\": \"Trailer Coupler\",\n            \"description\": \"Installed on the trailer frame to facilitate connection with the vehicle.\",\n            \"type\": \"connectable\"\n          }\n        ]\n      },\n      {\n        \"name\": \"Hitching Mechanism\",\n        \"description\": \"The mechanism that enables the connection or disconnection between the vehicle and the trailer.\",\n",
    "\n```sysml\n{\n  \"system\": {\n    \"name\": \"Vehicle-Trailer Connection Management System\",\n    \"description\": \"Manages the connection status between a vehicle and a trailer.\",\n    \"components\": [\n      {\n        \"name\": \"Vehicle\",\n        \"description\": \"Includes a chassis and a tow ball.\",\n        \"ports\": [\n          {\n            \"name\": \"Tow Ball\",\n            \"direction\": \"Out\"\n          }\n        ]\n      },\n      {\n        \"name\": \"Trailer\",\n        \"description\": \"Includes a coupler and a trailer frame.\",\n        \"ports\": [\n          {\n            \"name\": \"Coupler\",\n            \"direction\": \"In\"\n          }\n        ]\n      }\n    ],\n    \"interactions\": [\n      {\n        \"name\": \"Connect\",\n        \"description\": \"Connects the trailer to the vehicle.\",\n        \"source\": \"Tow Ball\",\n        \"target\": \"Coupler\",\n        \"type\": \"Action\"\n      },\n      {\n        \"name\": \"Disconnect\",\n        \"description\": \"Disconnects the trailer",
    "\n```sysml\n{\n  \"system\": {\n    \"name\": \"Vehicle-Trailer Connection System\",\n    \"description\": \"A system to implement a dynamic connection reference model between a vehicle and a towed trailer.\",\n    \"components\": [\n      {\n        \"name\": \"Vehicle Chassis\",\n        \"description\": \"Comprises a chassis equipped with a tow ball device.\",\n        \"type\": \"Chassis\"\n      },\n      {\n        \"name\": \"Trailer Chassis\",\n        \"description\": \"Includes a trailer chassis.\",\n        \"type\": \"Chassis\"\n      },\n      {\n        \"name\": \"Coupler Mechanism\",\n        \"description\": \"A mechanism that can engage or disengage with the tow ball through its internal structure.\",\n        \"type\": \"Mechanism\"\n      }\n    ],\n    \"connections\": [\n      {\n        \"name\": \"Vehicle-Trailer Connection\",\n        \"description\": \"Allows connecting and disconnecting the trailer to and from the vehicle.\",\n        \"source\": \"Vehicle Chassis.Tow Ball\",\n        \"target\": \"Coupler Mechanism.Tow Ball Engagement\",\n       ",
    "\n```sysml\n{\n  \"System\": {\n    \"Name\": \"Fuel System\",\n    \"Description\": \"This system is designed to describe the fuel system of motor vehicles, including the fuel supply and return process between the fuel tank assembly and the engine.\",\n    \"Components\": [\n      {\n        \"Name\": \"Fuel Tank\",\n        \"Description\": \"As the fuel supply port, the fuel tank is capable of providing fuel to the engine.\",\n        \"Interfaces\": [\n          {\n            \"Name\": \"Fuel Supply\",\n            \"Description\": \"Provides fuel to the engine.\"\n          }\n        ]\n      },\n      {\n        \"Name\": \"Engine\",\n        \"Description\": \"The engine can also return a portion of the fuel to the fuel tank, ensuring the circulation and utilization of fuel.\",\n        \"Interfaces\": [\n          {\n            \"Name\": \"Fuel Return\",\n            \"Description\": \"Returns a portion of the fuel to the fuel tank.\"\n          }\n        ]\n      }\n    ],\n    \"Interconnections\": [\n      {\n        \"Source\": \"Fuel Tank\",\n        \"Target\": \"Engine\",",
    "\n```sysml\n{\n  System {\n    Name = \"Fuel Delivery System\"\n    Description = \"This system provides vehicles with efficient fuel delivery services.\"\n    System {\n      Name = \"Storage Tank\"\n      Description = \"Initial fuel reservoir.\"\n      Provides {\n        Service {\n          Name = \"Fuel Supply\"\n          Description = \"Provides fuel to the vehicle.\"\n          ProvidedBy = \"Storage Tank\"\n          Uses {\n            Part {\n              Name = \"Fuel Pump\"\n              Description = \"Delivers fuel to the vehicle.\"\n              UsedBy = \"Fuel Pump\"\n            }\n          }\n        }\n      }\n    }\n    System {\n      Name = \"Vehicle\"\n      Description = \"Receives and stores the delivered fuel.\"\n      Uses {\n        Part {\n          Name = \"Fuel Tank\"\n          Description = \"Receives and stores the delivered fuel.\"\n          UsedBy = \"Fuel Tank\"\n        }\n      }\n      System {\n        Name = \"Fuel Tank Monitoring\"\n        Description = \"Monitors both the maximum capacity and the current fuel level in real-time.\"\n        Uses {",
    "\n```sysml\n{\n  System {\n    Name = \"Automobile Assembly Process\"\n    Description = \"Model of the automobile assembly process, focusing on sequential completion of gearbox and engine assembly on the final assembly line.\"\n\n    Component {\n      Name = \"Vehicle Assembly\"\n      Description = \"Initial vehicle assembly without a gearbox and engine.\"\n\n      Component {\n        Name = \"Gearbox Assembly\"\n        Description = \"Assembly of the gearbox onto the vehicle assembly, producing an assembly without an engine.\"\n\n        Requirement {\n          Name = \"Gearbox Installed\"\n          Description = \"The vehicle assembly must have the gearbox installed to produce an assembly without an engine.\"\n        }\n\n        Output {\n          Component = \"Vehicle with Gearbox\"\n          Description = \"Vehicle assembly with the gearbox installed, but without the engine.\"\n        }\n      }\n\n      Component {\n        Name = \"Engine Assembly\"\n        Description = \"Assembly of the engine onto the vehicle with the gearbox, ultimately forming a fully assembled vehicle.\"\n\n        Requirement {\n          Name = \"Engine Installed\"\n          Description = \"The vehicle with the gearbox must have the engine installed to form a fully assembled",
    "\n```sysml\nsystem VehicleA\n{\n  // Define system states\n  state Off;\n  state Starting;\n  state Running;\n  state HealthManagement;\n  state Maintenance;\n  state Degraded;\n  state Normal;\n\n  // Define state transitions\n  transition start\n  {\n    from Off;\n    to Starting when brakePedalPressed and startSignalReceived;\n  }\n\n  transition startComplete\n  {\n    from Starting;\n    to Running when vehicleOnSignalReceived;\n  }\n\n  transition enterRunning\n  {\n    from Running;\n    action selfCheck;\n    action supplyPower;\n    action applyParkingBrake;\n  }\n\n  transition enterHealthManagement\n  {\n    from Running;\n    when temperatureExceedsThreshold;\n    action switchToDegradedMode;\n    action sendOverTemperatureSignal;\n  }\n\n  transition enterMaintenance\n  {\n    from Running;\n    when maintenanceRequired;\n    to Maintenance;\n  }\n\n  transition enterDegraded\n  {\n    from Running;\n    when temperatureExceedsThreshold;\n    to Deg",
    "\n```sysml\n{\n  \"System\": {\n    \"Name\": \"Vehicle Behavior Modeling System\",\n    \"Components\": [\n      {\n        \"Name\": \"Vehicle\",\n        \"Features\": [\n          {\n            \"Name\": \"Autonomous Management\",\n            \"Description\": \"The vehicle is capable of autonomously managing its operation and health status under different conditions.\",\n            \"Requirements\": [\n              {\n                \"Type\": \"Functional\",\n                \"Description\": \"Initiates the startup process from the shutdown state when both the brake pedal is pressed and a start signal is received.\"\n              },\n              {\n                \"Type\": \"Functional\",\n                \"Description\": \"Completes self-inspection and power supply procedures after meeting the requirements.\"\n              },\n              {\n                \"Type\": \"Non-Functional\",\n                \"Description\": \"Can sense temperature in real time.\"\n              },\n              {\n                \"Type\": \"Non-Functional\",\n                \"Description\": \"Sends a warning signal to the vehicle controller when overheating is detected.\"\n              },\n              {\n                \"Type\": \"Non-Functional\",\n                \"Description\": \"Switches the vehicle status to",
    "\n```sysml\n{\n  \"System\": {\n    \"name\": \"Vehicle Simulation System\",\n    \"description\": \"This system is designed for spatiotemporal simulation of the dynamic behavior of vehicles on roads at different moments.\",\n    \"components\": [\n      {\n        \"name\": \"Vehicle\",\n        \"description\": \"The vehicle to be simulated.\",\n        \"properties\": [\n          {\n            \"name\": \"mass\",\n            \"type\": \"Real\",\n            \"description\": \"The mass of the vehicle.\"\n          },\n          {\n            \"name\": \"position\",\n            \"type\": \"Point\",\n            \"description\": \"The current position of the vehicle.\"\n          },\n          {\n            \"name\": \"velocity\",\n            \"type\": \"Real\",\n            \"description\": \"The current velocity of the vehicle.\"\n          },\n          {\n            \"name\": \"acceleration\",\n            \"type\": \"Real\",\n            \"description\": \"The current acceleration of the vehicle.\"\n          }\n        ]\n      },\n      {\n        \"name\": \"Road\",\n        \"description\": \"The road on which the vehicle is simulated",
    "\n```sysml\nimport this::System;\nimport this::Configuration;\nimport this::Subsystem;\nimport this::Component;\n\nSystem ::= [\n  name = \"Automotive Configuration Management System\",\n  configurations = [\n    ConfigurationA ::= [\n      name = \"Configuration A\",\n      subsystems = [\n        SubsystemA ::= [\n          name = \"Subsystem A\",\n          components = [\n            Component1 ::= [ name = \"Component 1\" ],\n            Component2 ::= [ name = \"Component 2\" ]\n          ],\n          configuration = 1\n        ],\n        SubsystemB ::= [\n          name = \"Subsystem B\",\n          components = [\n            Component4 ::= [ name = \"Component 4\" ],\n            Component5 ::= [ name = \"Component 5\" ]\n          ],\n          configuration = 3\n        ]\n      ]\n    ],\n    ConfigurationB ::= [\n      name = \"Configuration B\",\n      subsystems = [\n        SubsystemA ::= [\n          name = \"Subsystem A\",\n          components = [\n            Component2 ::= [ name = \"Component ",
    "\n```sysml\nSystem mySystem {\n  SystemPart part1;\n  SystemPart part2;\n  SystemPart part3 {\n    Port p1;\n  }\n  SystemPart part4;\n  SystemPart part5 {\n    Port p2;\n    Variant variant1;\n    Variant variant2;\n  }\n  SystemPart part6;\n  System mySubsystemA {\n    SystemPart part7;\n    SystemPart part8;\n    SystemPart part9;\n    Port p3;\n    Port p4;\n  }\n  System mySubsystemB {\n    SystemPart part10;\n    SystemPart part11;\n    SystemPart part12;\n    Port p5;\n    Port p6;\n  }\n  ConfigurationScheme VehicleConfigA {\n    System mySubsystemA;\n    System mySubsystemB;\n  }\n  ConfigurationScheme VehicleConfigB {\n    System mySubsystemA;\n    System mySubsystemB;\n  }\n}\n```",
    "\n```sysml\nSystem {\n  Name = \"Vehicle Configuration System\"\n  Description = \"This system provides flexible solutions for vehicle product line configuration, capable of automatically matching suitable combinations of engines, transmissions, and wheels based on different performance requirements and user preferences.\"\n\n  SystemFeatures {\n    Feature \"High Performance Configuration\" {\n      Description = \"When high performance is required, the system will configure a 6-cylinder engine, automatic transmission, and wide-rim wheels, ensuring compatibility among these components.\"\n      Constraints {\n        Constraint \"Engine Compatibility\" {\n          Description = \"Ensures the engine is compatible with the transmission and wheels.\"\n          Preconditions {\n            Precondition \"Engine Type\" == \"6-cylinder\"\n            Precondition \"Transmission Type\" == \"Automatic\"\n            Precondition \"Wheel Type\" == \"Wide-rim\"\n          }\n          Postconditions {\n            Postcondition \"SystemConfigures\" == \"High Performance\"\n          }\n        }\n      }\n    }\n\n    Feature \"Standard Performance Configuration\" {\n      Description = \"For standard performance requirements, a combination of a 4-cylinder engine, manual transmission, and narrow-rim wheels is offered",
    "\n```sysml\nSystem {\n  Name = \"Automobile Specification and Management System\"\n  Description = \"This system is intended to define and manage the primary specifications and performance requirements related to automobiles, covering aspects such as vehicle mass, fuel status, powertrain, and reliability.\"\n  Features {\n    Feature {\n      Name = \"Vehicle Mass Management\"\n      Description = \"Support the definition and management of vehicles with different mass grades (such as 2000 kg and 2500 kg). Each vehicle should reflect its actual mass and comply with the corresponding maximum mass limitations to prevent overloading.\"\n      Requirements {\n        Requirement {\n          ID = \"VM001\"\n          Description = \"Each vehicle must reflect its actual mass.\"\n          Type = \"Functional\"\n          Targets {\n            Target {\n              Object = \"Vehicle\"\n              Feature = \"Mass\"\n            }\n          }\n        }\n        Requirement {\n          ID = \"VM002\"\n          Description = \"Each vehicle must comply with the corresponding maximum mass limitations to prevent overloading.\"\n          Type = \"Non-Functional\"\n          Targets {\n            Target {\n              Object",
    "\n```sysml\n{\n  \"system\": {\n    \"name\": \"Vehicle Mass Verification System\",\n    \"description\": \"This system is designed to verify vehicle mass compliance to ensure that the actual mass of the tested vehicles does not exceed the specified maximum permissible mass.\",\n    \"components\": [\n      {\n        \"name\": \"Weighing Equipment\",\n        \"description\": \"Operated by a test operator, it measures the actual mass of the vehicle.\"\n      },\n      {\n        \"name\": \"Test Operator\",\n        \"description\": \"Manually operates the weighing equipment to measure the vehicle's actual mass.\"\n      },\n      {\n        \"name\": \"Compliance Management\",\n        \"description\": \"Provides a reliable and automated solution for compliance management of vehicle-related product quality.\"\n      }\n    ],\n    \"flows\": [\n      {\n        \"name\": \"Mass Measurement\",\n        \"source\": \"Weighing Equipment\",\n        \"target\": \"Test Operator\",\n        \"description\": \"The weighing equipment sends data to the test operator to measure the vehicle's actual mass.\"\n      },\n      {\n        \"name\": \"Mass Comparison\",",
    "\n```sysml\n{\n  \"System\": {\n    \"Name\": \"WaterSupplyNetwork\",\n    \"Description\": \"This system implements a water supply network delivering hot and cold water from a main supply pipe through corresponding interfaces to one or more faucets.\",\n    \"Components\": [\n      {\n        \"Name\": \"SpigotBank\",\n        \"Description\": \"Main supply pipe delivering hot and cold water.\",\n        \"Ports\": [\n          {\n            \"Name\": \"HotWaterInterface\",\n            \"Description\": \"Interface for hot water delivery.\",\n            \"Type\": \"HotWater\"\n          },\n          {\n            \"Name\": \"ColdWaterInterface\",\n            \"Description\": \"Interface for cold water delivery.\",\n            \"Type\": \"ColdWater\"\n          }\n        ]\n      },\n      {\n        \"Name\": \"Faucet\",\n        \"Description\": \"Water faucet with hot and cold water inlets.\",\n        \"Ports\": [\n          {\n            \"Name\": \"HotWaterInlet\",\n            \"Description\": \"Inlet for hot water.\",\n            \"Type\": \"HotWater\"\n          },\n          {\n            \"Name",
    "\n```sysml\nSystem {\n  Name = \"Vehicle Quality Analysis System\"\n  Description = \"This system is designed to model and analyze the quality attributes of vehicles, enabling effective management of both the entire vehicle and its key components (including the engine, transmission, front axle assembly, and rear axle assembly). Users can input quality data for each component, and the system will automatically aggregate and calculate the total mass of the vehicle, providing a data foundation for quality analysis. The system also supports the definition of quality analysis requirements and the formulation of analysis use cases. Based on set analysis objectives, it can automatically generate analysis tasks and plans, achieving comprehensive evaluation and requirements tracking for vehicle quality. Ultimately, the system provides scientific support for vehicle design and performance optimization, improving overall development efficiency and product performance.\"\n\n  SystemPart [\n    Name = \"Engine\"\n    Description = \"The engine is a crucial component of the vehicle, responsible for generating the power needed to propel the vehicle forward.\"\n    QualityAttribute [\n      Name = \"PowerOutput\"\n      Description = \"The power output of the engine is measured in horsepower (HP) and represents the engine's ability to produce work.\"\n      Value = 300\n      Unit = \"",
    "\n```sysml\n{\n  System {\n    Name: \"Vehicle Powertrain Configuration System\"\n    Description: \"This system aims to provide optimal solutions for vehicle powertrain configuration, focusing primarily on the trade-off analysis of engine types to select the engine configuration that performs best across multiple key performance indicators, including power, mass, efficiency, reliability, and cost.\"\n    SystemPart {\n      Part {\n        Name: \"Engine Configuration Model\"\n        Description: \"This part models various engine structures and their related components, including cylinders, pistons, connecting rods, and crankshafts.\"\n        SystemElement {\n          Element {\n            Name: \"Engine Structure\"\n            Description: \"Models various engine structures such as four-cylinder engines, six-cylinder engines, etc.\"\n            SystemElement {\n              Element {\n                Name: \"Cylinder\"\n                Description: \"Represents a single cylinder within an engine.\"\n              }\n              Element {\n                Name: \"Piston\"\n                Description: \"Moves within a cylinder to convert pressure into mechanical motion.\"\n              }\n              Element {\n                Name: \"Connecting Rod\"\n                Description: \"Transfers the linear motion of",
    "\n```sysml\n{\n  System {\n    Name \"Fuel Economy System\"\n    Description \"This system ensures that vehicle fuel economy meets relevant regulatory and performance requirements.\"\n\n    SystemRequirement {\n      Name \"Urban Fuel Economy Requirement\"\n      Description \"Under urban driving conditions, the vehicle’s range per gallon must not be less than 25 miles.\"\n      Feature {\n        Name \"Urban Fuel Economy\"\n        Value \">= 25 miles per gallon\"\n      }\n    }\n\n    SystemRequirement {\n      Name \"Highway Fuel Economy Requirement\"\n      Description \"Under highway conditions, the vehicle’s range per gallon must not be less than 30 miles.\"\n      Feature {\n        Name \"Highway Fuel Economy\"\n        Value \">= 30 miles per gallon\"\n      }\n    }\n\n    SystemRequirement {\n      Name \"Fuel Economy Measurement\"\n      Description \"Fuel economy is measured in 'miles per gallon,' based on the US customary gallon (231 cubic inches).\"\n      Feature {\n        Name \"Measurement Unit\"\n        Value \"miles per gallon\"\n      }\n    }\n\n    SystemRequirement {",
    "\n```system\nSystem VehicleSimulationSystem\n{\n  SystemPart VehicleModel\n  {\n    SystemPart VehicleMassParameters\n    {\n      SystemPart Mass\n      {\n        SystemProperty MassValue double\n      }\n    }\n    SystemPart InitialConditions\n    {\n      SystemProperty InitialPosition double\n      SystemProperty InitialVelocity double\n    }\n    SystemPart PowerOutputData\n    {\n      SystemProperty PowerOutputDataList List<PowerOutputData>\n    }\n  }\n  SystemPart SimulationEngine\n  {\n    SystemProperty TimeStep double\n    SystemProperty SimulationDuration double\n    SystemPart CalculationResults\n    {\n      SystemProperty AccelerationList List<double>\n      SystemProperty VelocityList List<double>\n      SystemProperty PositionList List<double>\n    }\n  }\n}\n```\n\n```system\nSystem PowerOutputData\n{\n  SystemProperty Time double\n  SystemProperty PowerOutput double\n}\n```\n\n```system\nSystem VehicleSimulationSystem\n{\n  SystemPart VehicleModel\n  {\n    SystemPart VehicleMassParameters\n    {\n      SystemProperty MassValue double\n    }\n    SystemPart InitialConditions\n   ",
    "\n```sysml\n!VehicleSystemModel\n\n!Component FrontAxleAssembly\n{\n    !Name \"Front Axle Assembly\"\n    !Mass 150 kg\n    !Part frontWheels [2]\n    !Part frontAxle\n    !Property frontAxleSteeringAngle\n    {\n        !Type Angle\n        !Value 0 deg\n    }\n}\n\n!Component RearAxleAssembly\n{\n    !Name \"Rear Axle Assembly\"\n    !Mass 250 kg\n    !Part rearWheels [2]\n    !Part rearAxle\n}\n\n!System VehicleSystem\n{\n    !Name \"Vehicle System\"\n    !Mass 2500 kg\n    !Part frontAxleAssembly\n    !Part rearAxleAssembly\n}\n```",
    "\n```sysml\n{\n  \"System\": {\n    \"Name\": \"Vehicle Safety and Security Management System\",\n    \"Description\": \"This system manages and displays vehicle safety and security-related features and components, ensuring intuitive understanding of safety and security configurations.\",\n    \"Components\": [\n      {\n        \"Name\": \"Seat Belts\",\n        \"Type\": \"Mandatory Safety Feature\",\n        \"Description\": \"Ensures driver and passenger safety in the event of a collision.\"\n      },\n      {\n        \"Name\": \"Bumpers\",\n        \"Type\": \"Mandatory Safety Feature\",\n        \"Description\": \"Provides protection during minor collisions.\"\n      },\n      {\n        \"Name\": \"Airbags\",\n        \"Type\": \"Optional Safety Feature\",\n        \"Description\": \"Offers additional protection in the event of a collision.\"\n      },\n      {\n        \"Name\": \"Anti-Lock Braking System\",\n        \"Type\": \"Optional Safety Feature\",\n        \"Description\": \"Improves braking performance in emergency situations.\"\n      },\n      {\n        \"Name\": \"Alarm Devices\",\n        \"Type\": \"Security Device\",\n        \"Description\":",
    "\n```sysml\n!Model (\n  name = \"Layered Architecture Model\",\n  elements = [\n    !System (\n      name = \"MySystem\",\n      layers = [\n        !Layer (\n          name = \"Application Layer\",\n          dependencies = [\n            !Dependency (\n              client = \"ApplicationLayer\",\n              supplier = \"ServiceLayer\"\n            )\n          ]\n        ),\n        !Layer (\n          name = \"Service Layer\",\n          dependencies = [\n            !Dependency (\n              client = \"ServiceLayer\",\n              supplier = \"DataLayer\"\n            )\n          ]\n        ),\n        !Layer (\n          name = \"Data Layer\",\n          dependencies = [\n            !Dependency (\n              client = \"DataLayer\",\n              supplier = \"ServiceLayer\"\n            )\n          ]\n        )\n      ],\n      attributes = [\n        !Attribute (\n          name = \"x\",\n          type = \"DataTypeX\"\n        ),\n        !Attribute (\n          name = \"y\",\n          type = \"DataTypeY\"\n        ),\n        !Attribute (\n          name = \"z\",\n          type = \"",
    "\n```sysml\nSystem {\n  name: \"Torque Generation System\"\n  description: \"This system is designed to realize the torque generation function within the powertrain system.\"\n  components: [\n    Component {\n      name: \"Torque Generator\"\n      description: \"A component capable of generating torque.\"\n      requirements: [\n        Requirement {\n          description: \"The torque produced during operation must be greater than zero newton-meters to ensure driving capability.\"\n          condition: \"Torque > 0 Nm\"\n        }\n      ]\n    }\n  ]\n  connectors: [\n    Connector {\n      name: \"Powertrain Connection\"\n      description: \"Connects the torque generator to the physical layer of the powertrain.\"\n      source: \"Torque Generator\"\n      target: \"Powertrain Components\"\n    }\n  ]\n}\n```",
    "\n```sysml\n{\n  \"System\": {\n    \"name\": \"PowerTransmissionSystem\",\n    \"properties\": {\n      \"PowerTransmissionCapability\": {\n        \"type\": \"Boolean\",\n        \"value\": \"true\"\n      },\n      \"TorqueGenerationCapability\": {\n        \"type\": \"Boolean\",\n        \"value\": \"true\"\n      }\n    },\n    \"requiredInterfaces\": [\n      {\n        \"name\": \"PowerTransmission\",\n        \"type\": \"Interface\"\n      },\n      {\n        \"name\": \"TorqueGeneration\",\n        \"type\": \"Interface\"\n      }\n    ],\n    \"components\": [\n      {\n        \"name\": \"TorqueGenerator\",\n        \"type\": \"Component\",\n        \"properties\": {\n          \"TorqueGenerationCapability\": {\n            \"type\": \"Boolean\",\n            \"value\": \"true\"\n          }\n        }\n      },\n      {\n        \"name\": \"Powertrain\",\n        \"type\": \"Component\",\n        \"requiredInterfaces\": [\n          {\n            \"name\": \"TorqueGeneration\",\n           ",
    "\n```sysml\n{\n  \"VehicleSafetyAndAntiTheftFunctionCatalogue\": {\n    \"description\": \"This Vehicle Safety and Anti-theft Function Catalogue is intended to standardize the basic configuration requirements for key vehicle components in terms of safety and anti-theft performance.\",\n    \"features\": [\n      {\n        \"type\": \"safety\",\n        \"components\": [\n          {\n            \"name\": \"front seat belts\",\n            \"description\": \"basic safety components\",\n            \"mandatory\": true\n          },\n          {\n            \"name\": \"bumpers\",\n            \"description\": \"basic safety components\",\n            \"mandatory\": true\n          },\n          {\n            \"name\": \"driver’s airbag\",\n            \"description\": \"safety features\",\n            \"mandatory\": false\n          },\n          {\n            \"name\": \"anti-lock braking system\",\n            \"description\": \"safety features\",\n            \"mandatory\": false\n          }\n        ]\n      },\n      {\n        \"type\": \"anti-theft\",\n        \"components\": [\n          {\n            \"name\": \"alarm system\",\n",
    "\n```sysml\n{\n  \"system\": {\n    \"name\": \"Fuel Supply and Return Management System\",\n    \"description\": \"This system is designed to provide complete fuel supply and return management functions for vehicles.\",\n    \"components\": [\n      {\n        \"name\": \"Fuel Tank Assembly\",\n        \"description\": \"Integrates both the fuel pump and the fuel tank.\",\n        \"interfaces\": [\n          {\n            \"name\": \"Fuel Pump\",\n            \"description\": \"Responsible for pressurizing fuel from the tank and delivering it to various fuel-consuming units within the vehicle.\"\n          },\n          {\n            \"name\": \"Return Line\",\n            \"description\": \"Allows unused fuel to return to the tank.\"\n          }\n        ]\n      },\n      {\n        \"name\": \"Fuel Temperature Monitor\",\n        \"description\": \"Monitors and transmits real-time fuel temperature information to ensure the safety and efficiency of fuel transport.\"\n      }\n    ],\n    \"flows\": [\n      {\n        \"name\": \"Fuel Flow\",\n        \"source\": \"Fuel Pump\",\n        \"target\": \"Fuel",
    "\n```sysml\n{\n  System {\n    System {\n      System {\n        System {\n          System {\n            System {\n              System {\n                System {\n                  System {\n                    System {\n                      System {\n                        System {\n                          System {\n                            System {\n                              System {\n                                System {\n                                  System {\n                                    System {\n                                      System {\n                                        System {\n                                          System {\n                                            System {\n                                              System {\n                                                System {\n                                                  System {\n                                                    System {\n                                                      System {\n                                                        System {\n                                                          System {\n                                                            System {\n                                                              System {\n                                                                System {\n                                                                  System {\n                                                                    System {\n                                                                      System {\n                                                                        System {\n                                                                          System {\n                                                                            System {\n                                                                              System {\n                                                                                System {\n                                                                                  System {\n                                                                                    System {\n                                                                                      System {\n                                                                                        System {\n                                                                                          System {\n                                                                                            System {\n                                                                                              System {\n                                                                                                System {\n                                                                                                  System {\n                                                                                                    System {\n                                                                                                      System {\n                                                                                                        System {\n                                                                                                          System {\n                                                                                                            System {\n                                                                                                              System {\n                                                                                                                System {\n                                                                                                                  System",
    "\n```sysml\nSystem {\n  Name = \"Vehicle Safety and Security Component System\"\n  Description = \"The vehicle safety and security component system mainly includes the vehicle’s interior and body assembly parts. The interior is equipped with an alarm system, seat belts, front row seats, and a driver’s airbag, while the body assembly comprises the vehicle body, bumper, and keyless entry system. The safety features are primarily reflected in the configuration of seat belts, airbags, and bumpers, which enhance the protection of the driver and passengers during driving. The security features are realized through the installation of an onboard alarm and a keyless entry system, providing support for anti-theft and convenient access for users. The system integrates safety and security functions, aiming to offer users comprehensive safety protection and a convenient user experience.\"\n\n  Part {\n    Name = \"Interior\"\n    Description = \"The interior is equipped with an alarm system, seat belts, front row seats, and a driver’s airbag.\"\n\n    Part {\n      Name = \"Alarm System\"\n    }\n    Part {\n      Name = \"Seat Belts\"\n    }\n    Part {\n      Name = \"Front Row Seats\"",
    "\n```sysml\n!",
    "\n```sysml\nSystem {\n  Name = \"Automotive ECU Communication and Control Model\"\n  Description = \"This system is designed to implement a typical automotive Electronic Control Unit (ECU) communication and control model, encompassing key components such as the Vehicle Control Unit (VCU) and the Engine Control Unit (ECU). Internal vehicle communication is carried out via the CAN bus, with the Vehicle Control Unit and Engine Control Unit each connected to the CAN bus through their respective Bus Interfaces (BusIF). This enables monitoring and control of both vehicle and engine states. Additionally, the system reserves interfaces for sensor data exchange to support future functional expansion. The entire model aims to reflect the physical connections and information flow among the main modules of modern automotive electronic control systems, ensuring reliable and efficient collaboration among vehicle subsystems, and meeting the comprehensive requirements for safety and performance at the vehicle level.\"\n\n  Component VehicleControlUnit {\n    Name = \"Vehicle Control Unit\"\n    Description = \"The Vehicle Control Unit (VCU) is responsible for monitoring and controlling various vehicle subsystems, including engine, transmission, and other vehicle components.\"\n\n    Port BusIF {\n      Name = \"CAN Bus Interface\"\n      Description = \"Connects the Vehicle Control Unit",
    "\n```sysml\n{\n  System {\n    Name: \"Blood Glucose Meter Safety System\"\n    Description: \"This system ensures high reliability and safety of the blood glucose meter during use. It automatically detects battery status and alerts the user when the battery is depleted or cannot be charged, preventing failure to measure blood glucose levels and potential treatment delays.\"\n    Features {\n      Feature {\n        Name: \"Battery Status Detection\"\n        Description: \"Automatically detects the status of the battery to ensure the blood glucose meter operates correctly.\"\n        Requirements {\n          Requirement {\n            Description: \"The system shall be able to detect when the battery is depleted or cannot be charged.\"\n            Priority: \"High\"\n          }\n        }\n      }\n      Feature {\n        Name: \"User Alert\"\n        Description: \"Alerts the user of battery issues to prevent failures in blood glucose measurement and treatment delays.\"\n        Requirements {\n          Requirement {\n            Description: \"The system shall promptly alert the user when battery issues are detected.\"\n            Priority: \"Critical\"\n          }\n        }\n      }\n      Feature {\n        Name: \"Emergency Response\"\n        Description: \"Implements",
    "\n```sysml\nPackage CONSTANTS {\n  PackageElement e = 2.71828182845904523536;\n  PackageElement pi = 3.14159265358979323846;\n  PackageElement c = 299792458 m/s;\n  PackageElement alpha = 7.2973525693e-3;\n  PackageElement me_over_mp = 5.4461702178e-4;\n  PackageElement g_Earth = 9.80665 m/s^2;\n  PackageElement amplifier_gain = 20 dB;\n}\n```",
    "\n```sysml\n! ------------------------------------------------------------\n! Part: Tire\n! ------------------------------------------------------------\n\n! Define the Tire part\n! ------------------------------------------------------------\n! Class: Tire\n! ------------------------------------------------------------\n! Attributes:\n! - manufacturer: String\n! - rimDiameter: Real\n! - width: Integer\n\n! ------------------------------------------------------------\n! Example:\n! ------------------------------------------------------------\n! Instance: Tire\n! - manufacturer: \"Michelin\"\n! - rimDiameter: 18.0\n! - width: 245\n```\n\n```sysml\n! ------------------------------------------------------------\n! Part: Tire\n! ------------------------------------------------------------\n\n! Define the Tire part\n! ------------------------------------------------------------\n! Class: Tire\n! ------------------------------------------------------------\n! Attributes:\n! - manufacturer: String\n! - rimDiameter: Real\n! - width: Integer\n\n! ------------------------------------------------------------\n! Example:\n! ------------------------------------------------------------\n! Instance: Tire\n! - manufacturer: \"Michelin\"\n! - rimDiameter: 18.0\n! - width: 245\n```",
    "\n```sysml\n{\n  SystemDefinition : AutomotiveComponentModel\n  {\n    System : Vehicle\n    {\n      Mass : 1200 kilograms\n      Length : 4.82 meters\n      Part : FrontWheel\n      {\n        Quantity : 2\n        Each :\n        {\n          Part : Wheel\n          {\n            HubDiameter : 18 inches\n            Width : 245 millimeters\n            Tire :\n            {\n              TireHeight : [calculated from OuterDiameter and HubDiameter]\n              OuterDiameter : [calculated from HubDiameter and TireHeight]\n            }\n          }\n        }\n      }\n    }\n  }\n}\n```",
    "\n```sysml\n{\n  \"system\": {\n    \"name\": \"VehiclePowertrainConfiguration\",\n    \"properties\": [\n      {\n        \"name\": \"engineType\",\n        \"type\": \"string\",\n        \"values\": [\"four-cylinder\", \"six-cylinder\"]\n      },\n      {\n        \"name\": \"transmissionType\",\n        \"type\": \"string\",\n        \"values\": [\"manual\", \"automatic\"]\n      }\n    ],\n    \"constraints\": [\n      {\n        \"condition\": \"if (highPerformance) { engineType == 'six-cylinder' } else { engineType == 'four-cylinder' }\",\n        \"description\": \"Determine engine type based on vehicle performance.\"\n      },\n      {\n        \"condition\": \"engineType == 'four-cylinder' -> transmissionType == 'manual'\",\n        \"description\": \"Four-cylinder engine must be paired with a manual transmission.\"\n      },\n      {\n        \"condition\": \"engineType == 'six-cylinder' -> transmissionType == 'automatic'\",\n        \"description\": \"Six-cylinder engine must be paired with an automatic transmission.\"\n      }\n",
    "\n```sysml\n{\n  System mySystem {\n    System myCar {\n      System myWheels {\n        System myWheelAssembly {\n          System myWheel {\n            Property myRimDiameter {\n              ValueType = Integer\n              Unit = \"inch\"\n              DefaultValue = 18\n            }\n            Property myTireWidth {\n              ValueType = Integer\n              Unit = \"mm\"\n              DefaultValue = 245\n            }\n            Property myTireHeight {\n              ValueType = Integer\n              Unit = \"mm\"\n              DefaultValue = 45\n            }\n            Property myTireOuterDiameter {\n              ValueType = Integer\n              Unit = \"mm\"\n              Calculation = \"myTireWidth * myTireHeight\"\n            }\n            Property myTreadDepth {\n              ValueType = Real\n              Unit = \"mm\"\n              DefaultValue = 6.0\n            }\n            Property myMinTreadDepth {\n              ValueType = Real\n              Unit = \"mm\"\n              DefaultValue = 3.5\n            }\n            Property myBrakeDiscRadius {\n             ",
    "\n```sysml\n{\n  \"system\": {\n    \"name\": \"Automotive Fuel System\",\n    \"components\": [\n      {\n        \"name\": \"Fuel Tank Assembly\",\n        \"interfaces\": [\n          {\n            \"name\": \"Outlet Interface\",\n            \"direction\": \"Out\",\n            \"description\": \"Provides an outlet for fuel delivery and return.\"\n          }\n        ],\n        \"subsystems\": [\n          {\n            \"name\": \"Fuel Pump\",\n            \"interfaces\": [\n              {\n                \"name\": \"Fuel Supply Interface\",\n                \"direction\": \"Out\",\n                \"description\": \"Pumps fuel from the fuel tank and supplies it to the engine.\"\n              },\n              {\n                \"name\": \"Return Fuel Interface\",\n                \"direction\": \"In\",\n                \"description\": \"Receives returned fuel.\"\n              }\n            ]\n          }\n        ]\n      },\n      {\n        \"name\": \"Fuel Tank\",\n        \"interfaces\": [\n          {\n            \"name\": \"Fuel Supply Interface\",\n            \"direction\": \"In\",\n            \"description\": \"",
    "\n```sysml\n!",
    "\n```sysml\n!",
    "\n```sysml\n{\n  \"system\": {\n    \"name\": \"Car Headlamp Tilt Adjustment Verification System\",\n    \"description\": \"This system is used to verify and validate the parameters of the car headlamp tilt adjustment knob, ensuring that the adjusted beam tilt angle falls within a reasonable range. Specifically, the tilt angle of the headlamp beam (measured in degrees) must be between 50 degrees and 80 degrees; any value outside this range does not comply with safety and regulatory standards.\",\n    \"components\": [\n      {\n        \"name\": \"Headlamp Tilt Adjustment Knob\",\n        \"type\": \"Actuator\",\n        \"description\": \"A knob used to adjust the tilt angle of the car headlamp beam.\",\n        \"properties\": [\n          {\n            \"name\": \"Tilt Angle\",\n            \"type\": \"Real\",\n            \"unit\": \"degrees\",\n            \"range\": {\n              \"min\": 50,\n              \"max\": 80\n            }\n          }\n        ]\n      },\n      {\n        \"name\": \"Beam Tilt Angle Measurement System\",\n        \"type\": \"Sensor",
    "\n```sysml\n!Model: DataTypeManagement\n\n!Package: DataTypes\n\n!Class: CoreDataType\n!Description: Represents a core data type supported by the system.\n!Attribute: name String\n!Attribute: type Enum {\n    UNSIGNED_INTEGER,\n    UNSIGNED_FLOATING_POINT,\n    DATE_TIME,\n    STRING,\n    BOOLEAN\n}\n!Attribute: constraints String\n!Attribute: valueRange String\n!Attribute: status Color\n\n!Class: Color\n!Description: Represents a color used for status labeling.\n!Attribute: name String\n!Attribute: code String\n\n!Class: Status\n!Description: Represents a status with a corresponding color.\n!Attribute: name String\n!Attribute: color Color\n\n!Class: PhysicalDimension\n!Description: Represents a physical dimension with a diameter parameter.\n!Attribute: diameter Integer\n!Attribute: options Enum {\n    SMALL,\n    MEDIUM,\n    LARGE\n}\n!Attribute: defaultOption SMALL\n\n!Class: System\n!Description: The system that manages the data types.\n!Package: DataTypes\n!Package: StatusColors\n\n!Association: System uses StatusColors.",
    "\n```sysml\n{\n  System {\n    Name = \"SparePartsManagementSystem\"\n    Description = \"A system to manage spare parts, personnel, and various related collections.\"\n\n    Package {\n      Name = \"Collections\"\n\n      Class {\n        Name = \"SparePart\"\n        Description = \"Represents a spare part.\"\n      }\n\n      Class {\n        Name = \"IntegerList\"\n        Description = \"A list of integers.\"\n        Attribute {\n          Name = \"items\"\n          Type = List<Integer>\n          Description = \"The list of integers.\"\n        }\n      }\n\n      Class {\n        Name = \"StringSet\"\n        Description = \"A set of strings.\"\n        Attribute {\n          Name = \"items\"\n          Type = Set<String>\n          Description = \"The set of strings.\"\n        }\n      }\n\n      Class {\n        Name = \"Person\"\n        Description = \"Represents a person.\"\n        Attribute {\n          Name = \"name\"\n          Type = String\n          Description = \"The name of the person.\"\n        }\n      }\n\n      Class {",
    "\n```sysml\n{\n  \"type\": \"System\",\n  \"name\": \"TireInformationSystem\",\n  \"ownedMembers\": [\n    {\n      \"type\": \"Class\",\n      \"name\": \"Tire\",\n      \"ownedAttributes\": [\n        {\n          \"type\": \"Attribute\",\n          \"name\": \"manufacturer\",\n          \"ownedType\": \"String\",\n          \"isOrdered\": false,\n          \"isUnique\": true\n        },\n        {\n          \"type\": \"Attribute\",\n          \"name\": \"rimDiameter\",\n          \"ownedType\": \"Integer\",\n          \"isOrdered\": false,\n          \"isUnique\": false\n        },\n        {\n          \"type\": \"Attribute\",\n          \"name\": \"tireWidth\",\n          \"ownedType\": \"Integer\",\n          \"isOrdered\": false,\n          \"isUnique\": false\n        },\n        {\n          \"type\": \"Attribute\",\n          \"name\": \"installationPosition\",\n          \"ownedType\": \"Tuple\",\n          \"isOrdered\": false,\n          \"isUnique\": false,\n          \"ownedMembers\": [\n            {",
    "\n```sysml\n{\n  \"System\": {\n    \"Name\": \"Spacecraft Trajectory Sampling System\",\n    \"Description\": \"The system is designed to sample and record the trajectory of the spacecraft during the ascent phase. It uses mission liftoff time as the reference time zero, measured in seconds, and can take the UTC liftoff time of the mission for reference. The system collects key parameters including the position and velocity of the spacecraft at different time points.\",\n    \"Components\": [\n      {\n        \"Name\": \"Trajectory Sampler\",\n        \"Description\": \"The component responsible for sampling the trajectory of the spacecraft, including position and velocity data at different time points.\",\n        \"Interfaces\": [\n          {\n            \"Name\": \"Position Data Interface\",\n            \"Description\": \"Interface for providing position data of the spacecraft.\",\n            \"DataFormat\": \"Cartesian coordinates (x, y, z) in meters.\"\n          },\n          {\n            \"Name\": \"Velocity Data Interface\",\n            \"Description\": \"Interface for providing velocity data of the spacecraft.\",\n            \"DataFormat\": \"Cartesian coordinates (x, y, z) in meters per second.\"\n          },\n",
    "\n```sysml\nSystem {\n  Name: \"Alloy Properties Management System\"\n  Description: \"Supports the modeling and management of alloy-related properties and their constituent metals in the field of materials science.\"\n  SystemElements {\n    Material {\n      Name: \"Component Material\"\n      Description: \"Defines and manages the basic characteristics of different substances, materials, and metals.\"\n      Properties {\n        Property {\n          Name: \"Atomic Mass\"\n          Description: \"Represents the atomic mass of a substance.\"\n          DataType: \"Real\"\n          Unit: \"kilogram per mole\"\n        }\n        Property {\n          Name: \"Mass Fraction\"\n          Description: \"Represents the mass fraction of a component material in an alloy.\"\n          DataType: \"Real\"\n          Unit: \"percentage\"\n        }\n      }\n    }\n    Material {\n      Name: \"Alloy\"\n      Description: \"Represents an alloy composed of two or more materials combined according to specified mass fractions.\"\n      Properties {\n        Property {\n          Name: \"Tensile Strength\"\n          Description: \"Represents the tensile strength of the alloy.\"\n          DataType",
    "\n```sysml\n{\n  System {\n    Name: \"Engineering Materials Database System\"\n    Description: \"The system is designed to model and manage various types of engineering materials, including metals and their alloys. It supports the description of fundamental properties of materials, such as atomic mass, compositional information, and mechanical property indicators. The system can define detailed compositional information, including the mass fraction of each constituent material, and supports standardized and dimensional management of parameters like tensile strength, which can be represented and converted using commonly used engineering units.\"\n    SystemPart {\n      Name: \"Materials Database\"\n      Description: \"The core component of the system, responsible for storing and managing data related to engineering materials.\"\n      SystemFeature {\n        Name: \"Material Modeling\"\n        Description: \"Capability to model various types of engineering materials, including metals and their alloys.\"\n        SystemFeature {\n          Name: \"Compositional Information\"\n          Description: \"Support for the description of compositional information, including mass fractions of each constituent material.\"\n          SystemFeature {\n            Name: \"Atomic Mass\"\n            Description: \"Recording of atomic mass for materials.\"\n          }\n          SystemFeature {\n            Name:",
    "\n```sysml\n! ------------------------------------------------------------\n! System: PubSubSystem\n! ------------------------------------------------------------\n\n! Define the system\nSystem PubSubSystem {\n\n    ! Define the components\n    Component PubSubServer {\n        ! Description: The server acts as a central hub for message distribution.\n        ! It maintains topic subscriptions and delivers messages to subscribers.\n    }\n\n    Component MessageProducer {\n        ! Description: Producers publish messages to the server.\n        ! They specify the topic and content of the message.\n    }\n\n    Component MessageConsumer {\n        ! Description: Consumers subscribe to specific topics and receive messages from the server.\n    }\n\n    ! Define the relationships\n    PublishesTo {\n        MessageProducer -> PubSubServer : publishes messages\n    }\n\n    SubscribesTo {\n        MessageConsumer -> PubSubServer : subscribes to topics\n    }\n\n    ! Define the interactions\n    Interaction PublishMessageInteraction {\n        ! Description: This interaction models the process of a producer publishing a message.\n        Participant MessageProducer\n        Participant PubSubServer\n        Participant Message\n\n        ! Define the sequence of actions\n        Sequence {\n           ",
    "\n```sysml\n{\n  System {\n    Name = \"Vehicle Fuel System\"\n    Description = \"This system describes the basic structure and operating principles of a vehicle fuel system.\"\n    SystemElements {\n      SystemElement {\n        Name = \"Fuel Tank Assembly\"\n        Description = \"The fuel tank assembly is responsible for supplying fuel to the engine.\"\n        SystemElements {\n          SystemElement {\n            Name = \"Fuel Tank\"\n            Description = \"The fuel tank stores fuel for the engine.\"\n            SystemElements {\n              SystemElement {\n                Name = \"Fuel Lines\"\n                Description = \"Fuel lines connect the fuel tank to the engine.\"\n                SystemElements {\n                  SystemElement {\n                    Name = \"Fuel Pump\"\n                    Description = \"The fuel pump is responsible for transferring fuel from the fuel tank to the engine.\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n      SystemElement {\n        Name = \"Engine\"\n        Description = \"The engine is connected to the fuel tank through fuel lines to receive fuel.\"\n        SystemElements {\n          SystemElement {\n            Name = \"Fuel Inject",
    "\n```sysml\n! ------------------------------------------------------------\n! System: Publish-Subscribe Message Flow Architecture\n! ------------------------------------------------------------\n\n! Define the system\nSystem PublishSubscribeSystem\n{\n    ! Define the system's components\n    Component Producer\n    {\n        ! Define the Producer's properties\n        Property TopicMessage : String\n    }\n\n    Component Consumer\n    {\n        ! Define the Consumer's properties\n        Property SubscribedTopic : String\n    }\n\n    Component Server\n    {\n        ! Define the Server's properties\n        Property MessageQueue : List(TopicMessage)\n    }\n\n    ! Define the system's interactions\n    Interaction PublishMessageInteraction\n    {\n        ! Define the interaction's participants\n        Participant Producer\n        Participant Server\n\n        ! Define the interaction's steps\n        Step PublishStep\n        {\n            ! Define the step's description\n            Description: \"Producer publishes a message to the server.\"\n            Action: Publish(TopicMessage) from Producer to Server\n        }\n    }\n\n    Interaction SubscribeInteraction\n    {\n        ! Define the interaction's participants\n        Participant Consumer\n        Participant Server\n\n",
    "\n```sysml\nSystem {\n  Name = \"Transportation Service System\"\n  Description = \"This system provides transportation services for users, ensuring efficient and safe travel.\"\n\n  SystemPart {\n    Name = \"Vehicle\"\n    Description = \"The vehicle is designed to transport users, including the driver and up to four passengers.\"\n\n    SystemFunction {\n      Name = \"User Boarding\"\n      Description = \"Allows users to enter the vehicle.\"\n    }\n\n    SystemFunction {\n      Name = \"Travel Operation\"\n      Description = \"The driver operates the vehicle to complete travel tasks.\"\n    }\n\n    SystemFunction {\n      Name = \"Fuel Level Monitoring\"\n      Description = \"Monitors the fuel level to ensure it does not fall below 10% of the maximum tank capacity.\"\n\n      SystemRequirement {\n        Name = \"Refueling\"\n        Description = \"If the fuel level falls below 10% of the maximum tank capacity, the driver must refuel at a gas station to continue operating.\"\n      }\n    }\n\n    SystemFunction {\n      Name = \"Environmental Consideration\"\n      Description = \"Takes environmental factors",
    "\n```sysml\n{\n  \"System\": {\n    \"name\": \"Fuel Supply and Return Management System\",\n    \"description\": \"This system provides fuel supply and return management functions for vehicles.\",\n    \"components\": [\n      {\n        \"name\": \"Fuel Tank Assembly\",\n        \"description\": \"The fuel tank supplies fuel to the engine through a fuel outlet port that connects to the engine’s fuel inlet port, and can also receive fuel return from the engine.\",\n        \"ports\": [\n          {\n            \"name\": \"Fuel Outlet Port\",\n            \"description\": \"Connects to the engine’s fuel inlet port for fuel supply.\",\n            \"attributes\": [\n              {\n                \"name\": \"Fuel Temperature\",\n                \"description\": \"Ensures that the fuel temperature can be monitored in real time during the supply process.\"\n              }\n            ]\n          },\n          {\n            \"name\": \"Fuel Return Port\",\n            \"description\": \"Receives fuel return from the engine.\",\n            \"attributes\": [\n              {\n                \"name\": \"Fuel Temperature\",\n                \"description\": \"Ensures that the fuel temperature can be",
    "\n```sysml\n{\n  \"system\": {\n    \"name\": \"Vehicle Fuel System Management\",\n    \"components\": [\n      {\n        \"name\": \"Fuel Tank Assembly\",\n        \"properties\": [\n          {\n            \"name\": \"Fuel Tank\",\n            \"type\": \"FuelTank\"\n          }\n        ],\n        \"ports\": [\n          {\n            \"name\": \"Fuel Supply Port\",\n            \"direction\": \"out\",\n            \"type\": \"FuelFlow\"\n          },\n          {\n            \"name\": \"Fuel Return Port\",\n            \"direction\": \"in\",\n            \"type\": \"FuelFlow\"\n          }\n        ]\n      },\n      {\n        \"name\": \"Engine\",\n        \"ports\": [\n          {\n            \"name\": \"Fuel Supply Port\",\n            \"direction\": \"in\",\n            \"type\": \"FuelFlow\"\n          },\n          {\n            \"name\": \"Fuel Return Port\",\n            \"direction\": \"out\",\n            \"type\": \"FuelFlow\"\n          }\n        ]\n      }\n   ",
    "\n```sysml\n{\n  \"system\": {\n    \"name\": \"PhotoCaptureSystem\",\n    \"description\": \"The system enables users to obtain photos from real-world scenes.\",\n    \"components\": [\n      {\n        \"name\": \"SceneSelection\",\n        \"description\": \"Allows user to select a scene they wish to capture.\"\n      },\n      {\n        \"name\": \"AutoFocus\",\n        \"description\": \"Automatically performs focusing for the selected scene.\"\n      },\n      {\n        \"name\": \"IntermediateImage\",\n        \"description\": \"Generates an intermediate image after focusing.\"\n      },\n      {\n        \"name\": \"PhotoCapture\",\n        \"description\": \"Captures and outputs the final photo based on the focused image.\"\n      }\n    ],\n    \"interactions\": [\n      {\n        \"description\": \"User selects a scene to capture.\",\n        \"trigger\": \"SceneSelection.selectScene\",\n        \"response\": \"AutoFocus.performFocus\"\n      },\n      {\n        \"description\": \"System performs focusing on the selected scene.\",\n        \"trigger\": \"AutoFocus.focusComplete\",\n       ",
    "\n```sysml\n{\n  \"system\": {\n    \"name\": \"Photography Workflow System\",\n    \"description\": \"Supports the photography workflow, enabling the complete process from focusing on a scene to producing the final image.\",\n    \"components\": [\n      {\n        \"name\": \"Scene Selector\",\n        \"description\": \"Allows the user to select or set a scene to be photographed.\"\n      },\n      {\n        \"name\": \"Focusing Module\",\n        \"description\": \"Automatically performs focusing on the selected scene and generates an intermediate image.\"\n      },\n      {\n        \"name\": \"Shooting Module\",\n        \"description\": \"Carries out the shooting operation based on the focused image, thereby outputting the final photograph.\"\n      }\n    ],\n    \"interactions\": [\n      {\n        \"name\": \"Focusing and Shooting Sequence\",\n        \"description\": \"The workflow is completed sequentially through the two steps of “Focusing” and “Shooting,” ensuring that the image has achieved clear focus before shooting and resulting in high-quality photo output.\",\n        \"steps\": [\n          {\n            \"name\": \"Select Scene\",",
    "\n```sysml\n!Model (\n  name = \"Photography Workflow Support System\",\n  elements = [\n    !System (\n      name = \"Photography Workflow Support System\",\n      elements = [\n        !RequiredFeature (\n          name = \"Select Scene\",\n          description = \"Allows the user to select a specific scene for photography.\",\n          appliesTo = [!Class (name = \"User\")],\n          triggers = [\n            !Event (\n              name = \"Scene Selected\",\n              description = \"Triggered when the user selects a specific scene.\",\n              occursIn = [!Class (name = \"System\")]\n            )\n          ]\n        ),\n        !RequiredFeature (\n          name = \"Focus Scene\",\n          description = \"Performs a focusing process on the selected scene to generate an image.\",\n          appliesTo = [!Class (name = \"System\")],\n          triggers = [\n            !Event (\n              name = \"Focus Completed\",\n              description = \"Triggered when the focusing process is completed.\",\n              occursIn = [!Class (name = \"System\")]\n            )\n          ]\n        ),\n        !RequiredFeature (",
    "\n```sysml\n{\n  \"system\": {\n    \"name\": \"Photography Automation System\",\n    \"description\": \"This system is designed to automate the photography process. Users only need to provide a shooting scene, and the system will first perform focus processing on the scene to generate an image suitable for shooting. It will then convert the image into a photograph through a shooting operation. The entire process is seamlessly integrated, requiring no in-depth user intervention in focusing or shooting details. This simplifies the photography workflow, helping users obtain the final photograph easily and efficiently.\",\n    \"components\": [\n      {\n        \"name\": \"Focus Processing Module\",\n        \"description\": \"This module is responsible for performing focus processing on the shooting scene to generate an image suitable for shooting.\",\n        \"type\": \"Software\"\n      },\n      {\n        \"name\": \"Shooting Module\",\n        \"description\": \"This module is responsible for converting the image into a photograph through a shooting operation.\",\n        \"type\": \"Software\"\n      }\n    ],\n    \"interactions\": [\n      {\n        \"description\": \"The system receives a shooting scene from the user, processes it through the focus processing module to generate",
    "\n```sysml\n! ------------------------------------------------------------\n! System: PhotographyWorkflow\n! Author: [Your Name]\n! Date: [Date]\n! ------------------------------------------------------------{\n  System {\n    Name: PhotographyWorkflow\n    Description: \"Automated photography workflow system.\"\n    {\n      System {\n        Name: PhotographyWorkflow\n        Description: \"Automated photography workflow system.\"\n        {\n          System {\n            Name: PhotographyWorkflow\n            Description: \"Automated photography workflow system.\"\n            {\n              System {\n                Name: PhotographyWorkflow\n                Description: \"Automated photography workflow system.\"\n                {\n                  System {\n                    Name: PhotographyWorkflow\n                    Description: \"Automated photography workflow system.\"\n                    {\n                      System {\n                        Name: PhotographyWorkflow\n                        Description: \"Automated photography workflow system.\"\n                        {\n                          System {\n                            Name: PhotographyWorkflow\n                            Description: \"Automated photography workflow system.\"\n                            {\n                              System {\n                                Name: PhotographyWorkflow\n                                Description: \"Automated photography workflow system.\"\n                                {\n                                  System {\n                                    Name: PhotographyWorkflow\n                                    Description: \"Automated photography workflow system.\"\n                                    {\n                                      System {\n                                       ",
    "\n```sysml\n!Model : PhotographyWorkflowModel\n{\n  !System : PhotographySystem\n  {\n    !RequiredFeature : SelectScene\n    {\n      !Description : \"Allows users to select a scene for photography.\"\n    }\n    !RequiredFeature : FocusScene\n    {\n      !Description : \"Focuses the selected scene to ensure optimal image sharpness.\"\n    }\n    !RequiredFeature : CheckFocus\n    {\n      !Description : \"Checks if the focus is clear to proceed with taking the photo.\"\n    }\n    !RequiredFeature : TakePhoto\n    {\n      !Description : \"Takes a photo of the focused scene, generating the final image.\"\n    }\n  }\n  !Feature : PhotographyWorkflow\n  {\n    !IncludeFeature : SelectScene\n    !IncludeFeature : FocusScene\n    !IncludeFeature : CheckFocus\n    !IncludeFeature : TakePhoto\n  }\n}\n```",
    "\n```sysml\nSystem {\n  Name = \"Photography Workflow System\"\n  Description = \"Supports users in capturing high-quality photographs.\"\n\n  Features {\n    Feature {\n      Name = \"Scene Selection\"\n      Description = \"Allows users to select a scene.\"\n    }\n    Feature {\n      Name = \"Focusing\"\n      Description = \"Performs focusing on the selected scene.\"\n\n      Parameters {\n        Parameter {\n          Name = \"FocusedImage\"\n          Description = \"The image after focusing.\"\n        }\n      }\n    }\n    Feature {\n      Name = \"Image Evaluation\"\n      Description = \"Evaluates the focus quality of the generated image.\"\n\n      Parameters {\n        Parameter {\n          Name = \"IsWellFocused\"\n          Description = \"Indicates whether the image is well-focused.\"\n        }\n      }\n    }\n    Feature {\n      Name = \"Shooting Operation\"\n      Description = \"Proceeds with the shooting operation if the image is well-focused.\"\n    }\n    Feature {\n      Name = \"Image Conversion\"\n      Description = \"Converts the focused image into a photograph.\"\n",
    "\n```sysml\n{\n  \"system\": {\n    \"name\": \"Photography Workflow System\",\n    \"components\": [\n      {\n        \"name\": \"Scene Acquisition Module\",\n        \"description\": \"Acquires the current shooting scene.\"\n      },\n      {\n        \"name\": \"Focus Function Module\",\n        \"description\": \"Automatically performs the focusing process based on the acquired scene.\"\n      },\n      {\n        \"name\": \"Image Processing Module\",\n        \"description\": \"Generates an image based on the focused scene.\"\n      },\n      {\n        \"name\": \"Shooting Operation Module\",\n        \"description\": \"Executes the shooting operation to produce the final photograph.\"\n      },\n      {\n        \"name\": \"Photo Display Module\",\n        \"description\": \"Displays the resulting photo immediately after shooting.\"\n      }\n    ],\n    \"interactions\": [\n      {\n        \"trigger\": \"take photo\",\n        \"description\": \"The user triggers the 'take photo' operation once.\",\n        \"steps\": [\n          {\n            \"step\": 1,\n            \"description\": \"The Scene Acquisition Module acquires the",
    "\n```sysml\nSystem {\n  Name = \"Automatic Braking Control System\"\n  Description = \"This system provides automatic braking control functions for vehicles. When the user turns the vehicle key to the start position, the system is automatically activated and continuously monitors the status of the brake pedal as well as traction information such as road adhesion. By detecting the brake pressure generated when the driver presses the brake pedal and evaluating traction variations under different road conditions, the system can intelligently adjust the brake pressure and modulation frequency during the braking process. This ensures that the vehicle achieves safe and reliable braking performance under various operating conditions, thereby enhancing driving safety and comfort. The entire process is automatically monitored and dynamically regulated without user intervention, ensuring that the braking system always operates in its optimal state.\"\n\n  SystemPart {\n    Name = \"Brake Pedal Sensor\"\n    Description = \"Monitors the status of the brake pedal.\"\n  }\n\n  SystemPart {\n    Name = \"Traction Information Sensor\"\n    Description = \"Monitors traction information such as road adhesion.\"\n  }\n\n  SystemPart {\n    Name = \"Brake Pressure Sensor\"\n    Description = \"Detects the brake pressure generated when the driver presses the brake pedal",
    "\n```sysml\n{\n  \"system\": {\n    \"name\": \"Battery Charging Control System\",\n    \"description\": \"This system is designed for automatic monitoring and control of the battery charging process, ensuring that the battery can be safely and efficiently fully charged.\",\n    \"features\": [\n      {\n        \"name\": \"Battery Capacity Monitoring\",\n        \"description\": \"Monitor the current battery level in real time.\"\n      },\n      {\n        \"name\": \"Automatic Charging\",\n        \"description\": \"Automatically supply charge when the battery level is below 100%.\"\n      },\n      {\n        \"name\": \"Charging Termination Control\",\n        \"description\": \"Automatically terminate the charging process when the battery level reaches or exceeds 100%, without manual intervention.\"\n      }\n    ]\n  }\n}\n```",
    "\n```sysml\n{\n  \"system\": {\n    \"name\": \"Battery Charging System\",\n    \"components\": [\n      {\n        \"name\": \"Battery Level Monitor\",\n        \"type\": \"Sensor\",\n        \"properties\": {\n          \"measurement\": \"Battery Level\",\n          \"unit\": \"%\"\n        }\n      },\n      {\n        \"name\": \"Battery Charger\",\n        \"type\": \"Actuator\",\n        \"properties\": {\n          \"control\": \"Charge\",\n          \"status\": \"On/Off\"\n        }\n      }\n    ],\n    \"interactions\": [\n      {\n        \"source\": \"Battery Level Monitor\",\n        \"target\": \"Battery Charger\",\n        \"type\": \"DataFlow\",\n        \"data\": \"Battery Level\"\n      }\n    ],\n    \"states\": [\n      {\n        \"name\": \"Charging\",\n        \"transitions\": [\n          {\n            \"trigger\": \"Battery Level < 100%\",\n            \"action\": \"Replenish Battery\",\n            \"target\": \"Charging\"\n          },\n          {\n            \"",
    "\n```sysml\n{\n  \"System\": {\n    \"Name\": \"Camera System\",\n    \"Description\": \"This system is designed to implement a camera function capable of taking photos of various scenes. The system includes automatic focusing on objects within the scene and the imaging process. When the user selects a scene, the camera first obtains a clear and realistic image through the autofocus subsystem. Afterwards, the imaging subsystem captures this image as a photograph. All photos taken are recorded and saved by the system. Users do not need to concern themselves with the internal technical details; they only need to select or confirm the scene to be photographed, and the camera will automatically complete the focusing and imaging operations to generate high-quality photos for the user.\",\n    \"Components\": [\n      {\n        \"Name\": \"Autofocus Subsystem\",\n        \"Description\": \"Obtains a clear and realistic image through automatic focusing on objects within the scene.\",\n        \"Interfaces\": [\n          {\n            \"Name\": \"Focus Control\",\n            \"Description\": \"Allows user to select or confirm the scene for automatic focusing.\"\n          }\n        ]\n      },\n      {\n        \"Name\": \"Imaging Subsystem\",\n        \"Description",
    "\n```sysml\n{\n  \"system\": {\n    \"name\": \"Digital Camera\",\n    \"description\": \"This system is designed to implement the shooting process of a digital camera, enabling users to complete the entire procedure from viewfinding and focusing to imaging with a single, simple operation.\",\n    \"features\": [\n      {\n        \"name\": \"Viewfinding and Focusing\",\n        \"description\": \"Users can select the shooting scene, and the camera will automatically focus on the selected scene.\"\n      },\n      {\n        \"name\": \"Imaging\",\n        \"description\": \"After focusing, the camera generates an image that meets the requirements, and the imaging module captures and produces the final photo.\"\n      }\n    ],\n    \"requirements\": [\n      {\n        \"type\": \"Functional\",\n        \"description\": \"The camera shall enable users to complete the shooting process with a single operation.\"\n      },\n      {\n        \"type\": \"Non-Functional\",\n        \"description\": \"The system shall ensure an efficient and convenient shooting experience and output high-quality photos.\"\n      }\n    ]\n  }\n}\n```",
    "\n```sysml\n{\n  \"name\": \"VehicleSimulation\",\n  \"properties\": [\n    {\n      \"name\": \"vehicleMass\",\n      \"type\": \"Real\",\n      \"description\": \"The mass of the vehicle.\"\n    },\n    {\n      \"name\": \"initialPosition\",\n      \"type\": \"Real\",\n      \"description\": \"The initial position of the vehicle.\"\n    },\n    {\n      \"name\": \"initialVelocity\",\n      \"type\": \"Real\",\n      \"description\": \"The initial velocity of the vehicle.\"\n    },\n    {\n      \"name\": \"timeStep\",\n      \"type\": \"Real\",\n      \"description\": \"The time interval of each simulation step.\"\n    },\n    {\n      \"name\": \"powerInput\",\n      \"type\": \"Sequence\",\n      \"elementType\": \"Real\",\n      \"description\": \"The power input at each time step.\"\n    }\n  ],\n  \"diagrams\": [\n    {\n      \"name\": \"VehicleSimulationDiagram\",\n      \"elements\": [\n        {\n          \"name\": \"Simulation\",\n          \"type\": \"",
    "\n```sysml\n!Model \"Camera System\"\n  !Package \"Camera\"\n    !Class \"Camera\"\n      !Attribute \"Scene scene\"\n      !Operation \"void Focus()\"\n      !Operation \"void Capture()\"\n      !Operation \"void Display()\"\n    !Package \"Camera\"\n      !Class \"Scene\"\n        !Attribute \"String description\"\n```\n",
    "\n```sysml\n!Model (\n  name: \"Camera Information Processing Workflow\",\n  ownedElement: [\n    !System (\n      name: \"Camera System\",\n      ownedAttribute: [\n        !Attribute (\n          name: \"viewPort\",\n          type: String,\n          visibility: Public\n        ),\n        !Attribute (\n          name: \"displayPort\",\n          type: String,\n          visibility: Public\n        )\n      ],\n      ownedOperation: [\n        !Operation (\n          name: \"selectScene\",\n          ownedParameter: [\n            !Parameter (\n              name: \"scene\",\n              type: String,\n              direction: In\n            )\n          ]\n        ),\n        !Operation (\n          name: \"focusScene\",\n          ownedParameter: [\n            !Parameter (\n              name: \"image\",\n              type: String,\n              direction: Out\n            )\n          ]\n        ),\n        !Operation (\n          name: \"captureImage\",\n          ownedParameter: [\n            !Parameter (\n              name: \"picture\",\n              type: String,\n              direction: Out\n            )\n          ]",
    "\n```sysml\n{\n  \"system\": {\n    \"name\": \"Sensor Management System\",\n    \"components\": [\n      {\n        \"name\": \"Sensor\",\n        \"properties\": [\n          {\n            \"name\": \"status\",\n            \"type\": \"string\"\n          }\n        ],\n        \"operations\": [\n          {\n            \"name\": \"update\",\n            \"parameters\": []\n          }\n        ]\n      },\n      {\n        \"name\": \"SensorManager\",\n        \"properties\": [],\n        \"operations\": [\n          {\n            \"name\": \"registerSensor\",\n            \"parameters\": [\n              {\n                \"name\": \"sensor\",\n                \"type\": \"Sensor\"\n              }\n            ]\n          },\n          {\n            \"name\": \"updateSensors\",\n            \"parameters\": []\n          }\n        ]\n      }\n    ],\n    \"interactions\": [\n      {\n        \"name\": \"SensorReady\",\n        \"source\": \"Sensor\",\n        \"target\": \"SensorManager\",\n        \"trigger\": {\n          \"condition\": \"status == 'ready'\"\n",
    "\n```sysml\n{\n  \"system\": {\n    \"name\": \"Vehicle State Management\",\n    \"description\": \"This system manages the start-up and shutdown states of a vehicle.\",\n    \"states\": [\n      {\n        \"name\": \"off\",\n        \"description\": \"The vehicle is initially in the off state.\"\n      },\n      {\n        \"name\": \"starting\",\n        \"description\": \"The vehicle is switching to the starting state upon receiving a 'vehicle start signal'.\"\n      },\n      {\n        \"name\": \"on\",\n        \"description\": \"The vehicle transitions to the 'on' state when a 'vehicle power-on signal' is received.\"\n      }\n    ],\n    \"transitions\": [\n      {\n        \"trigger\": \"vehicle start signal\",\n        \"source\": \"off\",\n        \"target\": \"starting\"\n      },\n      {\n        \"trigger\": \"vehicle power-on signal\",\n        \"source\": \"starting\",\n        \"target\": \"on\"\n      },\n      {\n        \"trigger\": \"vehicle shutdown signal\",\n        \"source\": [\"starting\", \"on\"],\n       ",
    "\n```sysml\nsystem VehicleManagementSystem\n{\n  // Define the states\n  state off;\n  state starting;\n  state on;\n\n  // Define the signals\n  signal VehicleStartSignal;\n  signal VehicleOnSignal;\n  signal VehicleOffSignal;\n\n  // Define the initial state\n  initial state off;\n\n  // Define the state transitions\n  off -> starting : received VehicleStartSignal;\n  starting -> on : received VehicleOnSignal;\n  on -> off : received VehicleOffSignal;\n}\n```",
    "\n```sysml\n{\n  \"system\": {\n    \"name\": \"Vehicle Power Management System\",\n    \"description\": \"This system manages the power status of a vehicle, enabling automatic switching between different operating states according to various control signals.\",\n    \"components\": [\n      {\n        \"name\": \"Vehicle Off State\",\n        \"description\": \"The vehicle is off and power is not supplied.\"\n      },\n      {\n        \"name\": \"Start Phase\",\n        \"description\": \"The vehicle is starting and transitioning to the powered-on state.\"\n      },\n      {\n        \"name\": \"Vehicle Powered-On State\",\n        \"description\": \"The vehicle is powered on, self-diagnosis operations are performed, and power is continuously supplied to various functional units.\"\n      },\n      {\n        \"name\": \"Vehicle Shutdown Command\",\n        \"description\": \"The user issues a command to shut down the vehicle, triggering safety operations such as parking brake engagement and returning the vehicle to the off state.\"\n      }\n    ],\n    \"interactions\": [\n      {\n        \"trigger\": \"Vehicle Start Command\",\n        \"source\": \"Vehicle Off State\",\n       ",
    "\n```sysml\n{\n  \"System\": {\n    \"Name\": \"Vehicle Management System\",\n    \"States\": [\n      {\n        \"Name\": \"Shutdown\",\n        \"Transitions\": [\n          {\n            \"Trigger\": \"Vehicle Start Signal\",\n            \"Target\": \"Start-Up\"\n          }\n        ]\n      },\n      {\n        \"Name\": \"Start-Up\",\n        \"Transitions\": [\n          {\n            \"Trigger\": \"Vehicle Started Signal\",\n            \"Target\": \"Running\"\n          }\n        ]\n      },\n      {\n        \"Name\": \"Running\",\n        \"Transitions\": [\n          {\n            \"Trigger\": \"Vehicle Shutdown Signal\",\n            \"Target\": \"Shutdown\"\n          }\n        ]\n      }\n    ]\n  }\n}\n```",
    "\n```sysml\n{\n  \"system\": {\n    \"name\": \"Vehicle Power Management System\",\n    \"components\": [\n      {\n        \"name\": \"Power Management Unit\",\n        \"type\": \"Component\",\n        \"properties\": [\n          {\n            \"name\": \"Current State\",\n            \"type\": \"State\",\n            \"value\": \"Off\"\n          }\n        ],\n        \"states\": [\n          {\n            \"name\": \"Off\",\n            \"transitions\": [\n              {\n                \"trigger\": \"start\",\n                \"target\": \"Start\"\n              }\n            ]\n          },\n          {\n            \"name\": \"Start\",\n            \"transitions\": [\n              {\n                \"trigger\": \"on\",\n                \"target\": \"On\"\n              }\n            ]\n          },\n          {\n            \"name\": \"On\",\n            \"transitions\": [\n              {\n                \"trigger\": \"off\",\n                \"target\": \"Off\"\n              }\n            ]\n          }\n        ]\n      }\n    ]\n  }\n}\n```",
    "\n```sysml\n{\n  System {\n    Name = \"Vehicle Health Monitoring System\"\n    Description = \"This system is designed to enable intelligent monitoring and management of vehicle health status.\"\n    SystemFeatures {\n      Feature {\n        Name = \"Temperature Monitoring and Warning\"\n        Description = \"During normal operation, the system automatically senses the current vehicle temperature and compares it with the preset maximum allowable temperature.\"\n        SystemTriggers {\n          Trigger {\n            Name = \"Temperature Exceeds Maximum Allowable Value\"\n            Description = \"If the vehicle temperature exceeds the maximum allowable value, the system promptly sends an over-temperature warning to the vehicle controller and switches the vehicle health status to 'degraded' mode.\"\n            Condition = \"vehicleTemperature > maximumAllowableTemperature\"\n            Actions {\n              Action {\n                Name = \"Send Over-Temperature Warning\"\n                Description = \"Sends an over-temperature warning to the vehicle controller.\"\n              }\n              Action {\n                Name = \"Switch to Degraded Mode\"\n                Description = \"Switches the vehicle health status to 'degraded' mode.\"\n              }\n            }\n          }\n          Trigger {\n            Name = \"Temperature",
    "\n```sysml\n!Model (\n  !Class (\n    Name = \"Server\"\n    !Attribute (\n      Name = \"clock\"\n      Type = \"Clock\"\n    )\n    !Attribute (\n      Name = \"requestPort\"\n      Type = \"RequestPort\"\n    )\n    !Enum (\n      Name = \"State\"\n      !Literal (\n        Name = \"Off\"\n      )\n      !Literal (\n        Name = \"Waiting\"\n      )\n      !Literal (\n        Name = \"Response\"\n      )\n    )\n    !Attribute (\n      Name = \"currentState\"\n      Type = \"State\"\n    )\n  )\n  !StateMachine (\n    Name = \"ServerStateMachine\"\n    InitialState = \"Off\"\n    !State (\n      Name = \"Off\"\n      !Transition (\n        Trigger = \"startup\"\n        Effect = \"currentState = Waiting\"\n        Target = \"Waiting\"\n      )\n    )\n    !State (\n      Name = \"Waiting\"\n      !Transition (\n        Trigger = \"requestReceived\"\n        Effect = \"currentState = Response",
    "\n```sysml\n{\n  System {\n    Name = \"Vehicle Start-Stop Control System\"\n    Description = \"This system is used to control the vehicle’s start-stop process. The vehicle is initially in the off state. Upon receiving a 'start signal,' it enters the start process. During startup, the system will only respond to the 'power-on signal' after detecting that the brake pedal has been depressed, and will simultaneously send a start signal to the controller. Once the vehicle enters the operating state, it will automatically perform a self-check and continuously supply power to the vehicle. When a 'stop signal' is received, the process returns the vehicle to the off state. Upon leaving the operating state, the parking brake will be automatically applied to ensure parking safety. The overall system is designed to ensure the safety and reliability of the vehicle’s start-stop process, as well as coordinated control with the controller.\"\n\n    SystemBoundary {\n      Name = \"Vehicle Start-Stop Control Boundary\"\n\n      SystemPort {\n        Name = \"Start Signal\"\n        Description = \"Indicates the start of the vehicle's start-stop process.\"\n        Type = \"Signal\"\n      }\n\n",
    "\n```sysml\n{\n  \"system\": {\n    \"name\": \"Vehicle Control System\",\n    \"states\": [\n      {\n        \"name\": \"Off\",\n        \"transitions\": [\n          {\n            \"trigger\": \"Vehicle Start Signal\",\n            \"target\": \"Starting Up\"\n          }\n        ]\n      },\n      {\n        \"name\": \"Starting Up\",\n        \"transitions\": [\n          {\n            \"trigger\": \"Brake Pedal Depressed and Vehicle-on Signal\",\n            \"target\": \"Started\"\n          }\n        ]\n      },\n      {\n        \"name\": \"Started\",\n        \"transitions\": [\n          {\n            \"trigger\": \"Self-check Complete\",\n            \"target\": \"Started\"\n          },\n          {\n            \"trigger\": \"Shutdown Signal\",\n            \"target\": \"Off\",\n            \"actions\": [\n              {\n                \"name\": \"Apply Parking Brake\"\n              }\n            ]\n          }\n        ]\n      }\n    ]\n  }\n}\n```",
    "\n```sysml\n{\n  \"system\": {\n    \"name\": \"Cruise Control System\",\n    \"components\": [\n      {\n        \"name\": \"Driver\",\n        \"properties\": [\n          {\n            \"name\": \"Command\",\n            \"type\": \"SetSpeedCommand\"\n          }\n        ],\n        \"events\": [\n          {\n            \"name\": \"ActivateCruise\",\n            \"trigger\": \"Driver.Command\"\n          }\n        ]\n      },\n      {\n        \"name\": \"Cruise Controller\",\n        \"properties\": [\n          {\n            \"name\": \"DesiredSpeed\",\n            \"type\": \"Speed\"\n          },\n          {\n            \"name\": \"ActualSpeed\",\n            \"type\": \"Speed\"\n          }\n        ],\n        \"events\": [\n          {\n            \"name\": \"ReceiveCommand\",\n            \"trigger\": \"Driver.ActivateCruise\"\n          },\n          {\n            \"name\": \"UpdateSpeed\",\n            \"trigger\": \"Speedometer.ReportSpeed\"\n          },\n          {\n            \"name\": \"SendFuelCommand\",\n            \"",
    "\n```sysml\n{\n  \"System\": {\n    \"Name\": \"Cruise Control System\",\n    \"Description\": \"This system is designed to implement the cruise control function for vehicles.\",\n    \"Components\": [\n      {\n        \"Name\": \"Driver Interface\",\n        \"Description\": \"Allows the driver to send a set speed command to the cruise controller.\",\n        \"Interfaces\": [\n          {\n            \"Name\": \"SetSpeedCommand\",\n            \"Description\": \"Command to set the desired speed.\",\n            \"Type\": \"Command\"\n          }\n        ]\n      },\n      {\n        \"Name\": \"Cruise Controller\",\n        \"Description\": \"Receives the set speed command and controls the vehicle speed.\",\n        \"Components\": [\n          {\n            \"Name\": \"Speedometer Interface\",\n            \"Description\": \"Acquires real-time vehicle speed information from the speedometer.\",\n            \"Interfaces\": [\n              {\n                \"Name\": \"VehicleSpeed\",\n                \"Description\": \"Information about the current vehicle speed.\",\n                \"Type\": \"Data\"\n              }\n            ]\n          },\n          {\n            \"Name\":",
    "\n```sysml\nsystem CruiseControlSystem\n{\n  // Define the system's components\n  components\n  {\n    Driver\n    InVehicleControlInterface\n    SpeedSensor\n    Engine\n    CruiseController\n  }\n\n  // Define the system's relationships\n  relationships\n  {\n    // Relationship between Driver and InVehicleControlInterface\n    Driver -> InVehicleControlInterface\n\n    // Relationship between InVehicleControlInterface and CruiseController\n    InVehicleControlInterface -> CruiseController\n\n    // Relationship between CruiseController and SpeedSensor\n    CruiseController -> SpeedSensor\n\n    // Relationship between CruiseController and Engine\n    CruiseController -> Engine\n  }\n\n  // Define the system's behaviors\n  behaviors\n  {\n    // Behavior for CruiseController to receive set speed command\n    CruiseController.ReceiveSetSpeedCommand()\n    {\n      // Receive set speed command from InVehicleControlInterface\n      // ...\n    }\n\n    // Behavior for CruiseController to compare set speed with current speed\n    CruiseController.CompareSpeed()\n    {\n      // Compare set speed with current speed from SpeedSensor\n      // ...\n    }\n\n    // Behavior for CruiseController",
    "\n```sysml\n{\n  \"system\": {\n    \"name\": \"Automotive Cruise Control\",\n    \"description\": \"This system implements cruise control functionality for an automotive vehicle.\",\n    \"components\": [\n      {\n        \"name\": \"Driver Speed Setting Request\",\n        \"description\": \"The driver sends a command specifying the desired speed.\",\n        \"type\": \"DataValue\",\n        \"properties\": [\n          {\n            \"name\": \"Desired Speed\",\n            \"type\": \"Speed\",\n            \"description\": \"The speed set by the driver.\"\n          }\n        ]\n      },\n      {\n        \"name\": \"Real-Time Speed Information\",\n        \"description\": \"The vehicle's speed is sensed and fed back to the cruise controller.\",\n        \"type\": \"DataValue\",\n        \"properties\": [\n          {\n            \"name\": \"Current Speed\",\n            \"type\": \"Speed\",\n            \"description\": \"The current speed of the vehicle.\"\n          }\n        ]\n      },\n      {\n        \"name\": \"Throttle Control Instructions\",\n        \"description\": \"The cruise controller sends appropriate throttle control instructions to the",
    "\n```sysml\n{\n  \"System\": {\n    \"Name\": \"Automotive Cruise Control System\",\n    \"Components\": [\n      {\n        \"Name\": \"Cruise Control Interface\",\n        \"Type\": \"Interface\",\n        \"Ports\": [\n          {\n            \"Name\": \"SetSpeedCommand\",\n            \"Direction\": \"Out\",\n            \"Type\": \"Data\"\n          }\n        ]\n      },\n      {\n        \"Name\": \"Cruise Controller\",\n        \"Type\": \"Block\",\n        \"Ports\": [\n          {\n            \"Name\": \"TargetSpeed\",\n            \"Direction\": \"In\",\n            \"Type\": \"Data\"\n          },\n          {\n            \"Name\": \"ActualSpeed\",\n            \"Direction\": \"In\",\n            \"Type\": \"Data\"\n          },\n          {\n            \"Name\": \"FuelControlCommand\",\n            \"Direction\": \"Out\",\n            \"Type\": \"Data\"\n          }\n        ]\n      },\n      {\n        \"Name\": \"Speed Sensor\",\n        \"Type\": \"Block\",\n        \"Ports\": [\n          {\n            \"",
    "\n```sysml\n{\n  \"system\": {\n    \"name\": \"Cruise Control System\",\n    \"components\": [\n      {\n        \"name\": \"Cruise Controller\",\n        \"type\": \"System\",\n        \"properties\": [\n          {\n            \"name\": \"Set Speed Command\",\n            \"type\": \"Data\",\n            \"direction\": \"In\"\n          },\n          {\n            \"name\": \"Real-Time Speed\",\n            \"type\": \"Data\",\n            \"direction\": \"In\"\n          },\n          {\n            \"name\": \"Fuel Control Command\",\n            \"type\": \"Data\",\n            \"direction\": \"Out\"\n          }\n        ],\n        \"interactions\": [\n          {\n            \"name\": \"Process Set Speed Command\",\n            \"source\": \"Set Speed Command\",\n            \"target\": \"Cruise Controller\",\n            \"type\": \"Operation\"\n          },\n          {\n            \"name\": \"Read Real-Time Speed\",\n            \"source\": \"Cruise Controller\",\n            \"target\": \"Real-Time Speed\",\n            \"type\": \"Operation\"\n          },\n",
    "\n```sysml\n{\n  \"system\": {\n    \"name\": \"Vehicle Lifecycle Management System\",\n    \"description\": \"This system manages and tracks the entire lifecycle of a vehicle.\",\n    \"components\": [\n      {\n        \"name\": \"Vehicle\",\n        \"description\": \"The main object representing a vehicle.\",\n        \"properties\": [\n          {\n            \"name\": \"Assembly\",\n            \"description\": \"The process of assembling the vehicle.\",\n            \"stages\": [\n              {\n                \"name\": \"Assembly Start\",\n                \"description\": \"The start of the vehicle assembly process.\"\n              },\n              {\n                \"name\": \"Assembly Complete\",\n                \"description\": \"The completion of the vehicle assembly process.\"\n              }\n            ]\n          },\n          {\n            \"name\": \"Delivery\",\n            \"description\": \"The process of delivering the vehicle.\",\n            \"stages\": [\n              {\n                \"name\": \"Delivery Scheduled\",\n                \"description\": \"The scheduled date for vehicle delivery.\"\n              },\n              {\n                \"name\": \"Delivered\",\n                \"description\": \"The actual delivery of the vehicle",
    "\n```sysml\nsystem Vehicle\n{\n  attributes\n  {\n    Mass : Real;\n    OperationalStatus : String;\n  }\n  properties\n  {\n    GearSetting : String;\n    AcceleratorPedalPosition : String;\n  }\n  composition\n  {\n    Engine : Engine;\n    Driver : ExternalReference;\n    Wheels : Set(Wheel);\n  }\n  instances\n  {\n    vehicle_1 : Vehicle\n    {\n      attributes\n      {\n        Mass = 1500.0;\n        OperationalStatus = \"Operational\";\n      }\n      properties\n      {\n        GearSetting = \"Neutral\";\n        AcceleratorPedalPosition = \"Released\";\n      }\n      composition\n      {\n        Engine = engine_1;\n        Driver = driver_1;\n        Wheels = { left_front_wheel_1, right_front_wheel_1 };\n      }\n    }\n  }\n}\n\nsystem Engine\n{\n  // Engine-specific attributes and properties can be defined here\n}\n\nsystem Wheel\n{\n  // Wheel-specific attributes and properties can be",
    "\n```sysml\nsystem CompositeSystem\n{\n  system Vehicle\n  {\n    attributes\n    {\n      Real mass @0 = 2000.0;\n      Integer gear @0 = 0;\n      Real acceleratorPosition @0 = 0.0;\n      Real mass @1 = 1500.0;\n      Integer gear @1 = 2;\n      Real acceleratorPosition @1 = 0.5;\n    }\n  }\n}\n```",
    "\n```sysml\n{\n  System mySystem {\n    System myVehicle {\n      Property mass : Real = 2000.0 {initialValue = 2000.0}\n      Property gearPosition : String = \"neutral\" {initialValue = \"neutral\"}\n      Property throttlePosition : Real = 0.0 {initialValue = 0.0}\n      System myEngine {\n        // Engine properties and behaviors would be defined here\n      }\n      System myDriver {\n        Property driver : String {\n          Alice {initialValue = \"Alice\"}\n          Bob {initialValue = \"Bob\"}\n        }\n      }\n    }\n  }\n}\n```\n\n```sysml\n{\n  System mySystem {\n    System myVehicle {\n      Property mass : Real = 1500.0 {timeSlice = 1}\n      Property gearPosition : String = \"second\" {timeSlice = 1}\n      Property throttlePosition : Real = 0.5 {timeSlice = 1}\n      System myEngine {\n        // Engine properties and behaviors would be defined here\n      }\n      Property driver : String {",
    "\n```sysml\n!ModelType: System\n!ModelName: VehicleMassModel\n\n!Class: Vehicle\n!Description: Represents the complete vehicle, including all its components and subcomponents.\n!Attribute: totalMass (Real)\n!Attribute: components (List<Component>)\n\n!Class: Component\n!Description: Base class for all components, including simple and composite components.\n!Attribute: mass (Real)\n!Attribute: subcomponents (List<Component>)\n!Operation: calculateTotalMass() -> Real\n\n!Class: SimpleComponent\n!Description: Represents a simple component with a quantifiable mass.\n!Inheritance: Component\n!Attribute: mass (Real)\n\n!Class: CompositeComponent\n!Description: Represents a composite component assembled from other components.\n!Inheritance: Component\n!Attribute: components (List<Component>)\n\n!Class: Engine\n!Description: Represents the engine component of the vehicle.\n!Inheritance: SimpleComponent\n!Attribute: mass (Real)\n\n!Class: Transmission\n!Description: Represents the transmission component of the vehicle.\n!Inheritance: SimpleComponent\n!Attribute: mass (Real)\n\n!Association: Vehicle has many",
    "\n```sysml\nimport this::SysML::Core::*;\n\n// Define the Vehicle component\nComponentType Vehicle {\n  // Unique Vehicle Identification Number (VIN)\n  Attribute VIN : String;\n\n  // Mass of the vehicle itself\n  Attribute vehicleMass : Real;\n\n  // List of components within the vehicle\n  List<Component> components : {\n    // Each component has a unique serial number\n    Attribute serialNumber : String;\n    // Mass of the component\n    Attribute componentMass : Real;\n  };\n\n  // Function to calculate the total mass of the vehicle\n  Operation calculateTotalMass() : Real {\n    var totalMass = vehicleMass;\n    foreach (component in components) {\n      totalMass = totalMass + component.componentMass;\n    }\n    return totalMass;\n  }\n\n  // Function to filter components based on mass threshold\n  Operation filterComponentsByMass(threshold : Real) : List<Component> {\n    var filteredComponents = {};\n    foreach (component in components) {\n      if (component.componentMass >= threshold) {\n        filteredComponents.add(component);\n      }\n    }",
    "\n```sysml\n!",
    "\n```sysml\n{\n  \"System\": {\n    \"Name\": \"Mass Aggregation and Management System\",\n    \"Description\": \"This system is used for the aggregation and management of the mass of objects with mass attributes. Each object has a basic mass and can also contain several subcomponents. The system can automatically calculate the total mass, including all subcomponents. For supported composite objects, the total mass equals the sum of the object's own basic mass and the full mass of all its subcomponents. In addition, the system supports mass-based filtering and aggregation of components; that is, a minimum mass threshold can be set so that only subcomponents whose mass is not less than this threshold are counted. In this case, the total mass is the sum of the object's own mass and the mass of all subcomponents that meet the specified minimum mass requirement. This system is suitable for hierarchical decomposition and overall mass control of complex products or equipment structures, enabling users to flexibly aggregate mass information from different dimensions according to actual needs.\",\n    \"Components\": [\n      {\n        \"Name\": \"Object\",\n        \"Description\": \"Each object has a basic mass and can also contain several subcomponents.\",\n        \"Attributes\": [",
    "\n```sysml\n{\n  System {\n    Name = \"Vehicle Dynamics Calculator\"\n    Description = \"A system capable of calculating the core parameters of vehicle dynamics.\"\n    SystemBoundary {\n      Name = \"Vehicle Dynamics\"\n      System {\n        Name = \"Vehicle Dynamics Calculator\"\n        Description = \"A system capable of calculating the core parameters of vehicle dynamics.\"\n        SystemBoundary {\n          Name = \"Core Calculations\"\n          System {\n            Name = \"Core Calculations\"\n            Description = \"A system for calculating vehicle dynamics parameters.\"\n            SystemBoundary {\n              Name = \"Power Output Calculation\"\n              System {\n                Name = \"Power Output Calculation\"\n                Description = \"A system for calculating the vehicle's actual available power output.\"\n                Parameter {\n                  Name = \"Wheel Power\"\n                  Description = \"The power available at the wheels.\"\n                  Type = Real\n                }\n                Parameter {\n                  Name = \"Aerodynamic Drag Coefficient\"\n                  Description = \"The coefficient representing the aerodynamic drag.\"\n                  Type = Real\n                }\n                Parameter {\n                  Name = \"Friction Coefficient\"\n                  Description = \"The coefficient representing",
    "\n```sysml\n{\n  \"system\": {\n    \"name\": \"Vehicle Dynamic Simulation System\",\n    \"description\": \"This system simulates and computes the dynamic behavior of vehicles during straight-line driving, taking into account influencing factors such as aerodynamic drag and rolling resistance.\",\n    \"components\": [\n      {\n        \"name\": \"Vehicle Dynamics Calculator\",\n        \"description\": \"Calculates the vehicle's acceleration, speed, and position based on the wheel-end output power, total vehicle mass, initial speed and position, specified time step, aerodynamic drag coefficient, and rolling resistance coefficient.\",\n        \"functions\": [\n          {\n            \"name\": \"Calculate Acceleration\",\n            \"description\": \"Determines the available driving power under current conditions and calculates the vehicle's acceleration accordingly.\",\n            \"inputs\": [\n              {\n                \"name\": \"Wheel-end Output Power\",\n                \"type\": \"Power\"\n              },\n              {\n                \"name\": \"Total Vehicle Mass\",\n                \"type\": \"Mass\"\n              },\n              {\n                \"name\": \"Aerodynamic Drag Coefficient\",\n                \"type\": \"Coefficient\"\n              },\n",
    "\n```sysml\n{\n  System {\n    Name = \"Vehicle Dynamics Simulator\"\n    Description = \"This system models and computes the vehicle's driving dynamics.\"\n    SystemBoundary {\n      Name = \"Vehicle Dynamics\"\n      Description = \"This boundary contains the components and interactions related to vehicle dynamics.\"\n      System {\n        Name = \"Vehicle Dynamics Model\"\n        Description = \"This system models the vehicle's dynamics based on user input parameters.\"\n        SystemBoundary {\n          Name = \"Input Parameters\"\n          Description = \"This boundary contains the parameters required for the vehicle dynamics model.\"\n          System {\n            Name = \"Vehicle Parameters\"\n            Description = \"This system contains the vehicle's mass, wheel power, aerodynamic drag coefficient, and rolling resistance coefficient.\"\n            Parameter {\n              Name = \"Vehicle Mass\"\n              Type = \"Mass\"\n              Description = \"The mass of the vehicle.\"\n            }\n            Parameter {\n              Name = \"Wheel Power\"\n              Type = \"Power\"\n              Description = \"The power of the vehicle's wheels.\"\n            }\n            Parameter {\n              Name = \"Aerodynamic Drag Coefficient\"\n              Type = \"",
    "\n```sysml\n{\n  System {\n    Name \"Vehicle Dynamic Simulation System\"\n    Description \"This system is designed to describe and calculate the longitudinal dynamic constraints and state changes of a vehicle moving in a straight line. Users are required to provide the initial position, initial velocity, vehicle mass, wheel-end drive power, and time interval at a specific moment. Based on the input power, drag coefficient, friction coefficient, and other parameters, the system can automatically calculate the vehicle’s acceleration, final velocity, and final position within the given time interval. During the computation, the system comprehensively considers the effects of air resistance, frictional resistance, and other factors, and solves the dynamic equations under relevant constraints to ensure the physical consistency and accuracy of the motion simulation.\"\n\n    SystemBoundary {\n      Name \"Vehicle Dynamics\"\n      Description \"This boundary represents the vehicle dynamics system.\"\n\n      SystemPort {\n        Name \"Initial Position\"\n        Description \"The initial position of the vehicle.\"\n        DataType Integer\n      }\n\n      SystemPort {\n        Name \"Initial Velocity\"\n        Description \"The initial velocity of the vehicle.\"\n        DataType Integer\n      }\n\n      SystemPort {\n        Name \"",
    "\n```sysml\n{\n  \"system\": {\n    \"name\": \"Vehicle Mass Management System\",\n    \"description\": \"This system is designed to restrict and manage the vehicle’s total mass, ensuring that the overall vehicle weight does not exceed the maximum permitted limit of 2,500 kilograms.\",\n    \"components\": [\n      {\n        \"name\": \"Chassis\",\n        \"mass\": 0\n      },\n      {\n        \"name\": \"Engine\",\n        \"mass\": 0\n      },\n      {\n        \"name\": \"Gearbox\",\n        \"mass\": 0\n      }\n    ],\n    \"totalMass\": 0,\n    \"maxPermittedMass\": 2500,\n    \"overweightWarning\": \"The vehicle is overweight. Please reduce the mass of the chassis, engine, or gearbox.\"\n  }\n}\n```\n\n```sysml\n{\n  \"system\": {\n    \"name\": \"Vehicle Mass Management System\",\n    \"description\": \"This system is designed to restrict and manage the vehicle’s total mass, ensuring that the overall vehicle weight does not exceed the maximum permitted limit of",
    "\n```sysml\n{\n  \"system\": {\n    \"name\": \"Vehicle Mass Budgeting System\",\n    \"description\": \"This system is designed to budget and constrain the mass of a vehicle, ensuring that the total mass of the complete vehicle does not exceed 2,500 kilograms.\",\n    \"components\": [\n      {\n        \"name\": \"Chassis\",\n        \"type\": \"Component\",\n        \"mass\": \"measured\"\n      },\n      {\n        \"name\": \"Engine\",\n        \"type\": \"Component\",\n        \"mass\": \"measured\"\n      },\n      {\n        \"name\": \"Transmission\",\n        \"type\": \"Component\",\n        \"mass\": \"measured\"\n      }\n    ],\n    \"constraints\": [\n      {\n        \"type\": \"MassConstraint\",\n        \"value\": 2500,\n        \"operator\": \"<=\",\n        \"target\": \"total mass of the complete vehicle\"\n      },\n      {\n        \"type\": \"CriticalComponent\",\n        \"components\": [\"Engine\", \"Transmission\"]\n      }\n    ],\n    \"actions\": [\n",
    "\n```sysml\n{\n  \"system\": {\n    \"name\": \"Vehicle Mass Management System\",\n    \"description\": \"This system is designed to manage and regulate vehicle mass in compliance with relevant standards.\",\n    \"components\": [\n      {\n        \"name\": \"Chassis\",\n        \"mass\": \"variable\"\n      },\n      {\n        \"name\": \"Engine\",\n        \"mass\": \"variable\"\n      },\n      {\n        \"name\": \"Transmission\",\n        \"mass\": \"variable\"\n      }\n    ],\n    \"totalMass\": {\n      \"value\": 2500,\n      \"units\": \"kilograms\"\n    },\n    \"verification\": {\n      \"method\": \"automatic\",\n      \"condition\": \"total mass of the complete vehicle exceeds the specified upper mass limit\"\n    }\n  }\n}\n```",
    "\n```sysml\n{\n  System {\n    Name \"Weight Management System\"\n    Description \"This system ensures that the combined weight of the main vehicle components does not exceed 2,500 kilograms.\"\n\n    Component {\n      Name \"Chassis\"\n      Description \"The chassis of the vehicle.\"\n      Property {\n        Name \"Weight\"\n        Type Integer\n        Description \"The weight of the chassis in kilograms.\"\n      }\n    }\n\n    Component {\n      Name \"Engine\"\n      Description \"The engine of the vehicle.\"\n      Property {\n        Name \"Weight\"\n        Type Integer\n        Description \"The weight of the engine in kilograms.\"\n      }\n    }\n\n    Component {\n      Name \"Transmission\"\n      Description \"The transmission of the vehicle.\"\n      Property {\n        Name \"Weight\"\n        Type Integer\n        Description \"The weight of the transmission in kilograms.\"\n      }\n    }\n\n    Requirement {\n      Name \"Weight Limit\"\n      Description \"The combined weight of the main vehicle components must not exceed 2,500 kilograms.\"\n      Condition \"Chassis.Weight +",
    "\n```sysml\n{\n  \"system\": {\n    \"name\": \"Vehicle Mass and Dynamics Requirements\",\n    \"description\": \"This system describes and constrains the composition and mass requirements of a vehicle.\",\n    \"components\": [\n      {\n        \"name\": \"Chassis\",\n        \"type\": \"Part\",\n        \"attributes\": [\n          {\n            \"name\": \"mass\",\n            \"type\": \"Mass\",\n            \"value\": \"m_chassis\"\n          }\n        ]\n      },\n      {\n        \"name\": \"Engine\",\n        \"type\": \"Part\",\n        \"attributes\": [\n          {\n            \"name\": \"mass\",\n            \"type\": \"Mass\",\n            \"value\": \"m_engine\"\n          }\n        ]\n      },\n      {\n        \"name\": \"Transmission\",\n        \"type\": \"Part\",\n        \"attributes\": [\n          {\n            \"name\": \"mass\",\n            \"type\": \"Mass\",\n            \"value\": \"m_transmission\"\n          }\n        ]\n      }\n    ],\n    \"requirements\": [\n      {\n",
    "\n```sysml\n{\n  \"system\": {\n    \"name\": \"Vehicle Maintenance Management System\",\n    \"components\": [\n      {\n        \"name\": \"Vehicle\",\n        \"attributes\": [\n          {\n            \"name\": \"nextMaintenanceTime\",\n            \"type\": \"Time\"\n          },\n          {\n            \"name\": \"maintenanceInterval\",\n            \"type\": \"Duration\"\n          },\n          {\n            \"name\": \"maxAllowedTemperature\",\n            \"type\": \"Temperature\"\n          },\n          {\n            \"name\": \"currentStatus\",\n            \"type\": \"VehicleStatus\"\n          }\n        ],\n        \"operations\": [\n          {\n            \"name\": \"scheduleMaintenance\",\n            \"parameters\": [\n              {\n                \"name\": \"scheduledTime\",\n                \"type\": \"Time\"\n              }\n            ]\n          },\n          {\n            \"name\": \"checkMaintenanceStatus\",\n            \"parameters\": []\n          },\n          {\n            \"name\": \"startMaintenance\",\n            \"parameters\": [\n              {\n                \"name\": \"actualStartTime\",\n                \"type\": \"Time",
    "\n```sysml\n!",
    "\n```sysml\n!",
    "\n```sysml\n{\n  System {\n    Name = \"Vehicle System\"\n    Description = \"The system model of this project primarily outlines the basic requirements for a vehicle and its engine.\"\n\n    Requirement {\n      Name = \"Mass Requirement\"\n      Description = \"The vehicle's total mass must not exceed 2000 kilograms when fully fueled, and should not be higher than 1500 kilograms when empty.\"\n\n      Property {\n        Name = \"Max Mass When Fueled\"\n        Value = 2000\n        Unit = \"kilograms\"\n      }\n\n      Property {\n        Name = \"Max Mass When Empty\"\n        Value = 1500\n        Unit = \"kilograms\"\n      }\n    }\n\n    Requirement {\n      Name = \"Engine Power Transmission\"\n      Description = \"The engine must be capable of effectively transmitting its generated torque to the transmission system through a clutch interface, and the torque generated by the engine should vary with speed, conforming to the relevant performance table specifications.\"\n\n      Requirement {\n        Name = \"Clutch Interface\"\n        Description = \"The engine must be",
    "\n```sysml\n{\n  \"system\": {\n    \"name\": \"Vehicle Mass and Power Transmission Control System\",\n    \"components\": [\n      {\n        \"name\": \"Vehicle Mass Sensor\",\n        \"type\": \"Sensor\",\n        \"properties\": [\n          {\n            \"name\": \"Max Mass When Fuel Tank Full\",\n            \"value\": \"2000 kg\"\n          },\n          {\n            \"name\": \"Max Mass When Fuel Tank Empty\",\n            \"value\": \"1500 kg\"\n          }\n        ]\n      },\n      {\n        \"name\": \"Engine\",\n        \"type\": \"Actuator\",\n        \"properties\": [\n          {\n            \"name\": \"Torque Characteristics\",\n            \"value\": \"Specified\"\n          }\n        ]\n      },\n      {\n        \"name\": \"Gearbox\",\n        \"type\": \"Component\"\n      },\n      {\n        \"name\": \"Clutch Interface\",\n        \"type\": \"Interface\"\n      }\n    ],\n    \"connections\": [\n      {\n        \"source\": \"Engine\",\n        \"target",
    "\n```sysml\n{\n  System {\n    Name = \"Vehicle Performance Analyzer\"\n    Description = \"Analyzes the dynamic performance of vehicles, focusing on modeling and calculating power demand, acceleration, speed, and position variations over time during straight-line driving.\"\n    SystemBoundary {\n      Name = \"Vehicle Performance Analysis System\"\n      Description = \"System for analyzing vehicle performance, including power demand, acceleration, speed, and position variations.\"\n      SystemBoundary {\n        Name = \"Vehicle Attributes\"\n        Description = \"Attributes of the vehicle, such as curb weight, payload, wheel diameter, transmission efficiency, and fuel economy under urban and highway conditions.\"\n        SystemBoundary {\n          Name = \"Driving Cycles\"\n          Description = \"Specific driving cycles, including time-stamped position and speed information.\"\n          SystemBoundary {\n            Name = \"Performance Calculations\"\n            Description = \"Calculations for required engine power, acceleration, and other dynamic parameters.\"\n            SystemBoundary {\n              Name = \"Fuel Economy Calculation\"\n              Description = \"Calculation of vehicle's fuel economy throughout the entire driving cycle.\"\n              SystemBoundary {\n                Name = \"Compliance Verification\"\n                Description =",
    "\n```sysml\n{\n  System {\n    Name: \"Vehicle Fuel Economy Simulation System\"\n    Description: \"This system performs simulation analysis on vehicle fuel economy. It calculates the actual fuel economy of vehicles under different urban and highway driving scenarios to verify whether they meet the requirement of exceeding 30 miles per gallon.\"\n    SystemBoundary {\n      Name: \"Vehicle Simulation Model\"\n      Description: \"This boundary contains all components necessary for vehicle simulation analysis.\"\n      System {\n        Name: \"Vehicle Parameters\"\n        Description: \"This component includes vehicle parameters such as curb weight, load, wheel diameter, transmission efficiency, and others.\"\n        Parameter {\n          Name: \"Curb Weight\"\n          Description: \"The weight of the vehicle when it is not loaded.\"\n          Value: 3500 kg\n        }\n        Parameter {\n          Name: \"Load\"\n          Description: \"The weight added to the vehicle when it is fully loaded.\"\n          Value: 500 kg\n        }\n        Parameter {\n          Name: \"Wheel Diameter\"\n          Description: \"The diameter of the vehicle's wheels.\"\n          Value: 18 inches\n        }\n",
    "\n```sysml\n{\n  \"System\": {\n    \"Name\": \"Engine Selection Analysis System\",\n    \"Description\": \"Conducts a comprehensive selection analysis for various types of engines, including four-cylinder and six-cylinder engines. Aggregates and calculates key performance indicators for each type of engine, assesses them using a unified evaluation function, and recommends the optimal engine selection based on comprehensive evaluation results.\",\n    \"Components\": [\n      {\n        \"Name\": \"Engine Performance Indicator Aggregator\",\n        \"Description\": \"Aggregates key performance indicators for each type of engine, including power, mass, efficiency, and cost.\",\n        \"Interfaces\": [\n          {\n            \"Name\": \"EngineDataInput\",\n            \"Description\": \"Input interface for engine data.\"\n          },\n          {\n            \"Name\": \"PerformanceIndicatorsOutput\",\n            \"Description\": \"Output interface for aggregated performance indicators.\"\n          }\n        ]\n      },\n      {\n        \"Name\": \"Unified Evaluation Function\",\n        \"Description\": \"Assesses each engine using a unified evaluation function based on aggregated performance indicators.\",\n        \"Interfaces\": [\n          {\n            \"Name\": \"PerformanceIndic",
    "\n```sysml\n!Model: VehicleWeightCheck\n\n!Class: Vehicle\n!Attribute: curbWeight (Real)\n\n!Class: WeightCheckProcess\n!Attribute: actualWeight (Real)\n!Attribute: processedWeight (Real)\n!Attribute: evaluationResult (String)\n\n!Class: WeightRequirement\n!Attribute: maxWeight (Real)\n\n!Association: Vehicle hasWeightRequirement\n!Association: WeightCheckProcess checksVehicleWeight\n\n!Constraint: Vehicle.curbWeight <= WeightRequirement.maxWeight\n!Constraint: WeightCheckProcess.processedWeight = Vehicle.curbWeight\n!Constraint: if (WeightCheckProcess.processedWeight <= WeightRequirement.maxWeight) then WeightCheckProcess.evaluationResult = \"qualified\" else WeightCheckProcess.evaluationResult = \"unqualified\"\n```\n\n",
    "\n```sysml\n{\n  System {\n    Name = \"Mass Verification System\"\n    Description = \"The system is designed to verify the mass of vehicles to ensure that the actual mass of each vehicle does not exceed 2,500 kilograms.\"\n    SystemUnit {\n      Name = \"Mass Verification Unit\"\n      Description = \"It measures the current actual mass of the vehicle using the weighing equipment and processes and evaluates the measured data.\"\n      SystemUnit {\n        Name = \"Weighing Equipment\"\n        Description = \"The weighing equipment is used to measure the mass of the vehicle.\"\n      }\n    }\n    SystemUnit {\n      Name = \"Vehicles\"\n      Description = \"The system consists of vehicles, weighing equipment, and a mass verification unit.\"\n    }\n  }\n  Requirement {\n    Name = \"Mass Verification Requirement\"\n    Description = \"Every vehicle to be inspected must undergo a mass inspection process to check whether its mass complies with the specified upper limit.\"\n    Condition = \"The inspected vehicle's mass is less than or equal to 2,500 kilograms, it is deemed qualified; if it exceeds this value, it is",
    "\n```sysml\nSystem {\n  Name = \"Transportation System\"\n  Description = \"The system is designed to provide end users with a convenient and efficient mode of transportation.\"\n\n  SystemBoundary {\n    Name = \"Vehicle Boundary\"\n    Description = \"The vehicle where the transportation system is installed.\"\n\n    System {\n      Name = \"Vehicle Control System\"\n      Description = \"Controls the vehicle's operations and ensures the safety of the passengers and driver.\"\n\n      Requirement {\n        Name = \"Safety Requirement\"\n        Description = \"Ensures the safety of the passengers and driver during transportation.\"\n        Priority = \"High\"\n      }\n\n      Requirement {\n        Name = \"Comfort Requirement\"\n        Description = \"Ensures the comfort of the passengers and driver during transportation.\"\n        Priority = \"Medium\"\n      }\n\n      Requirement {\n        Name = \"Convenience Requirement\"\n        Description = \"Ensures the convenience of entering and exiting the vehicle.\"\n        Priority = \"Medium\"\n      }\n\n      Requirement {\n        Name = \"Environmental Integration Requirement\"\n        Description = \"Integrates surrounding environmental factors to ensure",
    "\n```sysml\nSystem {\n  Name = \"Transportation System\"\n  Description = \"Supports comprehensive transportation scenarios, enabling a driver and up to four passengers to be safely transported from the starting point to the destination.\"\n\n  SystemBoundary {\n    Name = \"Vehicle\"\n    Description = \"The vehicle supports the transportation process.\"\n\n    System {\n      Name = \"Driver Interface\"\n      Description = \"Allows the driver to enter the vehicle and operate the vehicle under the influence of environmental conditions.\"\n\n      System {\n        Name = \"Passenger Interface\"\n        Description = \"Allows up to four passengers to enter the vehicle and safely exit the vehicle upon arrival at the destination.\"\n      }\n\n      System {\n        Name = \"Fuel Management\"\n        Description = \"Enables the driver to refuel at a gas station as needed to ensure a smooth journey.\"\n      }\n    }\n  }\n}\n```",
    "\n```sysml\n!Model: VehicleConfigurationModel\n!Author: [Your Name]\n!Version: 1.0\n!Description: This model is designed to manage the configuration of vehicle product lines, supporting diverse engine and transmission combinations.\n\n!Class: Vehicle\n!Description: Represents a vehicle in the product line.\n\n!Class: Engine\n!Description: Represents the engine of a vehicle.\n!Attribute: CylinderCount (Integer)\n!Description: The number of cylinders in the engine.\n!Attribute: CylinderDiameter (String)\n!Description: The diameter of the engine cylinders, either 'small' (70 mm) or 'large' (100 mm).\n\n!Class: Transmission\n!Description: Represents the transmission of a vehicle.\n!Attribute: Type (String)\n!Description: The type of transmission, either 'manual' or 'automatic'.\n\n!Class: VehicleConfiguration\n!Description: Represents the configuration of a vehicle, combining an engine and a transmission.\n!Association: Vehicle hasEngine (Engine)\n!Association: Vehicle hasTransmission (Transmission)\n\n!Rule: CombinationRule\n!Description: Ensures that the engine and",
    "\n```sysml\n!ModelType: System\n!ModelId: ConfigurableEngine\n\n!Class: System\nConfigurableEngine\n{\n    !Class: Property\n    CylinderCount\n    {\n        !Value: 4\n        !Value: 6\n    }\n\n    !Class: Property\n    CylinderDiameter\n    {\n        !Value: 70 mm\n        !Value: 100 mm\n    }\n\n    !Class: Property\n    EngineVariant\n    {\n        !Value: FourCylinderEngine\n        !Value: SixCylinderEngine\n    }\n\n    !Class: Requirement\n    ConfigurableRequirements\n    {\n        !Class: Requirement\n        Requirement1\n        {\n            !Description: The system shall support at least two engine variants.\n        }\n\n        !Class: Requirement\n        Requirement2\n        {\n            !Description: The number of cylinders can be either 4 or 6.\n        }\n\n        !Class: Requirement\n        Requirement3\n        {\n            !Description: Each cylinder is available in two diameters: 70 mm and 1",
    "\n```sysml\n{\n  \"System\": {\n    \"name\": \"Automotive Configuration Space\",\n    \"description\": \"Supports combinations of different engines and transmission systems.\",\n    \"components\": [\n      {\n        \"name\": \"Engine\",\n        \"description\": \"Type of engine\",\n        \"variants\": [\n          {\n            \"name\": \"4-cylinder\",\n            \"description\": \"Contains 4 cylinders\",\n            \"parameters\": [\n              {\n                \"name\": \"Cylinder Diameter\",\n                \"description\": \"Diameter of the cylinders\",\n                \"variants\": [\n                  {\n                    \"name\": \"70mm\",\n                    \"description\": \"70mm cylinder diameter\"\n                  },\n                  {\n                    \"name\": \"100mm\",\n                    \"description\": \"100mm cylinder diameter\"\n                  }\n                ]\n              }\n            ]\n          },\n          {\n            \"name\": \"6-cylinder\",\n            \"description\": \"Contains 6 cylinders\",\n            \"parameters\": [\n              {\n                \"name\": \"Cylinder Diameter\",\n                \"description\": \"Diameter of",
    "\n```sysml\nSystem {\n  name: \"System\"\n  SystemAssembly {\n    name: \"SystemAssembly\"\n    includes: [\n      ComputerSubsystem {\n        name: \"ComputerSubsystem\"\n        uses: [\n          SoftwareDesign {\n            name: \"SoftwareDesign\"\n            defines: [\n              MessageFormat {\n                name: \"MessageFormat\"\n              }\n              DataFormat {\n                name: \"DataFormat\"\n              }\n            ]\n          }\n        ]\n      }\n      StorageSubsystem {\n        name: \"StorageSubsystem\"\n        accesses: [\n          SoftwareDesign {\n            name: \"SoftwareDesign\"\n          }\n        ]\n        isCompatibleWith: [\n          MessageFormat {\n            name: \"MessageFormat\"\n          }\n          DataFormat {\n            name: \"DataFormat\"\n          }\n        ]\n      }\n    ]\n  }\n}\n```",
    "\n```sysml\nSystem {\n  Name = \"Powertrain Management System\"\n  Description = \"Efficiently allocates and manages the powertrain system.\"\n\n  SystemPart {\n    Name = \"Logical Layer\"\n    Description = \"Contains logical components for power and torque generation.\"\n\n    SystemElement {\n      Name = \"Torque Generator\"\n      Description = \"Converts power into torque.\"\n    }\n  }\n\n  SystemPart {\n    Name = \"Physical Layer\"\n    Description = \"Contains physical components to integrate functions.\"\n\n    SystemElement {\n      Name = \"Power Unit\"\n      Description = \"Capable of both power output and torque generation.\"\n    }\n  }\n\n  SystemRelationship {\n    Name = \"Mapping Relationship\"\n    Description = \"Ensures the logical torque generator is mapped to the physical power unit.\"\n\n    Source {\n      SystemElement = \"Torque Generator\"\n    }\n\n    Target {\n      SystemElement = \"Power Unit\"\n    }\n  }\n}\n```",
    "\n```sysml\nSystem {\n  Name = \"Power Transmission System\"\n  Description = \"The system requires the power transmission system to provide power and generate torque.\"\n\n  Component {\n    Name = \"Torque Generator\"\n    Description = \"The system possesses the capability to deliver power and generate torque.\"\n    Part [\n      Name = \"Engine\"\n      Description = \"The engine actually performs the function of generating torque.\"\n    ]\n  }\n\n  LogicalAllocation [\n    LogicalElement = \"Torque Generator\"\n    PhysicalElement = \"Engine\"\n    Description = \"The logical-layer torque generator is to be allocated to the physical powertrain component, with the specific operation of generating torque further allocated to the engine within the powertrain.\"\n  ]\n}\n```",
    "\n```sysml\n{\n  \"system\": {\n    \"name\": \"Vehicle Feature Annotation System\",\n    \"description\": \"This system is designed to identify and manage the safety and anti-theft configurations of various parts within a complete vehicle model.\",\n    \"components\": [\n      {\n        \"name\": \"Interior\",\n        \"description\": \"Includes components such as seat belts, front seats, driver airbag, and alarm system.\",\n        \"subcomponents\": [\n          {\n            \"name\": \"Seat Belts\",\n            \"description\": \"To secure passengers in the vehicle in the event of a collision.\",\n            \"functionalRequirements\": [\n              {\n                \"type\": \"Safety\",\n                \"description\": \"Ensure passenger safety in the event of a collision.\"\n              }\n            ]\n          },\n          {\n            \"name\": \"Front Seats\",\n            \"description\": \"To provide comfort and support for the driver and front passenger.\",\n            \"functionalRequirements\": [\n              {\n                \"type\": \"Safety\",\n                \"description\": \"Enhance passenger comfort and support during travel.\"\n              }\n            ]\n          },\n          {\n            \"",
    "\n```sysml\nSystem {\n  Name = \"Automated Vehicle Simulation and Analysis System\"\n  Description = \"The system is capable of performing automated simulation and analysis of vehicle dynamic behavior. Users can input the vehicle’s initial velocity, initial position, acceleration at a specific moment, and the time step. The system integrates with ModelCenter analysis tool to automatically calculate and output the vehicle’s velocity and position after the specified time step based on the given physical model.\"\n\n  SystemBoundary {\n    Name = \"Vehicle Simulation Boundary\"\n\n    SystemPort {\n      Name = \"Initial Velocity\"\n      Description = \"The initial velocity of the vehicle.\"\n      DataType = \"Real\"\n    }\n\n    SystemPort {\n      Name = \"Initial Position\"\n      Description = \"The initial position of the vehicle.\"\n      DataType = \"Real\"\n    }\n\n    SystemPort {\n      Name = \"Acceleration at Specific Moment\"\n      Description = \"The acceleration of the vehicle at a specific moment.\"\n      DataType = \"Real\"\n    }\n\n    SystemPort {\n      Name = \"Time Step\"\n      Description = \"The time step for the simulation.\"\n      DataType =",
    "\n```sysml\nPackage SafetyCompliance {\n  Package SafetyFeatures {\n    Component mandatorySeatBelts1 @Safety isMandatory = true;\n    Component mandatorySeatBelts2 @Safety isMandatory = true;\n    Component driverAirbag @Safety;\n    Component bumper @Safety isMandatory = true;\n    Component keylessEntry @Safety;\n    Package WheelAssembly {\n      Component wheel1 @Safety isMandatory = true;\n      Component wheel2 @Safety isMandatory = true;\n      Component abs @Safety;\n    }\n  }\n  Package MandatorySafetyFeatures {\n    Component mandatorySeatBelts1 @Safety isMandatory = true;\n    Component mandatorySeatBelts2 @Safety isMandatory = true;\n    Component bumper @Safety isMandatory = true;\n  }\n}\n```",
    "\n```sysml\n{\n  \"System\": {\n    \"Name\": \"Vehicle Safety Compliance System\",\n    \"Components\": [\n      {\n        \"Name\": \"Vehicle Interior\",\n        \"Features\": [\n          {\n            \"Name\": \"Seat Belts\",\n            \"Type\": \"Mandatory\",\n            \"Count\": 2\n          },\n          {\n            \"Name\": \"Driver's Airbag\",\n            \"Type\": \"Optional\"\n          }\n        ]\n      },\n      {\n        \"Name\": \"Vehicle Body\",\n        \"Features\": [\n          {\n            \"Name\": \"Bumper\",\n            \"Type\": \"Mandatory\"\n          },\n          {\n            \"Name\": \"Keyless Entry System\",\n            \"Type\": \"Non-Mandatory\"\n          }\n        ]\n      },\n      {\n        \"Name\": \"Chassis System\",\n        \"Features\": [\n          {\n            \"Name\": \"Tires\",\n            \"Type\": \"Fixed\",\n            \"Count\": 4\n          },\n          {\n            \"Name\": \"Anti-Lock Braking System (ABS)\",\n            \"Type",
    "\n```sysml\nimport this::SysML::Core::*;\n\n{\n    System mySystem = System {\n        name = \"Risk Management System\",\n        description = \"This system is designed for modeling and managing risks and failures.\",\n        properties = {\n            \"capability\" -> \"identify and describe various possible situations, causes leading to their occurrence, and potential failures\",\n            \"ability\" -> \"record the probability of each cause and the severity level of each failure\",\n            \"function\" -> \"establish causal relationships, analyze the sequence and impact mechanisms among different situations\",\n            \"scope\" -> \"comprehensive modeling of different risk scenarios, evaluate and manage potential risks and failures\",\n            \"goal\" -> \"provide a basis for risk control and decision-making\"\n        }\n    };\n\n    // Define other elements like elements, connectors, etc.\n}\n```",
    "\n```sysml\n!Model \"Risk Metadata Management System\"\n!Author \"SysMLer\"\n!Version \"1.0\"\n\n!Class Scenario\n!Description \"A user-defined scenario within the system.\"\n!Attribute name : String\n!Attribute description : String\n\n!Class Cause\n!Description \"A potential cause for a scenario.\"\n!Attribute name : String\n!Attribute probability : Real\n\n!Class Failure\n!Description \"A possible failure associated with a scenario.\"\n!Attribute name : String\n!Attribute severity : String\n\n!Class CausalRelationship\n!Description \"A relationship between scenarios indicating a causal link.\"\n!Attribute sourceScenario : Scenario\n!Attribute targetScenario : Scenario\n!Attribute description : String\n\n!Class RiskScenario\n!Description \"A combination of interrelated scenarios, causes, and failures.\"\n!Attribute name : String\n!Attribute description : String\n!Attribute scenarios : List(Scenario)\n!Attribute causes : List(Cause)\n!Attribute failures : List(Failure)\n!Attribute causalRelationships : List(CausalRelationship)\n\n!Association Scenario -> Scenario.scenarios\n!Association Cause -> Scenario.causes\n!Association Failure -> Scenario.fail",
    "\n```sysml\n{\n  \"System\": {\n    \"Name\": \"Battery Monitoring System\",\n    \"Description\": \"This system is designed to identify and analyze potential risks and failure scenarios that may occur in the equipment. It continuously monitors the battery level during operation and detects situations where battery aging may lead to low battery levels.\",\n    \"Components\": [\n      {\n        \"Name\": \"Battery\",\n        \"Description\": \"Key components of the system, including batteries, are continuously monitored for level.\",\n        \"Properties\": [\n          {\n            \"Name\": \"BatteryLevel\",\n            \"Type\": \"Real\",\n            \"Description\": \"The current level of the battery.\"\n          },\n          {\n            \"Name\": \"MinThreshold\",\n            \"Type\": \"Real\",\n            \"Description\": \"The set minimum threshold for the battery level.\"\n          }\n        ],\n        \"Requirements\": [\n          {\n            \"Name\": \"RiskDetection\",\n            \"Description\": \"The system must be able to detect situations where the probability of battery failure increases due to aging or other factors.\",\n            \"Triggers\": [\n              {\n                \"Condition\": \"BatteryLevel < Min",
    "\n```sysml\nSystem {\n  Name = \"System\"\n  Description = \"The system must possess a clear capability for structural decomposition...\"\n  Features {\n    Feature {\n      Name = \"Structural Decomposition Capability\"\n      Description = \"The ability to explicitly present a top-down hierarchical structure...\"\n      Properties {\n        Property {\n          Name = \"Hierarchical Structure\"\n          Description = \"Dividing the system into multiple subsystems and components...\"\n          Value = \"Yes\"\n        }\n        Property {\n          Name = \"Function Coverage\"\n          Description = \"Ensuring that the functions and capabilities of each level are fully covered.\"\n          Value = \"Yes\"\n        }\n        Property {\n          Name = \"Component Independence\"\n          Description = \"Each component can be independently understood and analyzed...\"\n          Value = \"Yes\"\n        }\n        Property {\n          Name = \"Collaboration Effectiveness\"\n          Description = \"Collaborating effectively within the overall system...\"\n          Value = \"Yes\"\n        }\n        Property {\n          Name = \"Verification and Validation\"\n          Description = \"System engineers and parties involved in Independent Verification and Validation (IV&V)",
    "\n```sysml\n!Model (\n  name: \"Automotive System Architecture\",\n  elements: [\n    !System (\n      name: \"RootSystem\",\n      elements: [\n        !System (\n          name: \"Subsystem1\",\n          elements: [\n            !Component (\n              name: \"Component1\",\n              attributes: [\n                !Attribute (\n                  name: \"FunctionalResponsibility\",\n                  value: \"Function1\"\n                ),\n                !Attribute (\n                  name: \"SafetyAttribute\",\n                  value: \"Optional\"\n                )\n              ]\n            ),\n            !Component (\n              name: \"Component2\",\n              attributes: [\n                !Attribute (\n                  name: \"FunctionalResponsibility\",\n                  value: \"Function2\"\n                ),\n                !Attribute (\n                  name: \"SafetyAttribute\",\n                  value: \"Mandatory\"\n                )\n              ]\n            )\n          ]\n        ),\n        !System (\n          name: \"Subsystem2\",\n          elements: [\n            !Component (\n              name: \"Component3\",\n              attributes: [\n                !Attribute (\n                  name:",
    "\n```sysml\n// Define the core component \"汽车\" (automobile) with alias \"汽车 (Car)\"\n{\n  // Define the alias for \"汽车\" (automobile)\n  Alias(汽车, Car);\n\n  // Define the core component \"汽车\" (automobile)\n  Part(汽车);\n\n  // Provide explanatory comments for the core component \"汽车\" (automobile)\n  Comment(汽车, \"This represents the core component of an automobile.\");\n\n  // Define the association with physical quantities\n  Association(汽车 - 扭矩);\n\n  // Provide explanatory comments for the association with \"扭矩\" (torque)\n  Comment(汽车 - 扭矩, \"This association represents the standardized expression of automotive characteristics.\");\n}\n```",
    "\n```sysml\n{\n  \"system\": {\n    \"name\": \"Automobile Document Management System\",\n    \"description\": \"This system aims to establish a document management platform related to automobiles. It can manage and record information and documentation about automobiles, allowing users to enter, query, and archive various types of information using “Automobile” as the core object. The system also provides “Car” as an alias for “Automobile,” enabling different user groups to perform searches and operations flexibly according to their own habits.\",\n    \"features\": [\n      {\n        \"name\": \"Alias Support\",\n        \"description\": \"The system provides “Car” as an alias for “Automobile,” enabling different user groups to perform searches and operations flexibly according to their own habits.\"\n      },\n      {\n        \"name\": \"Physical Quantity Compatibility\",\n        \"description\": \"The system supports compatibility with standard physical quantity systems, enabling unified referencing and management of physical quantities such as torque (e.g., TorqueValue under the ISQ standard) to enhance the professionalism and accuracy of documentation.\"\n      },\n      {\n        \"name\": \"Annotated Documentation\",\n        \"",
    "\n```sysml\n{\n  \"System\": {\n    \"Name\": \"Automobile Information Management System\",\n    \"Description\": \"A system for managing and representing information related to automobiles, with a particular emphasis on parameters associated with vehicle torque values.\",\n    \"Components\": [\n      {\n        \"Name\": \"Automobile\",\n        \"Description\": \"Represents an automobile object.\",\n        \"Properties\": [\n          {\n            \"Name\": \"torqueValue\",\n            \"Description\": \"Stores the torque value of the automobile.\",\n            \"Type\": \"TorqueValue\"\n          }\n        ]\n      }\n    ],\n    \"Aliases\": [\n      {\n        \"Name\": \"Car\",\n        \"Description\": \"An alias for the Automobile object.\",\n        \"Target\": \"Automobile\"\n      },\n      {\n        \"Name\": \"Torque\",\n        \"Description\": \"An alias for torque value.\",\n        \"Target\": \"TorqueValue\"\n      }\n    ]\n  }\n}\n```",
    "\n```sysml\n! ------------------------------------------------------------\n! System: Vehicle Configuration System\n! Author: [Your Name]\n! Date: [Date]\n! ------------------------------------------------------------\n\n! Define the System\nSystem VehicleConfigurationSystem\n{\n    ! Define the System Interfaces\n    SystemInterface Vehicle\n    {\n        ! Define the properties of the Vehicle\n        Property vehicleType : String\n        {\n            ! Define the possible values for vehicleType\n            PossibleValue SmallVehicle\n            PossibleValue StandardVehicle\n            PossibleValue LargeVehicle\n        }\n    }\n\n    SystemInterface Engine\n    {\n        ! Define the properties of the Engine\n        Property cylinderCount : Integer\n        {\n            ! Define the possible values for cylinderCount\n            PossibleValue 4\n            PossibleValue 6\n        }\n    }\n\n    ! Define the System Flows\n    SystemFlow ConfigureEngine\n    {\n        ! Define the source and target of the flow\n        Source Vehicle\n        Target Engine\n\n        ! Define the transformation logic\n        FlowTransformation\n        {\n            ! Select the appropriate cylinder count based on vehicle type\n            if (Vehicle.vehicleType == \"SmallVehicle\")\n            {\n                Engine.",
    "\n```sysml\n{\n  \"System\": {\n    \"name\": \"Fuel Management System\",\n    \"features\": [\n      {\n        \"name\": \"Manage Fuel Flow\",\n        \"description\": \"Ensure fuel can be delivered from the fuel tank to the engine and support fuel return.\",\n        \"properties\": [\n          {\n            \"name\": \"Deliver Fuel\",\n            \"description\": \"Deliver fuel from the fuel tank to the engine.\"\n          },\n          {\n            \"name\": \"Support Fuel Return\",\n            \"description\": \"Support fuel return from the engine to the fuel tank.\"\n          }\n        ]\n      },\n      {\n        \"name\": \"Monitor and Manage Fuel Temperature\",\n        \"description\": \"Monitor and manage the temperature of the fuel.\",\n        \"properties\": [\n          {\n            \"name\": \"Monitor Temperature\",\n            \"description\": \"Monitor the temperature of the fuel.\"\n          },\n          {\n            \"name\": \"Manage Temperature\",\n            \"description\": \"Manage the temperature of the fuel.\"\n          }\n        ]\n      },\n      {\n        \"name\": \"Realize Fuel Supply and Return",
    "\n```sysml\n---\ntitle: Vehicle Structural Architecture\n\ndescription: This system model describes a vehicle structural architecture, whose core components include the vehicle as a whole, axle assemblies, front/rear axles, and wheels. The vehicle itself possesses an attribute for mass, enabling explicit definition of the total vehicle mass (such as 1750 kg and 2000 kg in the examples). Each vehicle contains front and rear axle assemblies, each comprising specific axle components and two sequentially arranged wheels. The front axle can optionally be configured with a special type that features a steering angle parameter. In certain vehicle configurations, the left and right wheels on both the front and rear axles can be distinctly identified and named, thus supporting the individual recognition and control of each wheel. The entire model is designed to provide a clear and flexible hierarchical combination of components and attribute descriptions for vehicle structural design and configuration, facilitating the needs of vehicle design, assembly, and subsequent maintenance management.\n\n---\n\nsystem Vehicle\n{\n  description: \"The vehicle as a whole\"\n  attributes\n  {\n    mass : Real\n  }\n  connectors\n  {\n    connects AxleAssembly to Vehicle\n    connects FrontAxle to AxleAssembly\n"
]