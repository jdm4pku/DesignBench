[
    "\nThe system should output a SysML v2 textual model.\n\nOutput Requirement:\nThe system should output a SysML v2 textual model.\n\n## 2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2",
    "\nThe output model is shown in the figure below.\n\n![Output Model](https://github.com/mbse-lab/mbse-lab.github.io/blob/master/assets/img/mbse-lab/lab-03/output-model.png)\n\n## Lab 04: Modeling a System with SysML v2\n\n### Task\n\nThe task is to model a system with SysML v2.\n\n### Input Requirement\n\nThe input requirement is a system that is used to manage the information of a company. The system is used to manage the information of a company, including the information of employees, departments, and projects. The system also includes a personnel management system, a department management system, and a project management system. The system is used to manage the information of employees, departments, and projects. The system also includes a personnel management system, a department management system, and a project management system.\n\n### Output Model\n\nThe output model is shown in the figure below.\n\n![Output Model](https://github.com/mbse-lab/mbse-lab.github.io/blob/master/assets/img/mb",
    "\nThe system should output a SysML v2 textual model that describes the vehicle structure, including the vehicle components and their compositional relationships. The model should be structured in a way that reflects the compositional relationships and quantity requirements among the various components, as well as the extensibility for both vehicle and component types.\n\nThe system should output a SysML v2 textual model that describes the vehicle structure, including the vehicle components and their compositional relationships. The model should be structured in a way that reflects the compositional relationships and quantity requirements among the various components, as well as the extensibility for both vehicle and component types.\n\nThe system should output a SysML v2 textual model that describes the vehicle structure, including the vehicle components and their compositional relationships. The model should be structured in a way that reflects the compositional relationships and quantity requirements among the various components, as well as the extensibility for both vehicle and component types.\n\nThe system should output a SysML v2 textual model that describes the vehicle structure, including the vehicle components and their compositional relationships. The model should be structured in a way that reflects the compositional relationships and quantity requirements among the various components, as well as the extensibility",
    "\n![image](https://user-images.githubusercontent.com/10274111/120077000-00000200-c0d3-11eb-8000-000000000000.png)\n\n## 2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2",
    "\n![image](https://user-images.githubusercontent.com/10241521/119247705-00000000-bb5f-11eb-8000-000000000000.png)\n\n## 2. SysML v2 Textual Grammar\n\n### 2.1. SysML v2 Textual Grammar\n\nSysML v2 textual grammar is a formal grammar that describes the syntax of SysML v2 textual code.\n\nSysML v2 textual grammar is defined in the following EBNF syntax:\n\n```\nSysMLv2TextualGrammar ::= SysMLv2TextualGrammarHeader SysMLv2TextualGrammarBody\n\nSysMLv2TextualGrammarHeader ::= \"SysMLv2TextualGrammar\"\n\nSysMLv2TextualGrammarBody ::= SysMLv2TextualGrammarBodyLine SysMLv2TextualGrammarBodyLine SysMLv2TextualGrammarBodyLine SysMLv2TextualGrammarBodyLine SysMLv2TextualGrammarBodyLine SysMLv2TextualGrammar",
    "\nThe system should output the following information:\n1. The classification of the information.\n2. The score of the grade.\n\nOutput Requirement:\nThe system should output the following information:\n1. The classification of the information.\n2. The score of the grade.\n\nOutput Model:\nThe system should output the following information:\n1. The classification of the information.\n2. The score of the grade.\n\nOutput Requirement:\nThe system should output the following information:\n1. The classification of the information.\n2. The score of the grade.\n\nOutput Model:\nThe system should output the following information:\n1. The classification of the information.\n2. The score of the grade.\n\nOutput Requirement:\nThe system should output the following information:\n1. The classification of the information.\n2. The score of the grade.\n\nOutput Model:\nThe system should output the following information:\n1. The classification of the information.\n2. The score of the grade.\n\nOutput Requirement:\nThe system should output the following information:\n1. The classification of the information.\n2. The score of the grade.\n\nOutput Model:",
    "\n![image](https://user-images.githubusercontent.com/32869456/120910707-00000000-c6b0-11eb-8004-000000000000.png)\n\n## 2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2",
    "\nThe output model should be a SysML v2 textual model.\n\nOutput Requirement:\nThe output model should be a SysML v2 textual model.\n\n## 2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2",
    "\n![image](https://user-images.githubusercontent.com/10271041/120077100-00003000-c07f-11eb-8700-000000000000.png)\n\n## How to run\n\n### 1. Install dependencies\n\n```\npip install -r requirements.txt\n```\n\n### 2. Run the code\n\n```\npython main.py\n```\n\n## How to use\n\n### 1. Input\n\nThe input is a text file. The text file should be in the same directory as the main.py file.\n\n### 2. Output\n\nThe output is a text file. The text file will be in the same directory as the main.py file.\n\n## How to test\n\n### 1. Test the code\n\n```\npython test.py\n```\n\n### 2. Test the code with a specific input\n\n```\npython test.py -i <input_file_name>\n```\n\n### 3. Test the code with a specific",
    "\n![image](https://user-images.githubusercontent.com/10274080/120079770-00007100-c0e0-11eb-8000-000000000000.png)\n\n## How to run\n\n### 1. Install dependencies\n\n```\npip install -r requirements.txt\n```\n\n### 2. Run the code\n\n```\npython main.py\n```\n\n## How to use\n\n### 1. Input\n\nThe input is a text file. The text file should be in the format of the following:\n\n```\n<key word> <value>\n```\n\nFor example:\n\n```\nEngine 1\n```\n\n### 2. Output\n\nThe output is a text file. The text file should be in the format of the following:\n\n```\n<SysML v2 textual grammar>\n```\n\nFor example:\n\n```\nEngine 1\n```\n\n## Reference\n\n[1] , , , et al.",
    "\nThe output model should be a SysML v2 textual model.\n\nOutput Requirement:\nThe output model should be a SysML v2 textual model.\n\n## 2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2",
    "\n\n![image](https://user-images.githubusercontent.com/32483611/120914000-00000000-c6c0-11eb-9003-000000000000.png)\n\n![image](https://user-images.githubusercontent.com/32483611/120914003-02625a00-c6c0-11eb-8000-000000000000.png)\n\n![image](https://user-images.githubusercontent.com/32483611/120914005-042c1d80-c6c0-11eb-8000-000000000000.png)\n\n![image](https://user-images.githubusercontent.com/32483611/120914007-05f5e1",
    "\nThe output model is a SysML v2 textual code.\n\nThe output model is a SysML v2 textual code.\n\nThe output model is a SysML v2 textual code.\n\nThe output model is a SysML v2 textual code.\n\nThe output model is a SysML v2 textual code.\n\nThe output model is a SysML v2 textual code.\n\nThe output model is a SysML v2 textual code.\n\nThe output model is a SysML v2 textual code.\n\nThe output model is a SysML v2 textual code.\n\nThe output model is a SysML v2 textual code.\n\nThe output model is a SysML v2 textual code.\n\nThe output model is a SysML v2 textual code.\n\nThe output model is a SysML v2 textual code.\n\nThe output model is a SysML v2 textual code.\n\nThe output model is a SysML v2 textual code.\n\nThe output model is a SysML v2 textual code.\n\nThe output model is a SysML v2 textual code.\n\n",
    "\n\n```\nSystem b11 {\n  Component c1 {\n    Port pb {\n      Interface pe\n    }\n  }\n  Component c2 {\n    Port pd {\n      Interface pe\n    }\n  }\n}\n\nSystem b12 {\n  Component c3 {\n    Port pd {\n      Interface pf\n    }\n  }\n  Component c4 {\n    Port pb {\n      Interface pf\n    }\n  }\n}\n\nSystem b21 {\n  Component c1 {\n    Port pb {\n      Interface pe\n    }\n  }\n  Component c2 {\n    Port pd {\n      Interface pe\n    }\n  }\n}\n\nSystem b22 {\n  Component c3 {\n    Port pd {\n      Interface pf\n    }\n  }\n  Component c4 {\n    Port pb {\n      Interface pf\n    }\n  }\n}\n\nSystem b21 {\n  Component c1 {\n    Port pb {\n      Interface pe\n    }\n  }\n  Component c2 {\n    Port pd {\n      Interface pe\n    }\n  }\n}\n\nSystem b22 {\n  Component c3 {\n    Port pd {\n      Interface pf\n    }\n  }\n  Component c4 {\n    Port pb {\n      Interface pf\n    }\n  }\n}\n\nSystem b21 {\n ",
    "\n\n![image](https://user-images.githubusercontent.com/1024158/120079900-03000f00-c07c-11eb-8000-000000000000.png)\n\n## How to run\n\n```\n$ python3 main.py\n```\n\n## How to test\n\n```\n$ python3 -m unittest\n```\n\n## How to use\n\n```\n$ python3 main.py\n\nPlease input the text:\n\nThe system is designed to implement the functional architecture of an automotive powertrain, including the input of fuel commands, engine start-stop control, and support for power transmission and distribution. Users can control the system’s power output through fuel commands. Once the engine is ignited and started, the system generates engine torque according to the fuel command. The torque is then sequentially amplified from the engine to the transmission, transmitted to the driveshaft, and finally distributed to the left and right wheels, thus enabling control of the vehicle’s driving force. Additionally, users can shut down",
    "\nThe output model is a SysML v2 textual model.\n\nOutput Requirement:\nThe output model should be a SysML v2 textual model.\n\n## 2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.",
    "\n\n```\npackage VehiclePowertrainSystem\n\nimport SysML::*\n\ncontext VehiclePowertrainSystem {\n\tpart {\n\t\tpart {\n\t\t\tpart {\n\t\t\t\tpart {\n\t\t\t\t\tpart {\n\t\t\t\t\t\tpart {\n\t\t\t\t\t\t\tpart {\n\t\t\t\t\t\t\t\tpart {\n\t\t\t\t\t\t\t\t\tpart {\n\t\t\t\t\t\t\t\t\t\tpart {\n\t\t\t\t\t\t\t\t\t\t\tpart {\n\t\t\t\t\t\t\t\t\t\t\t\tpart {\n\t\t\t\t\t\t\t\t\t\t\t\t\tpart {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tpart {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpart {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpart {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpart {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpart {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpart {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpart {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpart {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpart {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpart {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpart {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpart {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpart {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpart {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpart {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpart {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpart {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpart {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpart {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpart {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpart {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpart {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpart {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpart {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpart {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpart {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpart {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpart {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpart {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpart {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpart {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpart {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpart {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpart {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t",
    "\n\n![image](https://user-images.githubusercontent.com/1019791/113481457-00000000-94d1-11eb-8021-000000000000.png)\n\n## How to run\n\n```\n$ python3 main.py\n```\n\n## How to test\n\n```\n$ python3 -m unittest\n```\n\n## How to use\n\n```\n$ python3 main.py\n```\n\n## How to contribute\n\nPlease read [CONTRIBUTING.md](https://github.com/mbse-lab/mbse-lab.github.io/blob/master/CONTRIBUTING.md) for details on our code of conduct, and the process for submitting pull requests to us.\n\n## Authors\n\n* **** - *Initial work* - [mbse-lab](https://github.com/mbse-lab)\n\nSee also the list of [contributors](https://github.com/mbse-lab/mbse-lab.github.io/contributors) who participated in this",
    "\n![image](https://user-images.githubusercontent.com/10144772/120910700-00003000-c6b0-11eb-8003-000000000000.png)\n\nOutput Code:\n```\npackage VehicleTrailer\n\nimport sysml::*\n\ncontext VehicleTrailerContext {\n\tVehicleTrailerContext() {\n\t\tself.towBall = TowBall::new();\n\t\tself.coupler = Coupler::new();\n\t\tself.chassis = Chassis::new();\n\t\tself.trailerFrame = TrailerFrame::new();\n\t\tself.trailer = Trailer::new();\n\t\tself.vehicle = Vehicle::new();\n\t}\n\ttowBall: TowBall;\n\tcoupler: Coupler;\n\tchassis: Chassis;\n\ttrailerFrame: TrailerFrame;\n\ttrailer: Trailer;\n\tvehicle: Vehicle;\n}\n\nclass TowBall {\n\ttowBall() {\n\t\tself.towBall = T",
    "\n\n![image](https://user-images.githubusercontent.com/10063471/120910400-00000000-c6b0-11eb-8000-000000000000.png)\n\n![image](https://user-images.githubusercontent.com/10063471/120910403-03938700-c6b0-11eb-8000-000000000000.png)\n\n![image](https://user-images.githubusercontent.com/10063471/120910405-068e7780-c6b0-11eb-8000-000000000000.png)\n\n![image](https://user-images.githubusercontent.com/10063471/120910407-098968",
    "\n![image](https://user-images.githubusercontent.com/10001027/120079300-00000000-c07c-11eb-9000-000000000000.png)\n\n## How to run\n\n### 1. Install dependencies\n\n```\npip install -r requirements.txt\n```\n\n### 2. Run the code\n\n```\npython main.py\n```\n\n## How to use\n\n### 1. Input\n\nThe input is a text file. The text file should be in the same directory as the main.py file.\n\n### 2. Output\n\nThe output is a text file. The text file will be in the same directory as the main.py file.\n\n## How to test\n\n### 1. Test the code\n\n```\npython test.py\n```\n\n### 2. Test the code with a specific input file\n\n```\npython test.py -i <input_file_name>\n```\n\n## How to contribute\n\n### 1",
    "\n\n```\npackage FuelManagement\n\nimport sysml::*\n\ncontext FuelManagement {\n\tstorageTank: StorageTank;\n\tfuelPump: FuelPump;\n\tfuelTank: FuelTank;\n}\n\nstorageTank: StorageTank {\n\tcapacity: 1000000;\n\tfuelLevel: 1000000;\n}\n\nfuelPump: FuelPump {\n\tfuelLevel: 1000000;\n}\n\nfuelTank: FuelTank {\n\tcapacity: 1000000;\n\tfuelLevel: 1000000;\n}\n\n```\n\n## 2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2",
    "\n![image](https://user-images.githubusercontent.com/50071599/120077700-08000000-c07f-11eb-8400-000000000000.png)\n\n## 2. Modeling\n\n### 2.1. Modeling Process\n\n#### 2.1.1. Modeling Process\n\nThe modeling process is divided into three steps:\n\n- **Step 1: Modeling Process**\n- **Step 2: Modeling Process**\n- **Step 3: Modeling Process**\n\n#### 2.1.2. Modeling Process\n\nThe modeling process is divided into three steps:\n\n- **Step 1: Modeling Process**\n- **Step 2: Modeling Process**\n- **Step 3: Modeling Process**\n\n#### 2.1.3. Modeling Process\n\nThe modeling process is divided into three steps:\n\n- **Step 1: Modeling Process**\n- **Step 2: Modeling Process**\n- **",
    "\n\n```\npackage VehicleA\n\ncontext VehicleA\n\npackage VehicleA.VehicleA\n\ncontext VehicleA.VehicleA\n\npackage VehicleA.VehicleA.VehicleA\n\ncontext VehicleA.VehicleA.VehicleA\n\npackage VehicleA.VehicleA.VehicleA.VehicleA\n\ncontext VehicleA.VehicleA.VehicleA.VehicleA\n\npackage VehicleA.VehicleA.VehicleA.VehicleA.VehicleA\n\ncontext VehicleA.VehicleA.VehicleA.VehicleA.VehicleA\n\npackage VehicleA.VehicleA.VehicleA.VehicleA.VehicleA.VehicleA\n\ncontext VehicleA.VehicleA.VehicleA.VehicleA.VehicleA.VehicleA\n\npackage VehicleA.VehicleA.VehicleA.VehicleA.VehicleA.VehicleA.VehicleA\n\ncontext VehicleA.VehicleA.VehicleA.VehicleA.VehicleA.VehicleA.VehicleA\n\npackage VehicleA.VehicleA.VehicleA.VehicleA.VehicleA.VehicleA.VehicleA.VehicleA\n\ncontext VehicleA.VehicleA.VehicleA.VehicleA.VehicleA.VehicleA.VehicleA.VehicleA\n\npackage VehicleA.",
    "\n![image](https://user-images.githubusercontent.com/10246102/120910400-00007000-c6b0-11eb-8000-000000000000.png)\n\n## How to run\n\n### 1. Install dependencies\n\n```\npip install -r requirements.txt\n```\n\n### 2. Run the model\n\n```\npython main.py\n```\n\n## How to contribute\n\n### 1. Fork the repository\n\n### 2. Create a branch\n\n```\ngit checkout -b <branch_name>\n```\n\n### 3. Make changes\n\n### 4. Commit changes\n\n```\ngit commit -m \"<commit_message>\"\n```\n\n### 5. Push changes\n\n```\ngit push origin <branch_name>\n```\n\n### 6. Create a pull request\n\n## License\n\n[MIT](https://choosealicense.com/licenses/mit/)\n/main.py\nimport sys\nimport os\nimport re\n",
    "\n![image](https://user-images.githubusercontent.com/10063478/120077001-00000f00-c07c-11eb-8000-000000000000.png)\n\nOutput Requirement:\n1. The output model should be a SysML v2 textual model.\n2. The output model should be a valid SysML v2 textual model.\n3. The output model should be a valid SysML v2 textual model that can be imported into SysML v2 tool.\n\n## 2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2",
    "\n\n![Output Model](https://github.com/mbse-lab/mbse-lab.github.io/blob/master/assets/images/sysml-v2-textual-grammar-output-model.png)\n\n## 2. SysML v2 Textual Grammar\n\n### 2.1. SysML v2 Textual Grammar\n\nSysML v2 textual grammar is a formal grammar that describes the syntax of SysML v2 textual code.\n\nSysML v2 textual grammar is defined in the following EBNF syntax:\n\n```\nSysMLv2TextualGrammar ::= SysMLv2TextualGrammarHeader SysMLv2TextualGrammarBody\n\nSysMLv2TextualGrammarHeader ::= \"SysML v2 Textual Grammar\"\n\nSysMLv2TextualGrammarBody ::= SysMLv2TextualGrammarBodyLine SysMLv2TextualGrammarBodyLine SysMLv2TextualGrammarBodyLine SysMLv2TextualGrammarBodyLine SysMLv2TextualGrammarBodyLine SysMLv2TextualGrammarBodyLine SysMLv2TextualGrammarBodyLine SysMLv2TextualGrammar",
    "\n\n```\nSubsystem A\n\tpart1\n\tpart2\n\tpart3 (with port p1)\n\tpart4\n\tpart5 (with port p2 and behavioral variants)\n\tpart6\n\nSubsystem B\n\tpart1\n\tpart2\n\tpart3 (with port p1)\n\tpart4\n\tpart5 (with port p2 and behavioral variants)\n\tpart6\n\nVehicleConfigA\n\tSubsystem A\n\t\tpart1\n\t\tpart2\n\t\tpart3 (with port p1)\n\t\tpart4\n\t\tpart5 (with port p2 and behavioral variants)\n\t\tpart6\n\tSubsystem B\n\t\tpart1\n\t\tpart2\n\t\tpart3 (with port p1)\n\t\tpart4\n\t\tpart5 (with port p2 and behavioral variants)\n\t\tpart6\n\nVehicleConfigB\n\tSubsystem A\n\t\tpart1\n\t\tpart2\n\t\tpart3 (with port p1)\n\t\tpart4\n\t\tpart5 (with port p2 and behavioral variants)\n\t\tpart6\n\tSubsystem B\n\t\tpart1\n\t\tpart2\n\t\tpart3 (with port p1)\n\t\t",
    "\n![image](https://user-images.githubusercontent.com/10080325/120914200-00000d80-c6c0-11eb-8000-000000000000.png)\n\n## 2. Modeling\n\n### 2.1. Modeling Process\n\n#### 2.1.1. Modeling Process\n\n![image](https://user-images.githubusercontent.com/10080325/120914203-03939480-c6c0-11eb-8001-000000000000.png)\n\n#### 2.1.2. Modeling Process\n\n![image](https://user-images.githubusercontent.com/10080325/120914205-068e8500-c6c0-11eb-8002-00000000000",
    "\n\n![image](https://user-images.githubusercontent.com/1023494/115128900-00008b00-9f9f-11eb-8031-000000000000.png)\n\n![image](https://user-images.githubusercontent.com/1023494/115128903-03941200-9f9f-11eb-8021-000000000000.png)\n\n![image](https://user-images.githubusercontent.com/1023494/115128905-068f0280-9f9f-11eb-8030-000000000000.png)\n\n![image](https://user-images.githubusercontent.com/1023494/115128907-0989f300-9",
    "\n\n```\npackage Vehicle_Compliance_Management\n\nimport SysML::*\n\ncontext Vehicle_Compliance_Management\n\npackage Vehicle_Compliance_Management\n\nimport SysML::*\n\ncontext Vehicle_Compliance_Management\n\npackage Vehicle_Compliance_Management\n\nimport SysML::*\n\ncontext Vehicle_Compliance_Management\n\npackage Vehicle_Compliance_Management\n\nimport SysML::*\n\ncontext Vehicle_Compliance_Management\n\npackage Vehicle_Compliance_Management\n\nimport SysML::*\n\ncontext Vehicle_Compliance_Management\n\npackage Vehicle_Compliance_Management\n\nimport SysML::*\n\ncontext Vehicle_Compliance_Management\n\npackage Vehicle_Compliance_Management\n\nimport SysML::*\n\ncontext Vehicle_Compliance_Management\n\npackage Vehicle_Compliance_Management\n\nimport SysML::*\n\ncontext Vehicle_Compliance_Management\n\npackage Vehicle_Compliance_Management\n\nimport SysML::*\n\ncontext Vehicle_Compliance_Management\n\npackage Vehicle_Compliance_Management\n\nimport SysML::*\n\ncontext Vehicle_Compliance_Management\n\npackage Vehicle_Compliance_Management\n\nimport SysML::*\n\ncontext Vehicle_Compliance_Management\n",
    "\n![Output Model](https://github.com/mbse-lab/mbse-lab.github.io/blob/master/images/output_model.png)\n\n## 2. System Modeling\n\n### 2.1. System Modeling\n\n#### 2.1.1. System Modeling\n\nThe system model is created using the SysML v2 textual grammar. The system model is created in the following steps:\n1. Create a SysML v2 textual model.\n2. Create a SysML v2 textual diagram.\n3. Create a SysML v2 textual diagram.\n4. Create a SysML v2 textual diagram.\n5. Create a SysML v2 textual diagram.\n6. Create a SysML v2 textual diagram.\n7. Create a SysML v2 textual diagram.\n8. Create a SysML v2 textual diagram.\n9. Create a SysML v2 textual diagram.\n10. Create a SysML v2 textual diagram.\n11. Create a SysML v2 textual diagram.\n12. Create a SysML v2 textual diagram.",
    "\n\n![image](https://user-images.githubusercontent.com/10271041/120910700-00000f00-c6b0-11eb-8000-000000000000.png)\n\n![image](https://user-images.githubusercontent.com/10271041/120910703-03939600-c6b0-11eb-8021-000000000000.png)\n\n![image](https://user-images.githubusercontent.com/10271041/120910705-068e8680-c6b0-11eb-8000-000000000000.png)\n\n![image](https://user-images.githubusercontent.com/10271041/120910707-098977",
    "\nThe output model is a SysML v2 textual code.\n\nOutput Requirement:\nThe output model is a SysML v2 textual code.\n\n## 2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2",
    "\n\n```\nSystem: Fuel Economy System\n\nPackage: Fuel Economy System\n\nPackage: Fuel Economy System\n\nPackage: Fuel Economy System\n\nPackage: Fuel Economy System\n\nPackage: Fuel Economy System\n\nPackage: Fuel Economy System\n\nPackage: Fuel Economy System\n\nPackage: Fuel Economy System\n\nPackage: Fuel Economy System\n\nPackage: Fuel Economy System\n\nPackage: Fuel Economy System\n\nPackage: Fuel Economy System\n\nPackage: Fuel Economy System\n\nPackage: Fuel Economy System\n\nPackage: Fuel Economy System\n\nPackage: Fuel Economy System\n\nPackage: Fuel Economy System\n\nPackage: Fuel Economy System\n\nPackage: Fuel Economy System\n\nPackage: Fuel Economy System\n\nPackage: Fuel Economy System\n\nPackage: Fuel Economy System\n\nPackage: Fuel Economy System\n\nPackage: Fuel Economy System\n\nPackage: Fuel Economy System\n\nPackage: Fuel Economy System\n\nPackage: Fuel Economy System\n\n",
    "\nThe output model is a sequence of acceleration, velocity variation, and displacement throughout the vehicle's entire motion process.\n\nOutput Requirement:\nThe output model is a sequence of acceleration, velocity variation, and displacement throughout the vehicle's entire motion process.\n\n## 2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2",
    "\n![image](https://user-images.githubusercontent.com/10080325/120910704-00007080-c6b0-11eb-8003-000000000000.png)\n\n## 2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2",
    "\n![image](https://user-images.githubusercontent.com/52376448/120910701-00004b00-c63f-11eb-8001-400000000000.png)\n\nOutput Result:\n![image](https://user-images.githubusercontent.com/52376448/120910703-01317800-c63f-11eb-8000-400000000000.png)\n/src/main/java/com/mbse/sysml/model/SysMLModel.java\npackage com.mbse.sysml.model;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class SysMLModel {\n    private String name;\n    private String description;\n    private List<SysMLModel> children;\n\n    public SysMLModel(String name, String description) {\n        this.name = name;\n        this.description = description;\n       ",
    "\nThe output model should be a SysML v2 textual model.\n\nOutput Requirement:\nThe output model should be a SysML v2 textual model.\n\n## 2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2",
    "\nThe output model should be a SysML v2 textual code that can be directly used in the SysML v2 tool.\n\nOutput Requirement:\nThe output model should be a SysML v2 textual code that can be directly used in the SysML v2 tool.\n\n## 2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2",
    "\nThe system must be capable of transmitting and outputting power, and logically should have the ability to provide power as well as generate torque. The system should include a torque generator component responsible for generating torque. At the physical level, the system must include a powertrain, which should contain an engine responsible for the actual execution of torque generation. The function of the system’s torque generator should be able to be mapped and implemented onto the engine within the powertrain, achieving effective correspondence and allocation between logical functions and physical implementation.\n\n## 2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2",
    "\nThe output model is a SysML v2 textual model.\n\nOutput Requirement:\nThe output model should be a SysML v2 textual model.\n\n## 2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.",
    "\n![image](https://user-images.githubusercontent.com/10246100/120910004-00000000-c6b0-11eb-8000-000000000000.png)\n\n## How to run\n\n### 1. Install dependencies\n\n```\npip install -r requirements.txt\n```\n\n### 2. Run the code\n\n```\npython main.py\n```\n\n## How to use\n\n### 1. Input\n\nThe input is a text file. The input file should be in the same directory as the main.py file.\n\n### 2. Output\n\nThe output is a text file. The output file will be in the same directory as the main.py file.\n\n## How to test\n\n### 1. Test the code\n\n```\npython test.py\n```\n\n### 2. Test the code with a specific input file\n\n```\npython test.py -i <input_file_name>\n```\n\n## How to contribute\n\n### 1",
    "\n\n![image](https://user-images.githubusercontent.com/10247131/120910700-00000f00-c6b0-11eb-8000-000000000000.png)\n\n## How to run\n\n```\npython3 main.py\n```\n\n## How to test\n\n```\npython3 test.py\n```\n\n## How to train\n\n```\npython3 train.py\n```\n\n## How to generate data\n\n```\npython3 generate_data.py\n```\n\n## How to generate data for training\n\n```\npython3 generate_data_for_training.py\n```\n\n## How to generate data for testing\n\n```\npython3 generate_data_for_testing.py\n```\n\n## How to generate data for training and testing\n\n```\npython3 generate_data_for_training_and_testing.py\n```\n\n## How to generate data for training, testing and validation\n\n```\npython3 generate_data_for_training_testing_",
    "\n![image](https://user-images.githubusercontent.com/42316403/120917001-00000900-c6e0-11eb-8000-000000000000.png)\n\n## 2. Modeling\n\n### 2.1. Modeling Process\n\n#### 2.1.1. Modeling Process\n\nThe modeling process is divided into three steps:\n\n- **Step 1: Modeling Process**\n- **Step 2: Modeling Process**\n- **Step 3: Modeling Process**\n\n#### 2.1.2. Step 1: Modeling Process\n\nThe first step is to extract the key functional/non‑functional information from the input requirement.\n\nThe key functional/non‑functional information is extracted from the input requirement and mapped to various grammar in SysML v2 textual grammar.\n\n#### 2.1.3. Step 2: Modeling Process\n\nThe second step is to map the key functional/non‑functional information to various grammar",
    "\nThe system should output a SysML v2 textual model that contains the following information:\n1. The name of the system.\n2. The name of each component.\n3. The security classification level of each component.\n4. The security classification level of each connection between components.\n\nThe system should also output a SysML v2 textual model that contains the following information:\n1. The name of the system.\n2. The name of each component.\n3. The security classification level of each component.\n4. The security classification level of each connection between components.\n\nThe system should also output a SysML v2 textual model that contains the following information:\n1. The name of the system.\n2. The name of each component.\n3. The security classification level of each component.\n4. The security classification level of each connection between components.\n\nThe system should also output a SysML v2 textual model that contains the following information:\n1. The name of the system.\n2. The name of each component.\n3. The security classification level of each component.\n4. The security classification level of each connection between components.\n\nThe system should also",
    "\n![image](https://user-images.githubusercontent.com/10241521/120910400-01000000-c6b0-11eb-8040-000000000000.png)\n\n## How to run\n\n### 1. Install dependencies\n\n```\npip install -r requirements.txt\n```\n\n### 2. Run the code\n\n```\npython main.py\n```\n\n## How to use\n\n### 1. Input\n\nThe input is a text file. The text file should be in the same directory as the main.py file.\n\n### 2. Output\n\nThe output is a text file. The text file will be in the same directory as the main.py file.\n\n## How to test\n\n### 1. Test the code\n\n```\npython test.py\n```\n\n### 2. Test the code with a specific input file\n\n```\npython test.py -i <input_file_name>\n```\n\n## How to contribute\n\n### 1",
    "\n\n```\npackage BloodGlucoseMeter\n\nimport sysml::*\n\nmodel BloodGlucoseMeter\n\n// Battery\n\n// BatteryStatus\n\n// BatteryStatusAlarm\n\n// BatteryStatusEmergencyResponse\n\n// BloodGlucoseMeter\n\n// BloodGlucoseMeterAlarm\n\n// BloodGlucoseMeterEmergencyResponse\n\n// BloodGlucoseMeterStatus\n\n// BloodGlucoseMeterStatusAlarm\n\n// BloodGlucoseMeterStatusEmergencyResponse\n\n// BloodGlucoseMeterStatusMonitor\n\n// BloodGlucoseMeterStatusMonitorAlarm\n\n// BloodGlucoseMeterStatusMonitorEmergencyResponse\n\n// BloodGlucoseMeterStatusMonitorStatus\n\n// BloodGlucoseMeterStatusMonitorStatusAlarm\n\n// BloodGlucoseMeterStatusMonitorStatusEmergencyResponse\n\n// BloodGlucoseMeterStatusMonitorStatusMonitor\n\n// BloodGlucoseMeterStatusMonitorStatusMonitorAlarm\n\n// BloodGlucoseMeterStatusMonitorStatusMonitorEmergencyResponse",
    "\nThe system should output a SysML v2 textual model that contains all the constants defined in the input requirement. The model should be well-structured and organized, with clear and concise descriptions of each constant, including its name, value, unit, and context. The model should also include appropriate annotations and references to ensure its accuracy and reliability.\n\nThe system should also provide a set of standard and precise constants for scientific computing and simulation applications, including mathematical constants, fundamental physical constants, and context-specific parameters. Specifically, the system should have built-in commonly used mathematical constants such as Euler’s number e and pi π, with numerical precision up to 20 decimal places. At the same time, it should integrate typical physical constants, including the precisely defined speed of light in vacuum, the fine-structure constant, and the electron-to-proton mass ratio, with clear SI unit annotations. Additionally, the system should support scenario-based constants, such as standard gravitational acceleration on Earth and the amplifier gain coefficient in specific products (e.g., Model X). All constants should be easily accessible and verifiable by the system, in order to meet the high standards of scientific computation and engineering domains.\n",
    "\nThe output model should be a SysML v2 textual model that describes the specification model for automotive components. The model should include a Tire class that represents a tire, with attributes for manufacturer, rim diameter, and width. The model should also include a TireData class that represents a tire data instance, with attributes for manufacturer, rim diameter, and width. The model should include relationships between the Tire and TireData classes, with a TireData instance being a member of a Tire class. The model should include a TireData instance with the manufacturer as Michelin, a rim diameter of 18.0, and a width of 245 as a French tire.\n\n## 2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.",
    "\nThe output model should be a SysML v2 textual model that contains the following elements:\n1. A package named “Automotive” that contains the following elements:\n   - A component named “Vehicle” that contains the following elements:\n     - A property named “Mass” with a value of 1200 kilograms.\n     - A property named “Length” with a value of 4.82 meters.\n     - A property named “LeftWheel” with a value of a component named “LeftWheel” that contains the following elements:\n       - A property named “HubDiameter” with a value of 18 inches.\n       - A property named “Width” with a value of 245 millimeters.\n       - A property named “OuterDiameter” with a value of 20.5 inches.\n       - A property named “Tire” with a value of a component named “Tire” that contains the following elements:\n         - A property named “Height” with a value of 1.5 inches.\n     - A property named “RightWheel” with a value of a component named “RightWheel” that contains the following elements:\n       - A property named “Hub",
    "\n\n```\npackage VehiclePowertrain\n\nimport SysML::v2.0.0\n\ntype VehiclePowertrain =\n\tEngine: Engine\n\tTransmission: Transmission\n\ntype Engine =\n\tEngineType: EngineType\n\ntype EngineType =\n\tFourCylinder\n\tSixCylinder\n\ntype Transmission =\n\tTransmissionType: TransmissionType\n\ntype TransmissionType =\n\tManual\n\tAutomatic\n\ntype Vehicle =\n\tVehiclePowertrain: VehiclePowertrain\n\ntype VehicleType =\n\tHighPerformance\n\tStandard\n\ntype VehiclePowertrainConfiguration =\n\tVehicle: Vehicle\n\tVehicleType: VehicleType\n\ntype VehiclePowertrainConfigurationRule =\n\tVehiclePowertrainConfiguration: VehiclePowertrainConfiguration\n\tVehiclePowertrainConfigurationRule: VehiclePowertrainConfigurationRule\n\ntype VehiclePowertrainConfigurationRule =\n\tVehiclePowertrainConfiguration: VehiclePowertrainConfiguration\n\tVehiclePowertrainConfigurationRule: VehiclePowertrainConfigurationRule\n\ntype VehiclePowertrainConfigurationRule =\n\tVehiclePowertrainConfiguration: VehiclePowertrainConfiguration\n\tVehiclePowertrainConfigurationRule: VehiclePowertrainConfigurationRule\n\ntype VehiclePowertrainConfigurationRule =\n\tVehiclePowertrainConfiguration",
    "\n![image](https://user-images.githubusercontent.com/10063470/120077000-00000000-c07c-11eb-8030-000000000000.png)\n\n## 2. Modeling\n\n### 2.1. Modeling Process\n\n#### 2.1.1. Modeling Process\n\n![image](https://user-images.githubusercontent.com/10063470/120077004-03938700-c07c-11eb-8000-000000000000.png)\n\n#### 2.1.2. Modeling Process\n\n![image](https://user-images.githubusercontent.com/10063470/120077006-068e7780-c07c-11eb-8000-00000000000",
    "\n![image](https://user-images.githubusercontent.com/1019791/119257304-00001080-bb7f-11eb-8000-000000000000.png)\n\n## How to run\n\n```\n$ python3 main.py\n```\n\n## How to test\n\n```\n$ python3 -m unittest\n```\n\n## How to use\n\n```\n$ python3 main.py\n\nPlease input the text:\n\nThis system is used for the automotive fuel system and covers the requirements for components such as the fuel tank assembly, fuel pump, and fuel tank. The fuel tank assembly provides an outlet interface for fuel (including a return function), enabling the delivery of fuel to the engine or other components, as well as the reception of returned fuel. The fuel pump, installed inside the fuel tank assembly, serves to pump fuel from the fuel tank and supply it to the engine, while also being capable of receiving returned fuel. The system is able to monitor and transmit fuel temperature information. It is required that fuel can circulate efficiently and",
    "\nThe system must be capable of supporting and managing data and units related to physical quantities, and is required to cover various base physical quantities in the International System of Quantities (ISQ), such as length, mass, time, electric current, temperature, amount of substance, and luminous intensity. The system should also allow for corresponding import and extension. It must ensure accurate representation of relevant physical quantities and consistency of information, facilitating physical quantity data processing and unit conversion operations in subsequent engineering or scientific development. The system must meet users' diverse requirements for managing physical quantity systems.\n\nOutput Requirement:\nThe system must be capable of supporting and managing data and units related to physical quantities, and is required to cover various base physical quantities in the International System of Quantities (ISQ), such as length, mass, time, electric current, temperature, amount of substance, and luminous intensity. The system should also allow for corresponding import and extension. It must ensure accurate representation of relevant physical quantities and consistency of information, facilitating physical quantity data processing and unit conversion operations in subsequent engineering or scientific development. The system must meet users' diverse requirements for managing physical quantity systems.\n\nOutput Requirement:\nThe",
    "\n\n```\npackage UnitLibrary\n\nimport SI::*\nimport US::*\n\ntype UnitLibrary is library\n\ntype UnitLibrary::Unit is class\n\ntype UnitLibrary::Unit::UnitName is string\n\ntype UnitLibrary::Unit::UnitSymbol is string\n\ntype UnitLibrary::Unit::UnitType is enumeration of\n\ntype UnitLibrary::Unit::UnitType::SIUnit\n\ntype UnitLibrary::Unit::UnitType::USUnit\n\ntype UnitLibrary::Unit::UnitType::SIUnit::SIUnitName is string\n\ntype UnitLibrary::Unit::UnitType::SIUnit::SIUnitSymbol is string\n\ntype UnitLibrary::Unit::UnitType::USUnit::USUnitName is string\n\ntype UnitLibrary::Unit::UnitType::USUnit::USUnitSymbol is string\n\ntype UnitLibrary::Unit::UnitType::SIUnit::SIUnitName::SIUnitName is string\n\ntype UnitLibrary::Unit::UnitType::SIUnit::SIUnitSymbol::SIUnitSymbol is string\n\ntype UnitLibrary::Unit::UnitType::USUnit::USUnitName::USUnitName is string\n\ntype UnitLibrary::Unit::UnitType::USUnit::",
    "\n\n```\npackage CarHeadlampTiltAdjustmentKnob\n\nimport SI::*\n\ntype CarHeadlampTiltAdjustmentKnob is\n  element\n\nend CarHeadlampTiltAdjustmentKnob\n\n```\n\n```\npackage CarHeadlampTiltAdjustmentKnob\n\nimport SI::*\n\ntype CarHeadlampTiltAdjustmentKnob is\n  element\n\nend CarHeadlampTiltAdjustmentKnob\n\n```\n\n```\npackage CarHeadlampTiltAdjustmentKnob\n\nimport SI::*\n\ntype CarHeadlampTiltAdjustmentKnob is\n  element\n\nend CarHeadlampTiltAdjustmentKnob\n\n```\n\n```\npackage CarHeadlampTiltAdjustmentKnob\n\nimport SI::*\n\ntype CarHeadlampTiltAdjustmentKnob is\n  element\n\nend CarHeadlampTiltAdjustmentKnob\n\n```\n\n```\npackage CarHeadlampTiltAdjustmentKnob\n\nimport SI::*\n\ntype CarHeadlampTiltAdjustmentKnob is\n  element\n\nend CarHeadlampTiltAdjustmentKnob\n\n```\n\n```\npackage CarHeadlampTiltAdjustmentKnob\n\nimport SI::*\n\n",
    "\nThe system should output a SysML v2 textual model that describes the system’s data types, including the data types mentioned above, as well as any other data types that are required to describe the system’s behavior. The system should also output a SysML v2 textual model that describes the system’s behavior, including the system’s state machine, the system’s state transitions, and the system’s state actions. The system should also output a SysML v2 textual model that describes the system’s status conditions, including the system’s status conditions, the system’s status condition transitions, and the system’s status condition actions.\n\nOutput Requirement:\nThe system should output a SysML v2 textual model that describes the system’s data types, including the data types mentioned above, as well as any other data types that are required to describe the system’s behavior. The system should also output a SysML v2 textual model that describes the system’s behavior, including the system’s state machine, the system’s state transitions, and the system’s state actions. The system should also output a SysML v2 textual model that describes the system’s status conditions,",
    "\nThe system should be able to output SysML v2 textual code that can be used to generate a SysML v2 model. The output model should be able to support the following:\n1. Spare parts:\n   - Archiving and management in the form of Bags, with each element in a Bag being a spare part.\n2. Integers:\n   - Storage in the form of Lists, where each list item is an integer value.\n3. Strings:\n   - Management using Sets.\n4. Personnel:\n   - Management using OrderedSets, with each element being of the Person type.\n5. Nested collection management:\n   - Storing a List composed of multiple personnel sets (Set<Person>).\n6. Real numbers:\n   - Processing in the form of fixed-length arrays (with a length of 4).\n\nThe system should be able to output SysML v2 textual code that can be used to generate a SysML v2 model. The output model should be able to support the following:\n1. Spare parts:\n   - Archiving and management in the form of Bags, with each element in a Bag being a spare part.\n2. Integers",
    "\nThe system should output a SysML v2 textual model that describes the tire information. The model should include the following elements:\n1. A package that contains the tire information.\n2. A class that represents a tire.\n3. Attributes that describe the tire’s manufacturer name, rim diameter, tire width, and installation position.\n4. A class that represents a tire manufacturer.\n5. Attributes that describe the tire manufacturer’s name and address.\n6. A class that represents a tire installation position.\n7. Attributes that describe the tire installation position’s x, y, and z coordinates.\n\nThe system should be able to generate the SysML v2 textual model based on the input information. The model should be able to represent the tire information in a structured and concise manner.\n\nThe system should be able to generate the SysML v2 textual model based on the input information. The model should be able to represent the tire information in a structured and concise manner.\n\nThe system should be able to generate the SysML v2 textual model based on the input information. The model should be able to represent the tire information in",
    "\nThe system should output a SysML v2 textual model that describes the system behavior. The model should include the following elements:\n1. A description of the system, including its name, purpose, and function.\n2. A description of the system inputs, including their names, data types, and units.\n3. A description of the system outputs, including their names, data types, and units.\n4. A description of the system state variables, including their names, data types, and units.\n5. A description of the system state equations, including the state variables and the equations that describe the system behavior.\n6. A description of the system constraints, including the constraints that limit the system behavior.\n7. A description of the system initial conditions, including the initial values of the state variables.\n8. A description of the system parameters, including the parameters that are used to describe the system behavior.\n9. A description of the system equations, including the equations that describe the system behavior.\n10. A description of the system algorithms, including the algorithms that are used to implement the system behavior.\n11. A description of the system data, including the data that is used to store the system state and",
    "\nThe output model is a SysML v2 textual model.\n\nOutput Requirement:\nThe output model should be a SysML v2 textual model.\n\n## 2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.",
    "\nThe system should be able to generate SysML v2 textual code that can be used to model the engineering materials database system. The generated SysML v2 textual code should be valid and complete, and should be able to be directly imported into the SysML v2 modeling tool.\n\n## 2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2",
    "\nThe system should output a SysML v2 textual model that can be used to implement the above requirements.\n\n## 2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2",
    "\n![image](https://user-images.githubusercontent.com/10241523/120910404-00000f00-c6b0-11eb-8000-000000000000.png)\n\n## How to run\n\n### 1. Install dependencies\n\n```\npip install -r requirements.txt\n```\n\n### 2. Run the code\n\n```\npython main.py\n```\n\n## How to use\n\n### 1. Input\n\nThe input is a text file. The text file should be in the same directory as the code.\n\n### 2. Output\n\nThe output is a text file. The text file will be in the same directory as the code.\n\n## Reference\n\n[1] , , , et al. A Systematic Approach to Automated Generation of SysML v2 Models from Natural Language Descriptions[J]. IEEE Transactions on Software Engineering, 2021, 47(1): 1-1.\n\n[2] ,",
    "\nThe output model is a SysML v2 textual model, which is a textual representation of the model. The model is a textual representation of the model, which is a textual representation of the model. The model is a textual representation of the model, which is a textual representation of the model. The model is a textual representation of the model, which is a textual representation of the model. The model is a textual representation of the model, which is a textual representation of the model. The model is a textual representation of the model, which is a textual representation of the model. The model is a textual representation of the model, which is a textual representation of the model. The model is a textual representation of the model, which is a textual representation of the model. The model is a textual representation of the model, which is a textual representation of the model. The model is a textual representation of the model, which is a textual representation of the model. The model is a textual representation of the model, which is a textual representation of the model. The model is a textual representation of the model, which is a textual representation of the model. The",
    "\n![image](https://user-images.githubusercontent.com/50071599/120910700-20002000-c6b0-11eb-8000-000000000000.png)\n\n## 2. System Design\n\n### 2.1. System Architecture\n\n![image](https://user-images.githubusercontent.com/50071599/120910704-242c3d80-c6b0-11eb-8010-000000000000.png)\n\n### 2.2. System Components\n\n#### 2.2.1. User Interface\n\nThe user interface is a web application that allows users to interact with the system. The user interface is implemented using the React framework. The user interface consists of a login page, a home page, and a page for each of the three main functions of the system: boarding, refueling, and alighting.\n\n#### 2.",
    "\n![image](https://user-images.githubusercontent.com/10247130/120910700-00003000-c6b0-11eb-8000-000000000000.png)\n\n## How to run\n\n### 1. Install dependencies\n\n```\npip install -r requirements.txt\n```\n\n### 2. Run the code\n\n```\npython main.py\n```\n\n## How to use\n\n### 1. Input\n\nThe input is a text file. The text file should be in the same directory as the code.\n\n### 2. Output\n\nThe output is a text file. The text file is saved in the same directory as the code.\n\n## Reference\n\n[1] , , , et al. A Systematic Approach to Automated Generation of SysML v2 Models from Textual Descriptions[J]. IEEE Transactions on Software Engineering, 2020, 46(1): 1-1.\n\n[2] ,",
    "\n![image](https://user-images.githubusercontent.com/1017076/120914005-00003900-c6c0-11eb-8000-000000000000.png)\n\n## How to run\n\n### 1. Install dependencies\n\n```\npip install -r requirements.txt\n```\n\n### 2. Run the model\n\n```\npython main.py\n```\n\n### 3. Output\n\n```\n# 1. Fuel Tank Assembly\n\n## 1.1 Fuel Tank Assembly\n\n### 1.1.1 Fuel Tank Assembly\n\n### 1.1.2 Fuel Tank Assembly\n\n### 1.1.3 Fuel Tank Assembly\n\n### 1.1.4 Fuel Tank Assembly\n\n### 1.1.5 Fuel Tank Assembly\n\n### 1.1.6 Fuel Tank Assembly\n\n### 1.1.7 Fuel Tank Assembly\n\n### 1.1.8 F",
    "\nThe system should output a SysML v2 textual model that describes the system. The model should include the following information:\n1. The system should include a component that represents the camera.\n2. The system should include a component that represents the lens.\n3. The system should include a component that represents the sensor.\n4. The system should include a component that represents the image processor.\n5. The system should include a component that represents the flash.\n6. The system should include a component that represents the shutter.\n7. The system should include a component that represents the light source.\n8. The system should include a component that represents the focus point.\n9. The system should include a component that represents the focus point.\n10. The system should include a component that represents the focus point.\n11. The system should include a component that represents the focus point.\n12. The system should include a component that represents the focus point.\n13. The system should include a component that represents the focus point.\n14. The system should include a component that represents the focus point.\n15. The system should include a component that represents the focus point.\n16",
    "\nThe output model is a SysML v2 textual model.\n\nOutput Requirement:\nThe output model should be a SysML v2 textual model.\n\n## 2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.",
    "\n![Output Model](https://github.com/mbse-lab/mbse-lab.github.io/blob/master/images/output_model.png)\n\n## 2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2",
    "\nThe output model is a SysML v2 textual model.\n\n## 2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.",
    "\nThe output model is a SysML v2 textual model.\n\nOutput Requirement:\nThe output model should be a SysML v2 textual model.\n\n## 2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.",
    "\n![image](https://user-images.githubusercontent.com/10241521/120910700-07000000-c6b0-11eb-9331-000000000000.png)\n\n## How to run\n\n### 1. Install dependencies\n\n```\npip install -r requirements.txt\n```\n\n### 2. Run the code\n\n```\npython main.py\n```\n\n## How to use\n\n### 1. Input\n\nThe input is a text file.\n\n### 2. Output\n\nThe output is a text file.\n\n## How to test\n\n### 1. Test the code\n\n```\npython test.py\n```\n\n### 2. Test the code with a specific input\n\n```\npython test.py --input_file <input_file_name>\n```\n\n## How to evaluate\n\n### 1. Evaluate the code\n\n```\npython evaluate.py\n```\n\n### 2. Evaluate the code with a specific input\n\n```\n",
    "\n\n![Output Model](https://github.com/jingjing-li/MBSE-Project/blob/master/Output%20Model.png)\n\nOutput Requirement:\nThe system should be able to generate a photograph from a scene. The photograph should be of high quality and should be focused on the scene.\n\nOutput Model:\n\n![Output Model](https://github.com/jingjing-li/MBSE-Project/blob/master/Output%20Model.png)\n\nOutput Requirement:\nThe system should be able to generate a photograph from a scene. The photograph should be of high quality and should be focused on the scene.\n\nOutput Model:\n\n![Output Model](https://github.com/jingjing-li/MBSE-Project/blob/master/Output%20Model.png)\n\nOutput Requirement:\nThe system should be able to generate a photograph from a scene. The photograph should be of high quality and should be focused on the scene.\n\nOutput Model:\n\n![Output Model](https://github.com/jingjing-li/MBSE-Project/blob",
    "\n\n```\nmodel PhotographyWorkflow\n\tpackage PhotographyWorkflow\n\tend package\n\tpackage body PhotographyWorkflow\n\tend package body\nend model\n```\n\n## 2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2",
    "\n\n```\npackage brake_control_system\n\nimport brake_control_system.sysml2.SysML2\n\nmodel brake_control_system\n\nend brake_control_system\n```\n\n```\npackage brake_control_system.sysml2\n\nimport brake_control_system.sysml2.SysML2\n\nmodel SysML2\n\nend SysML2\n```\n\n```\npackage brake_control_system.sysml2\n\nimport brake_control_system.sysml2.SysML2\n\nmodel SysML2\n\nend SysML2\n```\n\n```\npackage brake_control_system.sysml2\n\nimport brake_control_system.sysml2.SysML2\n\nmodel SysML2\n\nend SysML2\n```\n\n```\npackage brake_control_system.sysml2\n\nimport brake_control_system.sysml2.SysML2\n\nmodel SysML2\n\nend SysML2\n```\n\n```\npackage brake_control_system.sysml2\n\nimport brake_control_system",
    "\n![image](https://user-images.githubusercontent.com/10241523/120910700-07003900-c6b0-11eb-8000-000000000000.png)\n\n## How to run\n\n### 1. Install requirements\n\n```\npip install -r requirements.txt\n```\n\n### 2. Run the code\n\n```\npython main.py\n```\n\n## Reference\n\n[1] , , , et al. A Systematic Approach to Automated Generation of SysML v2 Models from Natural Language Descriptions[J]. IEEE Transactions on Software Engineering, 2020, 46(1): 1-1.\n\n[2] , , , et al. A Systematic Approach to Automated Generation of SysML v2 Models from Natural Language Descriptions[J]. IEEE Transactions on Software Engineering, 2020, 46(1): 1-1.\n\n[3] , ",
    "\n\n```\nBatteryChargingSystem: BatteryChargingSystem {\n  BatteryChargingSystem.BatteryLevel: BatteryLevel {\n    BatteryLevel.BatteryLevel: BatteryLevel {\n      BatteryLevel.BatteryLevel: BatteryLevel {\n        BatteryLevel.BatteryLevel: BatteryLevel {\n          BatteryLevel.BatteryLevel: BatteryLevel {\n            BatteryLevel.BatteryLevel: BatteryLevel {\n              BatteryLevel.BatteryLevel: BatteryLevel {\n                BatteryLevel.BatteryLevel: BatteryLevel {\n                  BatteryLevel.BatteryLevel: BatteryLevel {\n                    BatteryLevel.BatteryLevel: BatteryLevel {\n                      BatteryLevel.BatteryLevel: BatteryLevel {\n                        BatteryLevel.BatteryLevel: BatteryLevel {\n                          BatteryLevel.BatteryLevel: BatteryLevel {\n                            BatteryLevel.BatteryLevel: BatteryLevel {\n                              BatteryLevel.BatteryLevel: BatteryLevel {\n                                BatteryLevel.BatteryLevel: BatteryLevel {\n                                  BatteryLevel.BatteryLevel: BatteryLevel {\n                                    BatteryLevel.BatteryLevel: BatteryLevel {\n                                      BatteryLevel.BatteryLevel: BatteryLevel {\n                                        BatteryLevel.BatteryLevel: BatteryLevel",
    "\n\n```\npackage Camera\n\nimport SysML::*\n\ntype Camera is\n  subsystem CameraSubsystem\n\ntype CameraSubsystem is\n  subsystem CameraSubsystem1\n\ntype CameraSubsystem1 is\n  subsystem CameraSubsystem11\n\ntype CameraSubsystem11 is\n  subsystem CameraSubsystem111\n\ntype CameraSubsystem111 is\n  subsystem CameraSubsystem1111\n\ntype CameraSubsystem1111 is\n  subsystem CameraSubsystem11111\n\ntype CameraSubsystem11111 is\n  subsystem CameraSubsystem111111\n\ntype CameraSubsystem111111 is\n  subsystem CameraSubsystem1111111\n\ntype CameraSubsystem1111111 is\n  subsystem CameraSubsystem11111111\n\ntype CameraSubsystem11111111 is\n  subsystem CameraSubsystem111111111\n\ntype CameraSubsystem111111111 is\n  subsystem CameraSubsystem1111111111\n\ntype CameraSubsystem1111111111 is\n  subsystem CameraSubsystem11111111111\n\ntype",
    "\n\n![image](https://user-images.githubusercontent.com/10059060/119259004-00008100-bbfe-11eb-8011-000000000000.png)\n\n![image](https://user-images.githubusercontent.com/10059060/119259006-0262db00-bbfe-11eb-8000-000000000000.png)\n\n![image](https://user-images.githubusercontent.com/10059060/119259007-042c9e80-bbfe-11eb-8000-000000000000.png)\n\n![image](https://user-images.githubusercontent.com/10059060/119259008-05f66200-bbfe-1",
    "\nThe output model is a textual code in SysML v2. The textual code is a sequence of statements, each of which is a SysML v2 statement. The textual code is a sequence of statements, each of which is a SysML v2 statement. The textual code is a sequence of statements, each of which is a SysML v2 statement. The textual code is a sequence of statements, each of which is a SysML v2 statement. The textual code is a sequence of statements, each of which is a SysML v2 statement. The textual code is a sequence of statements, each of which is a SysML v2 statement. The textual code is a sequence of statements, each of which is a SysML v2 statement. The textual code is a sequence of statements, each of which is a SysML v2 statement. The textual code is a sequence of statements, each of which is a SysML v2 statement. The textual code is a sequence of statements, each of which is a SysML v2 statement. The textual code is a sequence of statements, each of which is a SysML v2 statement. The textual code is a sequence of statements,",
    "\nThe output model is a SysML v2 textual model. The model is designed to describe the system’s functionality and structure in a clear and concise manner. The model includes the following elements:\n1. A system block that represents the entire system.\n2. A subsystem block that represents the camera subsystem.\n3. A subsystem block that represents the display subsystem.\n4. A subsystem block that represents the scene subsystem.\n5. A subsystem block that represents the image subsystem.\n6. A subsystem block that represents the photo subsystem.\n7. A subsystem block that represents the shooting subsystem.\n8. A subsystem block that represents the focusing subsystem.\n9. A subsystem block that represents the capturing subsystem.\n10. A subsystem block that represents the displaying subsystem.\n11. A subsystem block that represents the photo display subsystem.\n12. A subsystem block that represents the photo display subsystem.\n13. A subsystem block that represents the photo display subsystem.\n14. A subsystem block that represents the photo display subsystem.\n15. A subsystem block that represents the photo display subsystem.\n16. A subsystem block that represents the photo display subsystem.\n17. A subsystem block that",
    "\nThe output model is a SysML v2 textual model.\n\nOutput Requirement:\nThe output model should be a SysML v2 textual model that can be used to implement the camera information processing workflow.\n\n## 2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2",
    "\nThe system should output a SysML v2 textual model that contains the following information:\n1. The name of the system.\n2. The name of the sensor.\n3. The type of the sensor.\n4. The status of the sensor.\n5. The time of the last update.\n\nThe system should output a SysML v2 textual model that contains the following information:\n1. The name of the system.\n2. The name of the sensor.\n3. The type of the sensor.\n4. The status of the sensor.\n5. The time of the last update.\n\nThe system should output a SysML v2 textual model that contains the following information:\n1. The name of the system.\n2. The name of the sensor.\n3. The type of the sensor.\n4. The status of the sensor.\n5. The time of the last update.\n\nThe system should output a SysML v2 textual model that contains the following information:\n1. The name of the system.\n2. The name of the sensor.\n3. The type of the sensor.\n4. The status of the sensor.\n5.",
    "\n\n```\npackage Vehicle_State_Machine\n\nstatechart Vehicle_State_Machine {\n  statechart Vehicle_State_Machine {\n    state off {\n      statechart Vehicle_State_Machine {\n        state starting {\n          statechart Vehicle_State_Machine {\n            state on {\n              statechart Vehicle_State_Machine {\n                state off {\n                  statechart Vehicle_State_Machine {\n                    state starting {\n                      statechart Vehicle_State_Machine {\n                        state on {\n                          statechart Vehicle_State_Machine {\n                            state off {\n                              statechart Vehicle_State_Machine {\n                                state starting {\n                                  statechart Vehicle_State_Machine {\n                                    state on {\n                                      statechart Vehicle_State_Machine {\n                                        state off {\n                                          statechart Vehicle_State_Machine {\n                                            state starting {\n                                              statechart Vehicle_State_Machine {\n                                                state on {\n                                                  statechart Vehicle_State_Machine {\n                                                    state off {\n                                                      statechart Vehicle_State_Machine {\n                                                        state starting {\n                                                          statechart Vehicle_State_Machine {\n                                                            state on {\n                                                              statechart Vehicle_State_Machine {\n                                                                state off {\n                                                                  statechart Vehicle_State_Machine {\n                                                                    state starting {\n                                                                      statechart Vehicle_State_Machine {\n                                                                        state on {\n                                                                ",
    "\n![image](https://user-images.githubusercontent.com/10247192/120079000-00005000-c07c-11eb-9001-000000000000.png)\n\n## 2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2",
    "\n\n```\npackage VehiclePowerManagement\n\nimport sysml::*\n\npackage VehiclePowerManagement\n\npackage VehiclePowerManagement\n\npackage VehiclePowerManagement\n\npackage VehiclePowerManagement\n\npackage VehiclePowerManagement\n\npackage VehiclePowerManagement\n\npackage VehiclePowerManagement\n\npackage VehiclePowerManagement\n\npackage VehiclePowerManagement\n\npackage VehiclePowerManagement\n\npackage VehiclePowerManagement\n\npackage VehiclePowerManagement\n\npackage VehiclePowerManagement\n\npackage VehiclePowerManagement\n\npackage VehiclePowerManagement\n\npackage VehiclePowerManagement\n\npackage VehiclePowerManagement\n\npackage VehiclePowerManagement\n\npackage VehiclePowerManagement\n\npackage VehiclePowerManagement\n\npackage VehiclePowerManagement\n\npackage VehiclePowerManagement\n\npackage VehiclePowerManagement\n\npackage VehiclePowerManagement\n\npackage VehiclePowerManagement\n\npackage VehiclePowerManagement\n\npackage VehiclePowerManagement\n\npackage VehiclePowerManagement\n\npackage VehiclePowerManagement\n\npackage VehiclePowerManagement\n\npackage VehiclePowerManagement\n\npackage VehiclePowerManagement\n\npackage VehiclePowerManagement\n\npackage VehiclePowerManagement\n\npackage VehiclePowerManagement\n\npackage VehiclePowerManagement\n\npackage VehiclePowerManagement\n\npackage VehiclePowerManagement\n\npackage VehiclePowerManagement\n\npackage VehiclePowerManagement\n",
    "\n\n```\nSystem Start-up\n\tStart-up:\n\t\tStart-up:\n\t\t\tStart-up:\n\t\t\t\tStart-up:\n\t\t\t\t\tStart-up:\n\t\t\t\t\t\tStart-up:\n\t\t\t\t\t\t\tStart-up:\n\t\t\t\t\t\t\t\tStart-up:\n\t\t\t\t\t\t\t\t\tStart-up:\n\t\t\t\t\t\t\t\t\t\tStart-up:\n\t\t\t\t\t\t\t\t\t\t\tStart-up:\n\t\t\t\t\t\t\t\t\t\t\t\tStart-up:\n\t\t\t\t\t\t\t\t\t\t\t\t\tStart-up:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tStart-up:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tStart-up:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tStart-up:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tStart-up:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tStart-up:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tStart-up:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tStart-up:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tStart-up:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tStart-up:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tStart-up:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tStart-up:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tStart-up:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tStart-up:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tStart-up:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tStart-up:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tStart-up:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tStart-up:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tStart-up:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tStart-up:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tStart-up:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tStart-up:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tStart-up:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tStart-up:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tStart-up:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t",
    "\n\n```\npackage Vehicle_Power_Management\n\ncontext Vehicle_Power_Management\n\npackage Vehicle_Power_Management_State\n\ncontext Vehicle_Power_Management_State\n\npackage Vehicle_Power_Management_Signal\n\ncontext Vehicle_Power_Management_Signal\n\npackage Vehicle_Power_Management_Health\n\ncontext Vehicle_Power_Management_Health\n\npackage Vehicle_Power_Management_Health_State\n\ncontext Vehicle_Power_Management_Health_State\n\npackage Vehicle_Power_Management_Health_Signal\n\ncontext Vehicle_Power_Management_Health_Signal\n\npackage Vehicle_Power_Management_Health_Health_State\n\ncontext Vehicle_Power_Management_Health_Health_State\n\npackage Vehicle_Power_Management_Health_Health_Signal\n\ncontext Vehicle_Power_Management_Health_Health_Signal\n\npackage Vehicle_Power_Management_Health_Health_Health_State\n\ncontext Vehicle_Power_Management_Health_Health_Health_State\n\npackage Vehicle_Power_Management_Health_Health_Health_Signal\n\ncontext Vehicle_Power_Management_Health_Health_Health_Signal\n\npackage Vehicle_Power_Management_Health",
    "\n![image](https://user-images.githubusercontent.com/10080325/120911000-03000000-c6b0-11eb-8000-000000000000.png)\n\n## How to run\n\n### 1. Install dependencies\n\n```bash\npip install -r requirements.txt\n```\n\n### 2. Run the model\n\n```bash\npython main.py\n```\n\n## How to contribute\n\n### 1. Fork the repository\n\n### 2. Create a branch\n\n```bash\ngit checkout -b <branch_name>\n```\n\n### 3. Commit your changes\n\n```bash\ngit commit -m \"<commit_message>\"\n```\n\n### 4. Push to the branch\n\n```bash\ngit push origin <branch_name>\n```\n\n### 5. Create a new pull request\n\n## License\n\n[MIT](https://choosealicense.com/licenses/mit/)\n/main.py\nimport sys\nimport os\nimport re",
    "\n![image](https://user-images.githubusercontent.com/10246192/120910700-00000300-c6b0-11eb-8003-000000000000.png)\n\n## 2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2",
    "\n\n```\npackage VehicleStartStop\n\nimport sysml::*\n\ncontext VehicleStartStopContext {\n\tpart VehicleStartStopPart {\n\t\tpart VehicleStartStopPart {\n\t\t\tpart VehicleStartStopPart {\n\t\t\t\tpart VehicleStartStopPart {\n\t\t\t\t\tpart VehicleStartStopPart {\n\t\t\t\t\t\tpart VehicleStartStopPart {\n\t\t\t\t\t\t\tpart VehicleStartStopPart {\n\t\t\t\t\t\t\t\tpart VehicleStartStopPart {\n\t\t\t\t\t\t\t\t\tpart VehicleStartStopPart {\n\t\t\t\t\t\t\t\t\t\tpart VehicleStartStopPart {\n\t\t\t\t\t\t\t\t\t\t\tpart VehicleStartStopPart {\n\t\t\t\t\t\t\t\t\t\t\t\tpart VehicleStartStopPart {\n\t\t\t\t\t\t\t\t\t\t\t\t\tpart VehicleStartStopPart {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tpart VehicleStartStopPart {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpart VehicleStartStopPart {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpart VehicleStartStopPart {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpart VehicleStartStopPart {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpart VehicleStartStopPart {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpart VehicleStartStopPart {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpart VehicleStartStopPart {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpart VehicleStartStopPart {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpart VehicleStartStopPart {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpart VehicleStartStopPart {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpart VehicleStartStopPart {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpart VehicleStartStopPart {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpart VehicleStartStopPart {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpart VehicleStartStopPart {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpart VehicleStartStopPart {",
    "\n\n```\npackage VehicleStartStop\n\nimport sysml::*\n\ncontext VehicleStartStopContext {\n\ttype VehicleStartStopContext = Context {\n\t\ttype VehicleStartStopContext = Context {\n\t\t\ttype VehicleStartStopContext = Context {\n\t\t\t\ttype VehicleStartStopContext = Context {\n\t\t\t\t\ttype VehicleStartStopContext = Context {\n\t\t\t\t\t\ttype VehicleStartStopContext = Context {\n\t\t\t\t\t\t\ttype VehicleStartStopContext = Context {\n\t\t\t\t\t\t\t\ttype VehicleStartStopContext = Context {\n\t\t\t\t\t\t\t\t\ttype VehicleStartStopContext = Context {\n\t\t\t\t\t\t\t\t\t\ttype VehicleStartStopContext = Context {\n\t\t\t\t\t\t\t\t\t\t\ttype VehicleStartStopContext = Context {\n\t\t\t\t\t\t\t\t\t\t\t\ttype VehicleStartStopContext = Context {\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype VehicleStartStopContext = Context {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype VehicleStartStopContext = Context {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype VehicleStartStopContext = Context {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype VehicleStartStopContext = Context {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype VehicleStartStopContext = Context {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype VehicleStartStopContext = Context {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype VehicleStartStopContext = Context {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype VehicleStartStopContext = Context {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype VehicleStartStopContext = Context {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype VehicleStartStopContext = Context {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype VehicleStartStopContext = Context",
    "\nThe output model is a SysML v2 textual code.\n\nOutput Requirement:\nThe output model should be a SysML v2 textual code that can be directly imported into the SysML v2 tool.\n\n## 2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.",
    "\n\n![image](https://user-images.githubusercontent.com/10271041/120910704-00004400-c6b0-11eb-8402-000000000000.png)\n\n![image](https://user-images.githubusercontent.com/10271041/120910708-042c6180-c6b0-11eb-8000-000000000000.png)\n\n![image](https://user-images.githubusercontent.com/10271041/120910711-07275200-c6b0-11eb-8000-000000000000.png)\n\n![image](https://user-images.githubusercontent.com/10271041/120910714-0989ac0",
    "\n![image](https://user-images.githubusercontent.com/10085110/120079001-00000000-c078-11eb-9030-000000000000.png)\n\n## How to run\n\n### 1. Install dependencies\n\n```\npip install -r requirements.txt\n```\n\n### 2. Run the code\n\n```\npython main.py\n```\n\n## How to use\n\n### 1. Input\n\nThe input is a text file. The input file should be in the same directory as the main.py file.\n\n### 2. Output\n\nThe output is a text file. The output file will be in the same directory as the main.py file.\n\n## How to test\n\n### 1. Test the code\n\n```\npython test.py\n```\n\n### 2. Test the code with a specific input file\n\n```\npython test.py -i <input_file_name>\n```\n\n### 3. Test the code with a",
    "\n\n![image-20210511152030323](https://gitee.com/jerry-liu-123/pic-bed/raw/master/img/20210511152030.png)\n\n## 2. 实验环境\n\n- 硬件：\n  - 1台电脑（Windows 10）\n  - 1台树莓派（Raspberry Pi 3B+）\n- 软件：\n  - 1个Python 3.7环境\n  - 1个Java 1.8环境\n  - 1个Eclipse 2020-06环境\n\n## 3. 实验步骤\n\n### 3.1 实验环境搭建\n\n#### 3.1.1 树莓派环境搭建\n\n- 树莓派系统安装\n\n  树莓派系统安装参考[树莓派系统安装](https://www.jianshu.com/p/000000000000)\n\n- 树",
    "\n![image](https://user-images.githubusercontent.com/32483611/120910700-00000f00-c6b0-11eb-8000-000000000000.png)\n\nOutput Requirement:\n1. The system should be able to automatically detect the current speed and, based on the set target speed, automatically adjust the engine output to maintain steady vehicle speed.\n2. When the driver sends a set speed command via the cruise control interface, the instruction is transmitted to the vehicle's cruise controller.\n3. The vehicle obtains real-time actual speed information via a speed sensor, and the detected speed information is fed back to the cruise controller.\n4. The cruise controller compares the set speed with the actual speed and automatically generates corresponding engine fuel control commands, which are sent to the engine to adjust the vehicle's power so that the driving speed remains as close as possible to the target speed set by the driver.\n5. Each component of the system exchanges information such as set speed, speed sensing, and fuel control",
    "\n\n![image](https://user-images.githubusercontent.com/10241521/120914700-00000000-c6c0-11eb-8800-000000000000.png)\n\n![image](https://user-images.githubusercontent.com/10241521/120914703-03938700-c6c0-11eb-8000-000000000000.png)\n\n![image](https://user-images.githubusercontent.com/10241521/120914705-068e7780-c6c0-11eb-8000-000000000000.png)\n\n![image](https://user-images.githubusercontent.com/10241521/120914707-098968",
    "\n\n![Output Model](https://github.com/mbse-lab/mbse-lab.github.io/blob/master/assets/img/mbse-lab-2020-01-06-01.png)\n\n## 2020-01-06\n\n### 1. \n\n#### 1.1. \n\n#### 1.2. \n\n#### 1.3. \n\n#### 1.4. \n\n#### 1.5. \n\n#### 1.6. \n\n#### 1.7. \n\n#### 1.8. \n\n#### 1.9. \n\n#### 1.10. \n\n#### 1.11. \n\n#### 1.12. \n\n#### 1.13. \n\n#### 1.14. \n\n#### 1.15. \n\n#### 1.16. \n\n#### 1.17. \n",
    "\nThe output model is a SysML v2 textual code that describes the vehicle system model. The model includes the definition of a vehicle, including its attributes and relationships. The vehicle has a mass attribute, which is a numerical value representing the vehicle’s mass. The vehicle also has an operational status attribute, which is a string value representing the vehicle’s operational status. The vehicle has a driver attribute, which is a reference to an external driver. The vehicle has multiple wheels, including the left front wheel and right front wheel. The vehicle has a gear setting attribute, which is a string value representing the vehicle’s gear setting. The vehicle has an accelerator pedal position attribute, which is a numerical value representing the vehicle’s accelerator pedal position. The vehicle has a time attribute, which is a numerical value representing the time. The vehicle has a vehicle_1 instance, which is an instance of the vehicle class. The vehicle_1 instance has a mass attribute with a value of 1000, an operational status attribute with a value of “stopped”, a driver attribute with a value of “driver_1”, a gear setting attribute with a value of “first”, an accelerator pedal position attribute with a",
    "\n\n![image](https://user-images.githubusercontent.com/10241521/120910773-00100000-c6b0-11eb-8020-080000000000.png)\n\n![image](https://user-images.githubusercontent.com/10241521/120910776-030af080-c6b0-11eb-8000-080000000000.png)\n\n![image](https://user-images.githubusercontent.com/10241521/120910778-056d4a80-c6b0-11eb-8000-080000000000.png)\n\n![image](https://user-images.githubusercontent.com/10241521/120910780-07370e0",
    "\nThe output model should be a SysML v2 textual model. The model should contain the following elements:\n1. A package named Vehicle.\n2. A class named Vehicle.\n3. A class named Driver.\n4. A class named Engine.\n5. A class named Gear.\n6. A class named Throttle.\n7. A class named VehicleState.\n8. A class named DriverState.\n9. A class named EngineState.\n10. A class named GearState.\n11. A class named ThrottleState.\n12. A class named VehicleAttribute.\n13. A class named DriverAttribute.\n14. A class named EngineAttribute.\n15. A class named GearAttribute.\n16. A class named ThrottleAttribute.\n17. A class named VehicleAttributeState.\n18. A class named DriverAttributeState.\n19. A class named EngineAttributeState.\n20. A class named GearAttributeState.\n21. A class named ThrottleAttributeState.\n22. A class named VehicleAttributeTransition.\n23. A class named DriverAttributeTransition.\n24",
    "\n\n![image](https://user-images.githubusercontent.com/1017076/113484700-00000000-94e0-11eb-8700-000000000000.png)\n\n![image](https://user-images.githubusercontent.com/1017076/113484703-02625a00-94e0-11eb-8000-000000000000.png)\n\n![image](https://user-images.githubusercontent.com/1017076/113484704-03938700-94e0-11eb-8000-000000000000.png)\n\n![image](https://user-images.githubusercontent.com/1017076/113484705-04c4b400-9",
    "\n\n![image](https://user-images.githubusercontent.com/10271041/120914005-00000000-c6d0-11eb-9000-080000000000.png)\n\n![image](https://user-images.githubusercontent.com/10271041/120914010-042c1d80-c6d0-11eb-8001-080000000000.png)\n\n![image](https://user-images.githubusercontent.com/10271041/120914013-07270e00-c6d0-11eb-8000-080000000000.png)\n\n![image](https://user-images.githubusercontent.com/10271041/120914015-098968",
    "\n![image](https://user-images.githubusercontent.com/10274623/120910300-00007000-c6b0-11eb-8003-000000000000.png)\n\n## 2. SysML v2 Textual Grammar\n\n### 2.1. SysML v2 Textual Grammar\n\nSysML v2 textual grammar is a formal grammar that describes the syntax of SysML v2 textual code.\n\n### 2.2. SysML v2 Textual Grammar Specification\n\nSysML v2 textual grammar specification is a formal grammar that describes the syntax of SysML v2 textual code.\n\n## 3. SysML v2 Textual Grammar Specification\n\n### 3.1. SysML v2 Textual Grammar Specification\n\nSysML v2 textual grammar specification is a formal grammar that describes the syntax of SysML v2 textual code.\n\n### 3.2. SysML v2 Textual Grammar Specification\n\nSysML v2 textual grammar",
    "\n\n```\npackage SysML_v2_textual_grammar_example_1\n\n// 1. Think step‑by‑step in a hidden scratchpad (not shown to user)\n//    - Extract key functional/non‑functional information.\n//    - Map them to various grammar in SysML v2 textual grammar.\n\n// 2. After thinking, output only valid SysML v2 textual code—no explanations, no scratchpad.\n\n// Input Requirement:\n// This system is used for the aggregation and management of the mass of objects with mass attributes.\n// Each object has a basic mass and can also contain several subcomponents.\n// The system can automatically calculate the total mass, including all subcomponents.\n// For supported composite objects, the total mass equals the sum of the object's own basic mass and the full mass of all its subcomponents.\n// In addition, the system supports mass-based filtering and aggregation of components;\n// that is, a minimum mass threshold can be set so that only subcomponents whose mass is not less than this threshold are counted.\n// In this case, the total mass is the sum of the object's",
    "\nThe system should output a SysML v2 textual model that accurately represents the vehicle dynamics. The model should include the necessary components and relationships to accurately represent the vehicle’s power output, acceleration, speed, and position under various operating conditions. The model should be organized and structured in a way that is easy to understand and interpret. The model should be well-documented to provide clear explanations and descriptions of the components and relationships.\n\nOutput Requirement:\nThe system should output a SysML v2 textual model that accurately represents the vehicle dynamics. The model should include the necessary components and relationships to accurately represent the vehicle’s power output, acceleration, speed, and position under various operating conditions. The model should be organized and structured in a way that is easy to understand and interpret. The model should be well-documented to provide clear explanations and descriptions of the components and relationships.\n\n## 2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2",
    "\n\n```\nmodel Vehicle_Driving_Simulation\n\tpackage Vehicle_Driving_Simulation\n\t\tpackage Vehicle_Driving_Simulation\n\t\t\tpackage Vehicle_Driving_Simulation\n\t\t\t\tpackage Vehicle_Driving_Simulation\n\t\t\t\t\tpackage Vehicle_Driving_Simulation\n\t\t\t\t\t\tpackage Vehicle_Driving_Simulation\n\t\t\t\t\t\t\tpackage Vehicle_Driving_Simulation\n\t\t\t\t\t\t\t\tpackage Vehicle_Driving_Simulation\n\t\t\t\t\t\t\t\t\tpackage Vehicle_Driving_Simulation\n\t\t\t\t\t\t\t\t\t\tpackage Vehicle_Driving_Simulation\n\t\t\t\t\t\t\t\t\t\t\tpackage Vehicle_Driving_Simulation\n\t\t\t\t\t\t\t\t\t\t\t\tpackage Vehicle_Driving_Simulation\n\t\t\t\t\t\t\t\t\t\t\t\t\tpackage Vehicle_Driving_Simulation\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tpackage Vehicle_Driving_Simulation\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpackage Vehicle_Driving_Simulation\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpackage Vehicle_Driving_Simulation\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpackage Vehicle_Driving_Simulation\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpackage Vehicle_Driving_Simulation\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpackage Vehicle_Driving_Simulation\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpackage Vehicle_Driving_Simulation\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpackage Vehicle_Driving_Simulation\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpackage Vehicle_Driving_Simulation\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpackage Vehicle_Driving_Simulation\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpackage Vehicle_Driving_Simulation\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpackage Vehicle_Driving_Simulation\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpackage Vehicle_Driving_Simulation\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpackage",
    "\nThe output model is a SysML v2 textual code.\n\nOutput Requirement:\nThe output model should be a SysML v2 textual code that can be used to model and compute the vehicle's driving dynamics. The code should be concise and easy to understand, and it should be able to handle various input parameters and initial conditions. The code should also be able to calculate and update the vehicle's speed and position at each time step, taking into account the effects of air resistance and frictional resistance. The code should be able to predict the vehicle's velocity, acceleration, displacement, and other dynamic states over time. This output model can be used by end users to analyze vehicle performance under different operating conditions, thereby enabling the automation and efficient management of vehicle dynamics simulation.\n\n## 2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.",
    "\nThe output model is a SysML v2 textual code.\n\nOutput Requirement:\nThe output model is a SysML v2 textual code.\n\n## 2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2",
    "\n\n```\nSystem: VehicleWeightCheck\n\nChassis: Chassis\n\tMass: 1000\n\nEngine: Engine\n\tMass: 1000\n\nGearbox: Gearbox\n\tMass: 1000\n\nVehicle: Vehicle\n\tChassis: Chassis\n\tEngine: Engine\n\tGearbox: Gearbox\n\nWeightCheck: WeightCheck\n\tVehicle: Vehicle\n\tMaxWeight: 2500\n\nWeightCheck: WeightCheck\n\tVehicle: Vehicle\n\tMaxWeight: 2500\n\tWeightCheck: WeightCheck\n\tVehicle: Vehicle\n\tMaxWeight: 2500\n\tWeightCheck: WeightCheck\n\tVehicle: Vehicle\n\tMaxWeight: 2500\n\tWeightCheck: WeightCheck\n\tVehicle: Vehicle\n\tMaxWeight: 2500\n\tWeightCheck: WeightCheck\n\tVehicle: Vehicle\n\tMaxWeight: 2500\n\tWeightCheck: WeightCheck\n\tVehicle: Vehicle\n\tMaxWeight: 2500\n\tWeightCheck: WeightCheck\n\tVehicle: Vehicle\n\tMaxWeight: 250",
    "\n![image](https://user-images.githubusercontent.com/1019791/120920700-10000100-c6f0-11eb-8400-000000000000.png)\n\n## How to run\n\n```\n$ python3 main.py\n```\n\n## How to test\n\n```\n$ python3 -m unittest\n```\n\n## How to use\n\n```\n$ python3 main.py\n\nPlease input the sentence:\nThe system is designed to budget and constrain the mass of a vehicle, ensuring that the total mass of the complete vehicle—including major components such as the chassis, engine, and transmission—does not exceed 2,500 kilograms. The system requires the actual mass of each component to be entered and uniformly measured using the international unit of kilograms. It will automatically calculate the sum of the component masses and compare the result with the specified mass limit; if the total mass exceeds the limit, the design requirements are not met. Furthermore, as critical components of the vehicle, the m",
    "\n![image](https://user-images.githubusercontent.com/10246102/120914000-00000000-c6c0-11eb-9700-000000000000.png)\n\n## How to run\n\n### 1. Install dependencies\n\n```\npip install -r requirements.txt\n```\n\n### 2. Run the code\n\n```\npython main.py\n```\n\n## How to use\n\n### 1. Input\n\nThe input is a text file.\n\n### 2. Output\n\nThe output is a text file.\n\n## Reference\n\n[1] , , , et al. A Systematic Approach to Automated Generation of SysML v2 Models from Natural Language Descriptions[J]. IEEE Transactions on Software Engineering, 2021, 47(1): 1-1.\n\n[2] , , , et al. A Systematic Approach to Automated Generation of SysML v2 Models from Natural",
    "\n```\nSystem\n  Name: \"Weight Management System\"\n  Weight: 2500\n  Weight:\n    Name: \"Chassis\"\n    Weight: 1000\n    Weight:\n      Name: \"Engine\"\n      Weight: 1000\n    Weight:\n      Name: \"Transmission\"\n      Weight: 500\n```\n\n## 2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.",
    "\n![image](https://user-images.githubusercontent.com/1017076/120914000-00000000-c6c0-11eb-8030-000000000000.png)\n\n## How to run\n\n```\n$ python3 main.py\n```\n\n## How to test\n\n```\n$ python3 -m unittest\n```\n\n## How to use\n\n```\n$ python3 main.py\n\nPlease input the sentence:\nThe system requires that the total mass of all vehicle components must not exceed 2,500 kilograms.\n\nPlease input the sentence:\nIn addition, the dynamic behavior of the vehicle is considered: the system supports modeling the vehicle's dynamic constraints under known initial velocity, final velocity, mass, applied force, and over a given period of time, ensuring that the mass must be greater than zero, and that the physical relationship among force, time, and change in velocity is satisfied.\n\nPlease input the sentence:\nThrough these constraints, the system can be used during vehicle design to verify the r",
    "\n![image](https://user-images.githubusercontent.com/10063471/120079400-07000000-c07e-11eb-8000-000000000000.png)\n\n## 2. Modeling\n\n### 2.1. Modeling Process\n\n#### 2.1.1. Modeling Process\n\n![image](https://user-images.githubusercontent.com/10063471/120079404-09625a00-c07e-11eb-8000-000000000000.png)\n\n#### 2.1.2. Modeling Process\n\n![image](https://user-images.githubusercontent.com/10063471/120079406-0b2c1d80-c07e-11eb-8000-00000000000",
    "\n\n```\nSystem: Vehicle\n\tPart: Engine\n\t\tProperty: MaxTorque\n\t\tProperty: MaxSpeed\n\t\tProperty: MaxPower\n\t\tProperty: MaxFuelMass\n\t\tProperty: MaxMass\n\t\tProperty: MinMass\n\t\tProperty: MinFuelMass\n\t\tProperty: MinPower\n\t\tProperty: MinSpeed\n\t\tProperty: MinTorque\n\t\tProperty: FuelMass\n\t\tProperty: Mass\n\t\tProperty: Power\n\t\tProperty: Speed\n\t\tProperty: Torque\n\tPart: Transmission\n\t\tProperty: MaxTorque\n\t\tProperty: MaxSpeed\n\t\tProperty: MaxPower\n\t\tProperty: MaxFuelMass\n\t\tProperty: MaxMass\n\t\tProperty: MinMass\n\t\tProperty: MinFuelMass\n\t\tProperty: MinPower\n\t\tProperty: MinSpeed\n\t\tProperty: MinTorque\n\t\tProperty: FuelMass\n\t\tProperty: Mass\n\t\tProperty: Power\n\t\tProperty: Speed\n\t\tProperty: Torque\n\tPart: Clutch\n\t\tProperty: MaxTorque\n\t\tProperty: MaxSpeed\n\t\tProperty: MaxPower\n\t\tProperty: MaxFuelMass\n\t\tProperty: MaxMass\n\t\tProperty: MinMass\n\t\tProperty: MinFuelMass\n\t\tProperty",
    "\nThe output model is shown in Figure 1.\n\nFigure 1. Output model\n\nThe output model is a SysML v2 textual model.\n\nThe output model is a SysML v2 textual model.\n\nThe output model is a SysML v2 textual model.\n\nThe output model is a SysML v2 textual model.\n\nThe output model is a SysML v2 textual model.\n\nThe output model is a SysML v2 textual model.\n\nThe output model is a SysML v2 textual model.\n\nThe output model is a SysML v2 textual model.\n\nThe output model is a SysML v2 textual model.\n\nThe output model is a SysML v2 textual model.\n\nThe output model is a SysML v2 textual model.\n\nThe output model is a SysML v2 textual model.\n\nThe output model is a SysML v2 textual model.\n\nThe output model is a SysML v2 textual model.\n\nThe output model is a SysML v2 textual model.\n\nThe output model is a SysML v2 text",
    "\nThe output model is a SysML v2 textual model that contains the following elements:\n1. A package named \"Vehicle\" that contains the following elements:\n   - A class named \"Vehicle\" that represents the vehicle.\n   - A class named \"Engine\" that represents the engine.\n   - A class named \"Clutch\" that represents the clutch.\n   - A class named \"Transmission\" that represents the transmission.\n   - A class named \"Wheel\" that represents the wheel.\n   - A class named \"Wheels\" that represents the wheels.\n   - A class named \"Chassis\" that represents the chassis.\n   - A class named \"Body\" that represents the body.\n   - A class named \"Body\" that represents the body.\n   - A class named \"Body\" that represents the body.\n   - A class named \"Body\" that represents the body.\n   - A class named \"Body\" that represents the body.\n   - A class named \"Body\" that represents the body.\n   - A class named \"Body\" that represents the body.\n   - A class named \"Body\" that represents the body.\n   - A class named \"Body\" that represents the body.\n   - A class named \"Body",
    "\nThe system outputs a SysML v2 textual model that contains the following elements:\n1. A package named “Vehicle” that contains the following elements:\n   - A class named “Vehicle” that contains the following elements:\n     - A property named “Vehicle Mass” that has the following attributes:\n       - A name attribute with the value “Vehicle Mass”;\n       - A type attribute with the value “Integer”;\n       - A lower bound attribute with the value “0”;\n       - An upper bound attribute with the value “10000”;\n       - A multiplicity attribute with the value “1”;\n       - A visibility attribute with the value “public”;\n       - A constraint named “Vehicle Mass Constraint” that has the following attributes:\n         - A name attribute with the value “Vehicle Mass Constraint”;\n         - A body attribute with the value “Vehicle Mass <= 2000 when Fuel Tank Full”;\n         - A body attribute with the value “Vehicle Mass <= 1500 when Fuel Tank Empty”;\n     - A property named “Fuel Tank” that has the following attributes:\n       - A name attribute with the value “Fuel Tank”;\n       - A type",
    "\n\n![image](https://user-images.githubusercontent.com/1024158/120913000-00000000-c6c0-11eb-8001-000000000000.png)\n\n![image](https://user-images.githubusercontent.com/1024158/120913003-02625a00-c6c0-11eb-803c-000000000000.png)\n\n![image](https://user-images.githubusercontent.com/1024158/120913005-042c1d80-c6c0-11eb-8000-000000000000.png)\n\n![image](https://user-images.githubusercontent.com/1024158/120913007-05f5e100-c",
    "\nThe output model is a SysML v2 textual code.\n\n## 2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.",
    "\nThe system will output a SysML v2 textual model that contains the following information:\n1. The engine type (four-cylinder or six-cylinder)\n2. The engine model (e.g., 2000, 2001, 2002, etc.)\n3. The engine power (e.g., 1000, 1200, 1400, etc.)\n4. The engine mass (e.g., 1000, 1200, 1400, etc.)\n5. The engine efficiency (e.g., 1000, 1200, 1400, etc.)\n6. The engine cost (e.g., 1000, 1200, 1400, etc.)\n7. The engine evaluation score (e.g., 1000, 1200, 1400, etc.)\n\nThe system will also output a SysML v2 textual model that contains the following information:\n1. The engine type (four-cylinder or",
    "\n```\nSystem:\n  Name: Vehicle Quality Check System\n  Description:\n    The system is used to check the curb weight of each vehicle.\n  Block:\n    Name: Data Collection\n    Description:\n      The system collects the actual weight data of the vehicle.\n    Block:\n      Name: Data Processing\n      Description:\n        The system processes the collected data.\n      Block:\n        Name: Data Evaluation\n        Description:\n          The system uses the processed data as the basis to determine whether the vehicle's weight meets the specified standards.\n```\n\n## 2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2",
    "\n![image](https://user-images.githubusercontent.com/10085110/119247005-00000000-bb3f-11eb-8000-000000000000.png)\n\n## How to run\n\n### 1. Install dependencies\n\n```\npip install -r requirements.txt\n```\n\n### 2. Run the code\n\n```\npython main.py\n```\n\n## How to use\n\n### 1. Input\n\nThe input is a text file. The text file should be in the format of:\n\n```\n<key> <value>\n```\n\nFor example:\n\n```\nvehicle 1\nvehicle 2\nvehicle 3\n```\n\n### 2. Output\n\nThe output is a text file. The text file should be in the format of:\n\n```\n<key> <value>\n```\n\nFor example:\n\n```\nvehicle 1\nvehicle 2\nvehicle 3\n```\n\n## How to test\n\n```\npython test.py",
    "\n![image](https://user-images.githubusercontent.com/42380009/120914300-00001380-c6c0-11eb-8040-000000000000.png)\n\n## How to run\n\n### 1. Install dependencies\n\n```\npip install -r requirements.txt\n```\n\n### 2. Run the server\n\n```\npython server.py\n```\n\n### 3. Open the web page\n\nOpen `http://localhost:5000` in your browser.\n\n## How to use\n\n### 1. Input the text\n\nType the text in the text area.\n\n### 2. Click the button\n\nClick the button to generate the SysML model.\n\n### 3. Download the SysML model\n\nClick the download button to download the SysML model.\n\n## Reference\n\n- [SysML v2.0 Textual Specification](https://www.omg.org/spec/SysML/2.0/About-SysML-v2",
    "\n![image](https://user-images.githubusercontent.com/10247131/120910700-00000380-c6b0-11eb-8000-000000000000.png)\n\n## How to run\n\n### 1. Install dependencies\n\n```\npip install -r requirements.txt\n```\n\n### 2. Run the code\n\n```\npython main.py\n```\n\n## How to use\n\n### 1. Input\n\nThe input is a text file.\n\n### 2. Output\n\nThe output is a text file.\n\n## Reference\n\n[1] , , , et al. A Systematic Approach to Automated Generation of SysML v2 Models from Natural Language Descriptions[J]. IEEE Transactions on Software Engineering, 2020, 46(1): 1-1.\n\n[2] , , , et al. A Systematic Approach to Automated Generation of SysML v2 Models from Natural",
    "\n![image](https://user-images.githubusercontent.com/10246301/120077005-00002000-c06f-11eb-8720-000000000000.png)\n\n## How to run\n\n### 1. Install dependencies\n\n```\npip install -r requirements.txt\n```\n\n### 2. Run the code\n\n```\npython main.py\n```\n\n## How to use\n\n### 1. Input\n\nThe input is a text file. The input file should be in the format of:\n\n```\n<key> <value>\n```\n\nFor example:\n\n```\nEngine 4\nTransmission Manual\n```\n\n### 2. Output\n\nThe output is a text file. The output file should be in the format of:\n\n```\n<SysML v2 textual grammar>\n```\n\nFor example:\n\n```\n<SysML v2 textual grammar>\n```\n\n## How to test\n\n### 1. Test the code\n",
    "\n\n```\nEngine\n  Part\n    Cylinder\n      Cylinder\n        Cylinder\n          Cylinder\n            Cylinder\n              Cylinder\n                Cylinder\n                  Cylinder\n                    Cylinder\n                      Cylinder\n                        Cylinder\n                          Cylinder\n                            Cylinder\n                              Cylinder\n                                Cylinder\n                                  Cylinder\n                                    Cylinder\n                                      Cylinder\n                                        Cylinder\n                                          Cylinder\n                                            Cylinder\n                                              Cylinder\n                                                Cylinder\n                                                  Cylinder\n                                                    Cylinder\n                                                      Cylinder\n                                                        Cylinder\n                                                          Cylinder\n                                                            Cylinder\n                                                              Cylinder\n                                                                Cylinder\n                                                                  Cylinder\n                                                                    Cylinder\n                                                                      Cylinder\n                                                                        Cylinder\n                                                                          Cylinder\n                                                                            Cylinder\n                                                                              Cylinder\n                                                                                Cylinder\n                                                                                  Cylinder\n                                                                                    Cylinder\n                                                                                      Cylinder\n                                                                                        Cylinder\n                                                                                          Cylinder\n                                                                                            Cylinder\n                                                                                              Cylinder\n                                                                                                Cylinder\n                                                                                                  Cylinder\n                                                                                                    Cylinder\n                                                                                                      Cylinder\n                                                                                                        Cylinder\n                                                                                                          Cylinder\n                                                                                                            Cylinder\n                                                                                                              Cylinder\n                                                                                                                Cylinder\n                                                                                                                  Cylinder\n                                                                                                                    Cylinder\n                                                                                                                      Cylinder\n                                                                                                                        Cylinder\n                                                                                                                          Cylinder\n                                                                                                                            Cylinder\n                                                                                                                              Cylinder\n                                                                                                                                Cylinder\n                                                                                                                                  Cylinder\n                                                                                                                                    Cylinder\n                                                                                                                                      Cylinder\n                                                                                                                                        Cylinder\n                                                                                                                                         ",
    "\nThe output model is a SysML v2 textual model.\n\n## 2.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.",
    "\nThe output model should be a SysML v2 textual model.\n\nOutput Requirement:\nThe output model should be a SysML v2 textual model.\n\n## 2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2",
    "\n![image](https://user-images.githubusercontent.com/32903611/120910700-00000000-c6b0-11eb-8000-000000000000.png)\n\n## 2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2",
    "\n![image](https://user-images.githubusercontent.com/10241521/119247000-00000e00-bb9f-11eb-8020-000000000000.png)\n\n## 2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.",
    "\nThe output model should be a SysML v2 textual model that clearly indicates the safety and protection functions of the vehicle components. The model should include the following information:\n1. The vehicle structure, including the body shell, bumpers, and keyless entry device.\n2. The safety and protection functions of the vehicle components, including seat belts, front seats, driver airbag, and alarm system.\n3. The distribution of the vehicle components within the vehicle structure.\n\nThe output model should be a valid SysML v2 textual model that can be directly imported into a SysML v2 modeling tool.\n\nThe output model should be a valid SysML v2 textual model that can be directly imported into a SysML v2 modeling tool.\n\nThe output model should be a valid SysML v2 textual model that can be directly imported into a SysML v2 modeling tool.\n\nThe output model should be a valid SysML v2 textual model that can be directly imported into a SysML v2 modeling tool.\n\nThe output model should be a valid SysML v2 textual model that can be directly imported into a SysML v2 modeling tool.\n\nThe output model should",
    "\nThe system shall output the vehicle’s velocity and position after the specified time step based on the given physical model. The system must ensure accurate data transfer and reliable output of simulation results, enabling users to conveniently obtain key dynamic parameters to support vehicle performance analysis and design optimization.\n\nOutput Requirement:\nThe system shall output the vehicle’s velocity and position after the specified time step based on the given physical model. The system must ensure accurate data transfer and reliable output of simulation results, enabling users to conveniently obtain key dynamic parameters to support vehicle performance analysis and design optimization.\n\n## 2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2",
    "\n\n```\npackage SafetyFeatures\n\tpackage SafetyRelevantComponents\n\t\tpackage SafetyRelevantComponents\n\t\t\tpackage SafetyRelevantComponents\n\t\t\t\tpackage SafetyRelevantComponents\n\t\t\t\t\tpackage SafetyRelevantComponents\n\t\t\t\t\t\tpackage SafetyRelevantComponents\n\t\t\t\t\t\t\tpackage SafetyRelevantComponents\n\t\t\t\t\t\t\t\tpackage SafetyRelevantComponents\n\t\t\t\t\t\t\t\t\tpackage SafetyRelevantComponents\n\t\t\t\t\t\t\t\t\t\tpackage SafetyRelevantComponents\n\t\t\t\t\t\t\t\t\t\t\tpackage SafetyRelevantComponents\n\t\t\t\t\t\t\t\t\t\t\t\tpackage SafetyRelevantComponents\n\t\t\t\t\t\t\t\t\t\t\t\t\tpackage SafetyRelevantComponents\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tpackage SafetyRelevantComponents\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpackage SafetyRelevantComponents\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpackage SafetyRelevantComponents\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpackage SafetyRelevantComponents\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpackage SafetyRelevantComponents\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpackage SafetyRelevantComponents\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpackage SafetyRelevantComponents\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpackage SafetyRelevantComponents\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpackage SafetyRelevantComponents\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpackage SafetyRelevantComponents\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpackage SafetyRelevantComponents\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpackage SafetyRelevantComponents\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpackage SafetyRelevantComponents\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpackage SafetyRelevantComponents\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpackage SafetyRelevantComponents\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpackage SafetyRelevantComponents\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpackage Safety",
    "\nThe output model is a SysML v2 textual model.\n\nOutput Requirement:\nThe output model should be a SysML v2 textual model that contains the following elements:\n1. A package named “Vehicle Safety Compliance System”\n2. A subsystem named “Vehicle Safety Compliance System”\n3. A subsystem named “Vehicle Safety Compliance System”\n4. A subsystem named “Vehicle Safety Compliance System”\n5. A subsystem named “Vehicle Safety Compliance System”\n6. A subsystem named “Vehicle Safety Compliance System”\n7. A subsystem named “Vehicle Safety Compliance System”\n8. A subsystem named “Vehicle Safety Compliance System”\n9. A subsystem named “Vehicle Safety Compliance System”\n10. A subsystem named “Vehicle Safety Compliance System”\n11. A subsystem named “Vehicle Safety Compliance System”\n12. A subsystem named “Vehicle Safety Compliance System”\n13. A subsystem named “Vehicle Safety Compliance System”\n14. A subsystem named “Vehicle Safety Compliance System”\n15. A subsystem named “Vehicle Safety Compliance System”\n",
    "\nThe output model should be a SysML v2 textual code.\n\nOutput Requirement:\nThe output model should be a SysML v2 textual code.\n\n## 2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2",
    "\nThe output model is a SysML v2 textual model.\n\nOutput Requirement:\nThe output model should be a SysML v2 textual model.\n\n## 2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.",
    "\n\n```\nBattery Aging\n\nBattery Aging is a failure scenario that may occur in the equipment.\n\nBattery Aging is a failure scenario that may occur in the equipment.\n\nBattery Aging is a failure scenario that may occur in the equipment.\n\nBattery Aging is a failure scenario that may occur in the equipment.\n\nBattery Aging is a failure scenario that may occur in the equipment.\n\nBattery Aging is a failure scenario that may occur in the equipment.\n\nBattery Aging is a failure scenario that may occur in the equipment.\n\nBattery Aging is a failure scenario that may occur in the equipment.\n\nBattery Aging is a failure scenario that may occur in the equipment.\n\nBattery Aging is a failure scenario that may occur in the equipment.\n\nBattery Aging is a failure scenario that may occur in the equipment.\n\nBattery Aging is a failure scenario that may occur in the equipment.\n\nBattery Aging is a failure scenario that may occur in the equipment.\n\nBattery Aging is a failure scenario that may occur in the equipment.\n\nBattery Aging is a failure scenario that may occur in the equipment.\n\nBattery Aging is a failure scenario",
    "\nThe output model should be a SysML v2 textual model that is compliant with the SysML v2 textual grammar.\n\nOutput Requirement:\nThe output model should be a SysML v2 textual model that is compliant with the SysML v2 textual grammar.\n\n## 2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2",
    "\nThe output model should be a SysML v2 textual model, which should be able to represent the system structure and safety features in a clear and concise manner. The model should be able to clearly display the hierarchical structure of all components, as well as the mandatory/optional status of safety-related components.\n\nThe model should also be able to clearly display a complete list of all non-safety components.\n\nThe model should be able to clearly display the safety attributes of each component, including the mandatory/optional status of each safety attribute.\n\nThe model should be able to clearly display the safety attributes of each component, including the mandatory/optional status of each safety attribute.\n\nThe model should be able to clearly display the safety attributes of each component, including the mandatory/optional status of each safety attribute.\n\nThe model should be able to clearly display the safety attributes of each component, including the mandatory/optional status of each safety attribute.\n\nThe model should be able to clearly display the safety attributes of each component, including the mandatory/optional status of each safety attribute.\n\nThe model should be able to clearly display the safety attributes of each component, including the mandatory/optional status of each safety attribute.\n\nThe",
    "\n\n```\npackage Automotive_Domain_Model\n\n// 1. 定义汽车\n// 2. 定义汽车的属性\n// 3. 定义汽车的行为\n// 4. 定义汽车的状态\n// 5. 定义汽车的接口\n// 6. 定义汽车的子系统\n// 7. 定义汽车的子系统的属性\n// 8. 定义汽车的子系统的行为\n// 9. 定义汽车的子系统的状态\n// 10. 定义汽车的子系统的接口\n// 11. 定义汽车的子系统的子系统\n// 12. 定义汽车的子系统的子系统的属性\n// 13. 定义汽车的子系统的子系统的行为\n// 14. 定义汽车的子系统的子系统的状态\n// 15. 定义汽车的子系统的子系统的接口\n// 16. 定义汽车的子系统的子系统的子",
    "\n\n![image](https://user-images.githubusercontent.com/10274622/120910300-00005000-c6b0-11eb-8000-000000000000.png)\n\n![image](https://user-images.githubusercontent.com/10274622/120910304-0393d700-c6b0-11eb-8030-000000000000.png)\n\n![image](https://user-images.githubusercontent.com/10274622/120910306-068ec780-c6b0-11eb-8000-000000000000.png)\n\n![image](https://user-images.githubusercontent.com/10274622/120910308-0989b80",
    "\nThe system should output a SysML v2 textual model that meets the requirements of the input requirement.\n\nOutput Requirement:\nThe system should output a SysML v2 textual model that meets the requirements of the input requirement.\n\n## 2.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1",
    "\n![image](https://user-images.githubusercontent.com/10241521/120910700-00000000-c6b0-11eb-9010-000000000000.png)\n\n## 2. 2021-06-04\n\n### 1. 2021-06-04\n\n#### 1.1. 2021-06-04\n\n#### 1.2. 2021-06-04\n\n#### 1.3. 2021-06-04\n\n#### 1.4. 2021-06-04\n\n#### 1.5. 2021-06-04\n\n#### 1.6. 2021-06-04\n\n#### 1.7. 2021-06-04\n\n#### 1.8. 2021-06-0",
    "\n![Output Model](https://github.com/mbse-lab/mbse-lab.github.io/blob/master/assets/images/mbse-lab/mbse-lab-0001.png)\n\n## 2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.2.",
    "\nThe output model should be a SysML v2 textual model.\n\nThe output model should be a SysML v2 textual model.\n\nThe output model should be a SysML v2 textual model.\n\nThe output model should be a SysML v2 textual model.\n\nThe output model should be a SysML v2 textual model.\n\nThe output model should be a SysML v2 textual model.\n\nThe output model should be a SysML v2 textual model.\n\nThe output model should be a SysML v2 textual model.\n\nThe output model should be a SysML v2 textual model.\n\nThe output model should be a SysML v2 textual model.\n\nThe output model should be a SysML v2 textual model.\n\nThe output model should be a SysML v2 textual model.\n\nThe output model should be a SysML v2 textual model.\n\nThe output model should be a SysML v2 textual model.\n\nThe output model should be a SysML v2 textual model.\n\nThe output model should be a SysML v2 textual model.\n"
]