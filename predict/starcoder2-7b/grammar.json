[
    "\n\nVehicle\n\nVehicle.mass: Real\n\nVehicle.status: VehicleStatus\n\nVehicle.engine: Engine\n\nVehicle.driver: Person\n\nVehicleStatus\n\nVehicleStatus.gear: Gear\n\nVehicleStatus.accelerator: Real\n\nVehicleStatus.brake: Real\n\nVehicleStatus.steering: Real\n\nVehicleStatus.speed: Real\n\nVehicleStatus.rpm: Real\n\nVehicleStatus.fuel: Real\n\nVehicleStatus.oil: Real\n\nVehicleStatus.temperature: Real\n\nVehicleStatus.fuelConsumption: Real\n\nVehicleStatus.fuelEfficiency: Real\n\nVehicleStatus.fuelCapacity: Real\n\nVehicleStatus.fuelLevel: Real\n\nVehicleStatus.fuelType: FuelType\n\nVehicleStatus.fuelConsumptionRate: Real\n\nVehicleStatus.fuelEfficiencyRate: Real\n\nVehicleStatus.fuelCapacityRate: Real\n\nVehicleStatus.fuelLevelRate: Real\n\nVehicleStatus.fuelTypeRate: FuelType\n\nVehicleStatus.fuelConsumptionRateRate: Real\n\nVehicleStatus.fuelEfficiencyRateRate: Real\n\nVehicleStatus.fuelCapacityRateRate: Real\n\nVehicleStatus.fuelLevelRate",
    "\n\n––––––––––––––––––––––––––––––––––\n\n## 2. \nTask:\nGiven the following natural‑language requirements, create an OMG SysML v2 textual model.  \nYour output must conform to the BNF grammar below (subset of SysML v2).  \nReturn only valid SysML v2 code, no explanations or commentary.\n\n––––– SysML v2 BNF (subset) –––––\n\n––––––––––––––––––––––––––––––––––\n\nInput Requirement:\nThis system is designed to model various types of vehicles. Vehicles are mainly divided into two categories: manually operated vehicles and powered vehicles. Manually operated vehicles are driven by personnel, with each vehicle corresponding to a single driver; powered vehicles are equipped with engines as their source of power. In addition, certain vehicles are both manually operated and equipped with engines, and are classified as manually operated powered vehicles. The system also includes two entities, Personnel and Engine, which are used to describe drivers and power devices of vehicles, respectively. Through this model, the relationships among personnel, vehicles, and their power devices in various vehicle types can be fully represented.\n\nOutput System Model",
    "\nVehicle\n\nVehicleComponent\n\nEngine\n\nTransmission\n\nWheel\n\nVehicle\n\nVehicleComponent\n\nEngine\n\nTransmission\n\nWheel\n\nVehicle\n\nVehicleComponent\n\nEngine\n\nTransmission\n\nWheel\n\nVehicle\n\nVehicleComponent\n\nEngine\n\nTransmission\n\nWheel\n\nVehicle\n\nVehicleComponent\n\nEngine\n\nTransmission\n\nWheel\n\nVehicle\n\nVehicleComponent\n\nEngine\n\nTransmission\n\nWheel\n\nVehicle\n\nVehicleComponent\n\nEngine\n\nTransmission\n\nWheel\n\nVehicle\n\nVehicleComponent\n\nEngine\n\nTransmission\n\nWheel\n\nVehicle\n\nVehicleComponent\n\nEngine\n\nTransmission\n\nWheel\n\nVehicle\n\nVehicleComponent\n\nEngine\n\nTransmission\n\nWheel\n\nVehicle\n\nVehicleComponent\n\nEngine\n\nTransmission\n\nWheel\n\nVehicle\n\nVehicleComponent\n\nEngine\n\nTransmission\n\nWheel\n\nVehicle\n\nVehicleComponent\n\nEngine\n\nTransmission\n\nWheel\n\nVehicle\n\nVehicleComponent\n\nEngine\n\nTransmission\n\nWheel\n\nVehicle\n\nVehicleComponent\n\nEngine\n\nTransmission\n\nWheel\n\n",
    "\n\n```\nVehicle\n\tSmallVehicle\n\t\tSmallEngine\n\t\t\tCylinder\n\tLargeVehicle\n\t\tLargeEngine\n\t\t\tCylinder\n```\n\n––––––––––––––––––––––––––––––––––\n\n## 2.\n\nYou are a software engineer.\n\nTask:\nGiven the following natural‑language requirements, create an OMG SysML v2 textual model.  \nYour output must conform to the BNF grammar below (subset of SysML v2).  \nReturn only valid SysML v2 code, no explanations or commentary.\n\n––––– SysML v2 BNF (subset) –––––\n\n––––––––––––––––––––––––––––––––––\n\nInput Requirement:\nThe system must be able to define and distinguish between different types of vehicles, including small vehicles and large vehicles, with each category equipped with a specific type of engine. All vehicles are equipped with an engine component: small vehicles must be equipped with a small engine, which contains 4 cylinders, while large vehicles must be equipped with a large engine, which contains 6 cylinders. Each engine contains a functional subsystem composed of a specific number of cylinders to meet the actual requirements of the vehicle",
    "\n\n```\nTrafficSignalSystem {\n  TrafficSignalComponent {\n    color: Color {\n      green,\n      yellow,\n      red\n    }\n  }\n  TrafficSignalComponent {\n    color: Color {\n      green\n    }\n  }\n}\n```\n\n––––––––––––––––––––––––––––––––––\n\nInput Requirement:\nThe traffic signal system includes a traffic signal component that represents the current color state of the traffic light, with the colors being green, yellow, and red. Additionally, the system defines a specific traffic signal component that is in the green state, indicating that it is always in the \"go\" state. The above model supports the explicit indication of the traffic light's color, helping to facilitate orderly traffic flow and management.\n\nOutput System Model:\n\n```\nTrafficSignalSystem {\n  TrafficSignalComponent {\n    color: Color {\n      green,\n      yellow,\n      red\n    }\n  }\n  TrafficSignalComponent {\n    color: Color {\n      green\n    }\n  }\n}\n```\n\n––––––––––––––––––––––––––––––––––\n\nInput Requirement:\nThe traffic signal system includes a traffic signal component that represents the current color state of the traffic light, with the colors being green, yellow, and red. Additionally, the system defines a specific traffic signal",
    "\nThe system model should include the following elements:\n\n– A “Traffic Light” class that represents the traffic light.\n\n– A “Traffic Light” instance that represents the traffic light.\n\n– A “Traffic Light” property that represents the traffic light color.\n\n– A “Traffic Light” property that represents the traffic light code.\n\n– A “Traffic Light” property that represents the traffic light score.\n\n– A “Traffic Light” property that represents the traffic light grade.\n\n– A “Traffic Light” property that represents the traffic light type.\n\n– A “Traffic Light” property that represents the traffic light level.\n\n– A “Traffic Light” property that represents the traffic light classification.\n\n– A “Traffic Light” property that represents the traffic light classification score.\n\n– A “Traffic Light” property that represents the traffic light classification grade.\n\n– A “Traffic Light” property that represents the traffic light classification type.\n\n– A “Traffic Light” property that represents the traffic light classification level.\n\n– A “Traffic Light” property that represents the traffic light classification classification.\n\n– A “Traffic Light” property that represents the traffic light classification classification score.\n",
    "\n\n```\nSystem: VehicleSystem\n\tPart: Engine\n\t\tPart: Cylinders\n\t\t\tPart: Cylinder\n```\n\n––––––––––––––––––––––––––––––––––\n\n## 2. \nYou are a software engineer.\n\nTask:\nGiven the following natural‑language requirements, create an OMG SysML v2 textual model.  \nYour output must conform to the BNF grammar below (subset of SysML v2).  \nReturn only valid SysML v2 code, no explanations or commentary.\n\n––––– SysML v2 BNF (subset) –––––\n\n––––––––––––––––––––––––––––––––––\n\nInput Requirement:\nThis system is designed to provide a platform for the development of a new type of software. The software is designed to be used in a variety of applications, including but not limited to:\n\n- Aircraft control systems\n- Automotive control systems\n- Aerospace control systems\n- Spacecraft control systems\n- Robotics control systems\n- Industrial control systems\n- Medical control systems\n- Military control systems\n- Defense control systems\n- Security control systems\n- Transportation control systems\n- Power control systems\n",
    "\n\nVehicle\n\n–\n\nVehicle\n\n–\n\nVehicle\n\n–\n\nVehicle\n\n–\n\nVehicle\n\n–\n\nVehicle\n\n–\n\nVehicle\n\n–\n\nVehicle\n\n–\n\nVehicle\n\n–\n\nVehicle\n\n–\n\nVehicle\n\n–\n\nVehicle\n\n–\n\nVehicle\n\n–\n\nVehicle\n\n–\n\nVehicle\n\n–\n\nVehicle\n\n–\n\nVehicle\n\n–\n\nVehicle\n\n–\n\nVehicle\n\n–\n\nVehicle\n\n–\n\nVehicle\n\n–\n\nVehicle\n\n–\n\nVehicle\n\n–\n\nVehicle\n\n–\n\nVehicle\n\n–\n\nVehicle\n\n–\n\nVehicle\n\n–\n\nVehicle\n\n–\n\nVehicle\n\n–\n\nVehicle\n\n–\n\nVehicle\n\n–\n\nVehicle\n\n–\n\nVehicle\n\n–\n\nVehicle\n\n–\n\nVehicle\n\n–\n\nVehicle\n\n–\n\nVehicle\n\n–\n\nVehicle\n\n–\n\nVehicle\n\n–\n\nVehicle\n\n–\n\nVehicle\n\n–\n\nVehicle\n\n–\n\nVehicle\n",
    "\n\n```\nSystem: Wheel Assembly\n\nPackage: Wheel Assembly\n\nPackage: Wheel Assembly\n\nPackage: Wheel Assembly\n\nPackage: Wheel Assembly\n\nPackage: Wheel Assembly\n\nPackage: Wheel Assembly\n\nPackage: Wheel Assembly\n\nPackage: Wheel Assembly\n\nPackage: Wheel Assembly\n\nPackage: Wheel Assembly\n\nPackage: Wheel Assembly\n\nPackage: Wheel Assembly\n\nPackage: Wheel Assembly\n\nPackage: Wheel Assembly\n\nPackage: Wheel Assembly\n\nPackage: Wheel Assembly\n\nPackage: Wheel Assembly\n\nPackage: Wheel Assembly\n\nPackage: Wheel Assembly\n\nPackage: Wheel Assembly\n\nPackage: Wheel Assembly\n\nPackage: Wheel Assembly\n\nPackage: Wheel Assembly\n\nPackage: Wheel Assembly\n\nPackage: Wheel Assembly\n\nPackage: Wheel Assembly\n\nPackage: Wheel Assembly\n\nPackage: Wheel Assembly\n\nPackage: Wheel Assembly\n\nPackage: Wheel Assembly\n\nPackage: Wheel Assembly\n\nPackage: Wheel Assembly\n\nPackage: Wheel Assembly\n\nPackage: Wheel Assembly\n\nPackage: Wheel Assembly\n\n",
    "\n\n```\nSystem: FuelFlowManagementSystem\n\tComponent: FuelTankAssembly\n\t\tPort: FuelTankAssemblyPort\n\t\t\tProperty: FuelTankAssemblyPort.fuelFlow\n\t\t\tProperty: FuelTankAssemblyPort.temperature\n\t\t\tProperty: FuelTankAssemblyPort.fuelReturnFlow\n\t\t\tProperty: FuelTankAssemblyPort.fuelReturnTemperature\n\t\tPort: FuelTankAssemblyPort\n\t\t\tProperty: FuelTankAssemblyPort.fuelFlow\n\t\t\tProperty: FuelTankAssemblyPort.temperature\n\t\t\tProperty: FuelTankAssemblyPort.fuelReturnFlow\n\t\t\tProperty: FuelTankAssemblyPort.fuelReturnTemperature\n\tComponent: Engine\n\t\tPort: EnginePort\n\t\t\tProperty: EnginePort.fuelFlow\n\t\t\tProperty: EnginePort.temperature\n\t\t\tProperty: EnginePort.fuelReturnFlow\n\t\t\tProperty: EnginePort.fuelReturnTemperature\n\t\tPort: EnginePort\n\t\t\tProperty: EnginePort.fuelFlow\n\t\t\tProperty: EnginePort.temperature\n\t\t\tProperty: EnginePort.fuelReturnFlow\n\t\t\tProperty: EnginePort.fuelReturnTemperature\n```\n\n## 2. \nYou are a software engineer.\n\nTask:\nGiven the following natural‑language requirements,",
    "\n\n––––––––––––––––––––––––––––––––––\n\n## 2. \nYou are a software engineer.\n\nTask:\nGiven the following natural‑language requirements, create a UML class diagram.  \nYour output must conform to the BNF grammar below (subset of UML).  \nReturn only valid UML code, no explanations or commentary.\n\n––––– UML BNF (subset) –––––\n\n––––––––––––––––––––––––––––––––––\n\nInput Requirement:\nThis system is designed for modeling configuration variants of vehicles. The core components include the complete vehicle, front and rear axles, and tires, with key attributes such as mass defined for each. The default vehicle mass is set to 1750 kg and consists of one front axle and one rear axle, each of which is equipped with two ordered tires. The system supports variant modeling; for example, in the vehicle configuration named \"vehicle1_c1,\" the total vehicle mass can be further increased to 2000 kg, and the front axle can be replaced with a dedicated front axle featuring a steering angle. Meanwhile, specific instances of the front axle, rear axle,",
    "\n\n––––––––––––––––––––––––––––––––––\n\n## 2.\n\nYou are a software engineer.\n\nTask:\nGiven the following natural‑language requirements, create a UML v2 textual model.  \nYour output must conform to the BNF grammar below (subset of UML v2).  \nReturn only valid UML v2 code, no explanations or commentary.\n\n––––– UML v2 BNF (subset) –––––\n\n––––––––––––––––––––––––––––––––––\n\nInput Requirement:\nThis system aims to model the coupling system between a vehicle and a trailer. The system consists of one vehicle and one trailer, which are connected via a coupling mechanism (such as a tow hitch or ball connector). The vehicle itself does not directly possess a coupling ball but instead connects by referencing the ball within the hitch component. This means that the vehicle can physically connect to any compatible hitch without the need for a dedicated built-in component. Similarly, the trailer is bound to the connector in the hitch component by reference, allowing for their physical interfacing. This design ensures the reusability and flexible combination of each component, facilitating",
    "\nThe system model should be created using SysML v2.\n\nOutput Model:\nThe model should be created using SysML v2.\n\nOutput Model Diagram:\nThe model diagram should be created using SysML v2.\n\nOutput Model Diagram:\nThe model diagram should be created using SysML v2.\n\nOutput Model Diagram:\nThe model diagram should be created using SysML v2.\n\nOutput Model Diagram:\nThe model diagram should be created using SysML v2.\n\nOutput Model Diagram:\nThe model diagram should be created using SysML v2.\n\nOutput Model Diagram:\nThe model diagram should be created using SysML v2.\n\nOutput Model Diagram:\nThe model diagram should be created using SysML v2.\n\nOutput Model Diagram:\nThe model diagram should be created using SysML v2.\n\nOutput Model Diagram:\nThe model diagram should be created using SysML v2.\n\nOutput Model Diagram:\nThe model diagram should be created using SysML v2.\n\nOutput Model Diagram:\nThe model diagram should be created using SysML v2.\n\nOutput Model Diagram:\nThe model diagram should be created using SysML v",
    "\n\n––––––––––––––––––––––––––––––––––\n\n–– SysML v2 ––\n\n–– SysML v2 ––\n\n–– SysML v2 ––\n\n–– SysML v2 ––\n\n–– SysML v2 ––\n\n–– SysML v2 ––\n\n–– SysML v2 ––\n\n–– SysML v2 ––\n\n–– SysML v2 ––\n\n–– SysML v2 ––\n\n–– SysML v2 ––\n\n–– SysML v2 ––\n\n–– SysML v2 ––\n\n–– SysML v2 ––\n\n–– SysML v2 ––\n\n–– SysML v2 ––\n\n–– SysML v2 ––\n\n–– SysML v2 ––\n\n–– SysML v2 ––\n\n–– SysML v2 ––\n\n–– SysML v2 ––\n\n–– SysML v2 ––\n\n–– SysML v2 ––\n\n–– SysML v2 ––\n\n–– SysML v2 –",
    "\n\n––––––––––––––––––––––––––––––––––\n\n## 2. \nYou are a software engineer.\n\nTask:\nGiven the following natural‑language requirements, create an OMG SysML v2 textual model.  \nYour output must conform to the BNF grammar below (subset of SysML v2).  \nReturn only valid SysML v2 code, no explanations or commentary.\n\n––––– SysML v2 BNF (subset) –––––\n\n––––––––––––––––––––––––––––––––––\n\nInput Requirement:\nThis system is designed to implement the functional architecture of an automotive powertrain, including the input of fuel commands, engine start-stop control, and support for power transmission and distribution. Users can control the system’s power output through fuel commands. Once the engine is ignited and started, the system generates engine torque according to the fuel command. The torque is then sequentially amplified from the engine to the transmission, transmitted to the driveshaft, and finally distributed to the left and right wheels, thus enabling control of the vehicle’s driving force. Additionally, users can shut down the engine via a command, triggering the cessation of the",
    "\n\n```\nSystem:\n\tname: \"Powertrain Control System\"\n\tdescription: \"This system is designed to implement the control logic of an automotive powertrain. Its main functions are as follows: Upon receiving a fuel control command, the system sequentially starts the engine and generates torque according to the predetermined order. The generated torque is then successively amplified, transmitted, and distributed, delivering power stage by stage to the vehicle’s drive wheels to ensure normal driving. When a stall signal is detected, the relevant operational processes will be halted as required. The system supports engine start and shutdown control, as well as the entire power transmission process from fuel commands to actual wheel output torque, ensuring efficient and coordinated power delivery. It provides users with a reliable power response and handling experience.\"\n\tpackagedElement: [\n\t\tPowertrainControlSystem,\n\t\tEngine,\n\t\tFuelControl,\n\t\tFuelControlCommand,\n\t\tFuelControlCommandSignal,\n\t\tFuelControlCommandSignalValue,\n\t\tFuelControlCommandSignalValue_1,\n\t\tFuelControlCommandSignalValue_2,\n\t\tFuelControlCommandSignalValue_3,\n\t\tFuelControlCommandSignalValue_4",
    "\n\n```\nSystem: VehiclePowertrainSystem\n\tPart: Engine\n\t\tProperty: StartSignal\n\t\tProperty: ShutdownSignal\n\t\tProperty: FuelCommand\n\t\tProperty: EngineOutputTorque\n\tPart: Transmission\n\t\tProperty: EngineOutputTorque\n\t\tProperty: TransmissionOutputTorque\n\tPart: Wheel\n\t\tProperty: TransmissionOutputTorque\n```\n\n––––––––––––––––––––––––––––––––––\n\n## 2.\n\nYou are a software engineer.\n\nTask:\nGiven the following natural‑language requirements, create an OMG SysML v2 textual model.  \nYour output must conform to the BNF grammar below (subset of SysML v2).  \nReturn only valid SysML v2 code, no explanations or commentary.\n\n––––– SysML v2 BNF (subset) –––––\n\n––––––––––––––––––––––––––––––––––\n\nInput Requirement:\nThis system is designed to provide a secure and reliable communication channel between the user and the system. It ensures that the user's data is protected and securely transmitted over the network, ensuring the safety and privacy of the user's data.\n\nOutput System Model:\n\n",
    "\n\n```\nSystem: VehicleTrailerPowerConnection\n\tPackage: VehicleTrailerPowerConnection\n\tPackage: VehicleTrailerPowerConnection.Vehicle\n\tPackage: VehicleTrailerPowerConnection.Trailer\n\tPackage: VehicleTrailerPowerConnection.Vehicle.VehicleFrame\n\tPackage: VehicleTrailerPowerConnection.Vehicle.VehicleFrame.HitchBall\n\tPackage: VehicleTrailerPowerConnection.Trailer.TrailerFrame\n\tPackage: VehicleTrailerPowerConnection.Trailer.TrailerFrame.TrailerCoupler\n\tPackage: VehicleTrailerPowerConnection.Vehicle.VehicleFrame.HitchBall.HitchBall\n\tPackage: VehicleTrailerPowerConnection.Trailer.TrailerFrame.TrailerCoupler.TrailerCoupler\n\tPackage: VehicleTrailerPowerConnection.Vehicle.VehicleFrame.HitchBall.HitchBall.HitchBall\n\tPackage: VehicleTrailerPowerConnection.Trailer.TrailerFrame.TrailerCoupler.TrailerCoupler.TrailerCoupler\n\tPackage: VehicleTrailerPowerConnection.Vehicle.VehicleFrame.HitchBall.HitchBall.HitchBall.HitchBall\n\tPackage: VehicleTrailerPowerConnection",
    "\n\n––––––––––––––––––––––––––––––––––\n\n## 2. \nYou are a software engineer.\n\nTask:\nGiven the following natural‑language requirements, create an OMG UML v2 textual model.  \nYour output must conform to the BNF grammar below (subset of UML v2).  \nReturn only valid UML v2 code, no explanations or commentary.\n\n––––– UML v2 BNF (subset) –––––\n\n––––––––––––––––––––––––––––––––––\n\nInput Requirement:\nThis system is designed to manage the connection status between a vehicle and a trailer. The system includes one vehicle and one trailer. The vehicle is equipped with a chassis and a tow ball, while the trailer features a coupler and a trailer frame. The system enables the vehicle to connect to or disconnect from the trailer by means of the tow ball on the vehicle’s chassis and the coupler on the trailer’s frame, thus facilitating the hitching and unhitching operations between the trailer and the vehicle. Users can conveniently connect or disconnect the trailer via the system, ensuring that the trailer can be",
    "\n\n```\nSystem: VehicleTrailer\n\tPackage: VehicleTrailer\n\tPackage: VehicleTrailer.Vehicle\n\tPackage: VehicleTrailer.Trailer\n\tPackage: VehicleTrailer.Vehicle.Chassis\n\tPackage: VehicleTrailer.Vehicle.TowBall\n\tPackage: VehicleTrailer.Trailer.Chassis\n\tPackage: VehicleTrailer.Trailer.Coupler\n\tPackage: VehicleTrailer.Vehicle.Chassis.TowBall\n\tPackage: VehicleTrailer.Trailer.Chassis.Coupler\n\tPackage: VehicleTrailer.Vehicle.Chassis.TowBall.Coupler\n\tPackage: VehicleTrailer.Trailer.Chassis.Coupler.Coupler\n\tPackage: VehicleTrailer.Vehicle.Chassis.TowBall.Coupler.Coupler\n\tPackage: VehicleTrailer.Trailer.Chassis.Coupler.Coupler.Coupler\n\tPackage: VehicleTrailer.Vehicle.Chassis.TowBall.Coupler.Coupler.Coupler\n\tPackage: VehicleTrailer.Trailer.Chassis.Coupler.Coupler.Coupler.Coupler\n\tPackage: VehicleTrailer.Vehicle.Ch",
    "\n\n```\nSystem: Fuel System\n\tPart: Fuel Tank\n\t\tPort: Fuel Supply Port\n\t\t\tPort: Fuel Supply Port\n\t\t\t\tPort: Fuel Supply Port\n\t\t\t\t\tPort: Fuel Supply Port\n\t\t\t\t\t\tPort: Fuel Supply Port\n\t\t\t\t\t\t\tPort: Fuel Supply Port\n\t\t\t\t\t\t\t\tPort: Fuel Supply Port\n\t\t\t\t\t\t\t\t\tPort: Fuel Supply Port\n\t\t\t\t\t\t\t\t\t\tPort: Fuel Supply Port\n\t\t\t\t\t\t\t\t\t\t\tPort: Fuel Supply Port\n\t\t\t\t\t\t\t\t\t\t\t\tPort: Fuel Supply Port\n\t\t\t\t\t\t\t\t\t\t\t\t\tPort: Fuel Supply Port\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tPort: Fuel Supply Port\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tPort: Fuel Supply Port\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tPort: Fuel Supply Port\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tPort: Fuel Supply Port\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tPort: Fuel Supply Port\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tPort: Fuel Supply Port\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tPort: Fuel Supply Port\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tPort: Fuel Supply Port\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tPort: Fuel Supply Port\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tPort: Fuel Supply Port\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tPort: Fuel Supply Port\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tPort: Fuel Supply Port\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tPort: Fuel Supply Port\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tPort: Fuel",
    "\n\n```\nSystem: Fuel Management System\n\tStorageTank: StorageTank\n\t\tStorageTank.capacity: 100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "\nThe output system model should be a SysML v2 textual model that conforms to the BNF grammar below.\n\n––––––––––––––––––––––––––––––––––\n\nSysML v2 BNF (subset):\n\n––––––––––––––––––––––––––––––––––\n\nSysML v2 BNF (subset):\n\n––––––––––––––––––––––––––––––––––\n\nSysML v2 BNF (subset):\n\n––––––––––––––––––––––––––––––––––\n\nSysML v2 BNF (subset):\n\n––––––––––––––––––––––––––––––––––\n\nSysML v2 BNF (subset):\n\n––––––––––––––––––––––––––––––––––\n\nSysML v2 BNF (subset):\n\n––––––––––––––––––––––––––––––––––\n\nSysML v2 BNF (subset):\n\n––––––––––––––––––––––––––––––––––\n\nSysML v2 BNF (subset):\n\n––––––––––––––––––––––––––––––––––\n\nSysML v2 BNF (subset):\n\n––––––––––––––––––––––––––––––––––\n\nSysML v2 BNF (subset):\n\n––––––––––––––––––––––––––––––––––\n\nSysML v2 BNF (subset):\n\n––––––––––––––––––––––––––––––––––\n\nSysML v2 BNF (subset):\n\n––––––––––––––––––––––––––––––––––\n\nSysML v2 BNF",
    "\n\n```\nSystem VehicleA {\n\tStatechart VehicleA_Statechart {\n\t\tState Off {\n\t\t\tTransition to Starting {\n\t\t\t\tCondition:\n\t\t\t\t\t(brake_pedal_pressed) and (start_signal_received)\n\t\t\t}\n\t\t}\n\t\tState Starting {\n\t\t\tTransition to Running {\n\t\t\t\tCondition:\n\t\t\t\t\t(vehicle_on_signal_received)\n\t\t\t}\n\t\t}\n\t\tState Running {\n\t\t\tTransition to Health_Management {\n\t\t\t\tCondition:\n\t\t\t\t\t(temperature_exceeds_safety_threshold)\n\t\t\t}\n\t\t\tTransition to Maintenance {\n\t\t\t\tCondition:\n\t\t\t\t\t(maintenance_signal_received)\n\t\t\t}\n\t\t\tTransition to Degraded {\n\t\t\t\tCondition:\n\t\t\t\t\t(degraded_signal_received)\n\t\t\t}\n\t\t}\n\t\tState Health_Management {\n\t\t\tTransition to Normal {\n\t\t\t\tCondition:\n\t\t\t\t\t(restore_to_normal_signal_received)\n\t\t\t}\n\t\t}\n\t\tState Maintenance {\n\t\t\tTransition to Normal {\n\t\t\t\tCondition:\n\t\t\t\t\t(restore_to_normal_signal_received)\n\t\t\t}\n\t\t}\n\t\tState Degraded {\n\t\t\tTransition to Normal {\n\t\t\t",
    "\n\n––––––––––––––––––––––––––––––––––\n\n## 2. \nYou are a software engineer.\n\nTask:\nGiven the following natural‑language requirements, create a UML class diagram.  \nYour output must conform to the BNF grammar below (subset of UML).  \nReturn only valid UML code, no explanations or commentary.\n\n––––– UML BNF (subset) –––––\n\n––––––––––––––––––––––––––––––––––\n\nInput Requirement:\nThis system is designed to enable automated modeling of vehicle behavior, primarily comprising two core components: the vehicle and the vehicle controller. The vehicle is capable of autonomously managing its operation and health status under different conditions. Normally, the vehicle only initiates the startup process from the shutdown state when both the brake pedal is pressed and a start signal is received; after meeting these requirements, it completes self-inspection and power supply procedures. The system can sense temperature in real time, and when overheating is detected, it automatically sends a warning signal to the vehicle controller, switches the vehicle status to degraded mode, and ensures safety. Health management also includes regular maintenance and fault recovery mechanisms to ensure timely maintenance and restoration from",
    "\n\n––––––––––––––––––––––––––––––––––\n\n## 2. \nYou are a software engineer.\n\nTask:\nGiven the following natural‑language requirements, create a UML class diagram.  \nYour output must conform to the BNF grammar below (subset of UML).  \nReturn only valid UML code, no explanations or commentary.\n\n––––– UML BNF (subset) –––––\n\n––––––––––––––––––––––––––––––––––\n\nInput Requirement:\nThis system is designed for spatiotemporal simulation of the dynamic behavior of vehicles on roads at different moments. Users can define parameters such as the vehicle’s mass, position, velocity, and acceleration, and, combined with the road’s slope (angle) and surface friction coefficient, depict the state of the vehicle and the road at specific time points. The system supports snapshot recording at multiple moments within the simulation time series, enabling tracking of the vehicle’s state transitions from start-up (on state), through the driving process, to shutdown (off state). This provides detailed data to support vehicle dynamics analysis and road adaptability assessment, helping users predict vehicle performance under specific road and time conditions in a virtual environment.\n\n",
    "\n\n––––––––––––––––––––––––––––––––––\n\n## 2. \nYou are a software engineer.\n\nTask:\nGiven the following natural‑language requirements, create an OMG UML v2 textual model.  \nYour output must conform to the BNF grammar below (subset of UML v2).  \nReturn only valid UML v2 code, no explanations or commentary.\n\n––––– UML v2 BNF (subset) –––––\n\n––––––––––––––––––––––––––––––––––\n\nInput Requirement:\nThis system is designed to provide multiple configuration management solutions for automotive products. The automobile, as the main system, can select different subsystem configurations according to various needs and conditions. The system mainly includes two configurable components: Subsystem A and Subsystem B. Subsystem A offers two configuration options: one consisting of Component 1 and Component 2, and the other consisting of Component 2 and Component 3. Similarly, Subsystem B also has two configuration options: one consisting of Component 4 and Component 5, and the other consisting of Component 5 and Component 6. When configuring a vehicle, users can choose different implementations of the above subsystems as needed,",
    "\n\n––––––––––––––––––––––––––––––––––\n\n## 2. \nYou are a software engineer.\n\nTask:\nGiven the following natural‑language requirements, create an OMG UML v2 textual model.  \nYour output must conform to the BNF grammar below (subset of UML v2).  \nReturn only valid UML v2 code, no explanations or commentary.\n\n––––– UML v2 BNF (subset) –––––\n\n––––––––––––––––––––––––––––––––––\n\nInput Requirement:\nThis system is designed to provide configurable capabilities for a modular vehicle platform, supporting the flexible combination and variant selection of different subsystems and components. The system comprises multiple components and subsystems. Users can allocate various components—such as part1, part2, part3 (with port p1), part4, part5 (with port p2 and behavioral variants), and part6—to different subsystems and vehicle configurations according to their requirements. Through the abstract definitions of Subsystem A and Subsystem B, the system respectively supports different variants in terms of the quantity and types of internal components, and allows flexible interconnection between subsystem ports to ensure functional interoperability between Subsystem",
    "\n\n– Vehicle Product Line Configuration System\n\n– Vehicle Product Line Configuration System\n\n– Vehicle Product Line Configuration System\n\n– Vehicle Product Line Configuration System\n\n– Vehicle Product Line Configuration System\n\n– Vehicle Product Line Configuration System\n\n– Vehicle Product Line Configuration System\n\n– Vehicle Product Line Configuration System\n\n– Vehicle Product Line Configuration System\n\n– Vehicle Product Line Configuration System\n\n– Vehicle Product Line Configuration System\n\n– Vehicle Product Line Configuration System\n\n– Vehicle Product Line Configuration System\n\n– Vehicle Product Line Configuration System\n\n– Vehicle Product Line Configuration System\n\n– Vehicle Product Line Configuration System\n\n– Vehicle Product Line Configuration System\n\n– Vehicle Product Line Configuration System\n\n– Vehicle Product Line Configuration System\n\n– Vehicle Product Line Configuration System\n\n– Vehicle Product Line Configuration System\n\n– Vehicle Product Line Configuration System\n\n– Vehicle Product Line Configuration System\n\n– Vehicle Product Line Configuration System\n\n– Vehicle Product Line Configuration System\n\n– Vehicle Product Line Configuration System\n\n– Vehicle Product Line Configuration System\n\n– Vehicle Product Line Configuration System\n\n– Vehicle Product Line Configuration System\n\n– Vehicle Product Line Configuration System\n\n– Vehicle Product Line Configuration System\n\n– Vehicle Product Line Configuration System",
    "\n\n––––––––––––––––––––––––––––––––––\n\n––––––––––––––––––––––––––––––––––\n\n––––––––––––––––––––––––––––––––––\n\n––––––––––––––––––––––––––––––––––\n\n––––––––––––––––––––––––––––––––––\n\n––––––––––––––––––––––––––––––––––\n\n––––––––––––––––––––––––––––––––––\n\n––––––––––––––––––––––––––––––––––\n\n––––––––––––––––––––––––––––––––––\n\n––––––––––––––––––––––––––––––––––\n\n––––––––––––––––––––––––––––––––––\n\n––––––––––––––––––––––––––––––––––\n\n––––––––––––––––––––––––––––––––––\n\n––––––––––––––––––––––––––––––––––\n\n––––––––––––––––––––––––––––––––––\n\n––––––––––––––––––––––––––––––––––\n\n––––––––––––––––––––––––––––––––––\n\n––––––––––––––––––––––––––––––––––\n\n––––––––––––––––––––––––––––––––––\n\n––––––––––––––––––––––––––––––––––\n\n––––––––––––––––––––––––––––––––––\n\n––––––––––––––––––––––––––––––––––\n\n––––––––––––––––––––––––––––––––––\n\n––––––––––––––––––––––––––––––––––\n\n––––––––––––––––––––––––––––––––––\n\n––––––––––––––––––––––––––––––––––\n\n––––––––––––––––––––––––––––––––––\n\n––––––––––––––––––––––––––––––––––\n\n––––––––––––––––––––––––––––––––––\n\n––––––––––––––––––––––––––––––––––\n\n––––––––––––––––––––––––––––––––––\n\n––––––––––––––––––––––––––––––––––\n\n––––––––––––––––––––––––––––––––––\n\n––––––––––––––––––––––––––––––––––\n\n––––––––––––––––––––––––––––––––––\n\n––––––––––––––––––––––––––––––––––\n\n––––––––––––––––",
    "\n\n```\nSystem: Vehicle Mass Compliance Verification System\n\nPackage: Vehicle Mass Compliance Verification System\n\nPackage: Vehicle Mass Compliance Verification System\n\nPackage: Vehicle Mass Compliance Verification System\n\nPackage: Vehicle Mass Compliance Verification System\n\nPackage: Vehicle Mass Compliance Verification System\n\nPackage: Vehicle Mass Compliance Verification System\n\nPackage: Vehicle Mass Compliance Verification System\n\nPackage: Vehicle Mass Compliance Verification System\n\nPackage: Vehicle Mass Compliance Verification System\n\nPackage: Vehicle Mass Compliance Verification System\n\nPackage: Vehicle Mass Compliance Verification System\n\nPackage: Vehicle Mass Compliance Verification System\n\nPackage: Vehicle Mass Compliance Verification System\n\nPackage: Vehicle Mass Compliance Verification System\n\nPackage: Vehicle Mass Compliance Verification System\n\nPackage: Vehicle Mass Compliance Verification System\n\nPackage: Vehicle Mass Compliance Verification System\n\nPackage: Vehicle Mass Compliance Verification System\n\nPackage: Vehicle Mass Compliance Verification System\n\nPackage: Vehicle Mass Compliance Verification System\n\nPackage: Vehicle Mass Compliance Verification System\n\nPackage: Vehicle Mass Compliance Verification System\n\nPackage: Vehicle Mass Compliance Verification System\n\nPackage: Vehicle Mass Compliance Verification System\n\nPackage:",
    "\n\n```\nSystem: WaterSupplyNetwork\n\tSpigotBank: SpigotBank\n\t\tSpigot: Spigot\n\t\t\tFaucet: Faucet\n\t\t\t\tFaucetInlet: FaucetInlet\n```\n\n––––––––––––––––––––––––––––––––––\n\n## Solution\n\n### 1. Requirements\n\n#### 1.1. System\n\nThe system is designed to implement a water supply network that delivers hot and cold water from a main supply pipe (SpigotBank) through corresponding interfaces (Spigot) to one or more faucets (Faucet). Each faucet is equipped with hot and cold water inlets (FaucetInlet). The system is required to reliably deliver hot and cold water from the respective outlets of the main supply pipe to the corresponding inlets of all downstream faucets, ensuring simultaneous supply to multiple water usage points. Additionally, the system must guarantee correct connection and smooth transmission of the hot and cold water pipelines, thereby meeting the basic requirements for distributed hot and cold water supply in various settings.\n\n#### 1.2. SpigotBank\n\nSpigotBank is a SpigotBank.\n\n#### ",
    "\n\n```\nSystem: VehicleQualityAnalysisSystem\n\tComponent: Vehicle\n\t\tComponent: Engine\n\t\t\tProperty: Mass\n\t\t\t\tValue: 1000\n\t\tComponent: Transmission\n\t\t\tProperty: Mass\n\t\t\t\tValue: 1000\n\t\tComponent: FrontAxleAssembly\n\t\t\tProperty: Mass\n\t\t\t\tValue: 1000\n\t\tComponent: RearAxleAssembly\n\t\t\tProperty: Mass\n\t\t\t\tValue: 1000\n```\n\n–––––––––––––––––––––––––––––––––––\n\n## Solution\n\n```\nSystem: VehicleQualityAnalysisSystem\n\tComponent: Vehicle\n\t\tComponent: Engine\n\t\t\tProperty: Mass\n\t\t\t\tValue: 1000\n\t\tComponent: Transmission\n\t\t\tProperty: Mass\n\t\t\t\tValue: 1000\n\t\tComponent: FrontAxleAssembly\n\t\t\tProperty: Mass\n\t\t\t\tValue: 1000\n\t\tComponent: RearAxleAssembly\n\t\t\tProperty: Mass\n\t\t\t\tValue: 1000\n```\n\n## Explanation\n\nThe system is designed to model and analyze the quality attributes of vehicles, enabling effective management of both the entire vehicle and its key components (including the engine, transmission, front ax",
    "\n\n––––––––––––––––––––––––––––––––––\n\n## 2. \nYou are a software engineer.\n\nTask:\nGiven the following natural‑language requirements, create a UML class diagram.  \nYour output must conform to the BNF grammar below (subset of UML).  \nReturn only valid UML code, no explanations or commentary.\n\n––––– UML BNF (subset) –––––\n\n––––––––––––––––––––––––––––––––––\n\nInput Requirement:\nThis system aims to provide optimal solutions for vehicle powertrain configuration, focusing primarily on the trade-off analysis of engine types to select the engine configuration that performs best across multiple key performance indicators, including power, mass, efficiency, reliability, and cost. The system supports modeling of various engine structures (such as four-cylinder engines, six-cylinder engines, etc.), and is capable of automatically assembling related components, including cylinders, pistons, connecting rods, and crankshafts. A multi-attribute trade-off analysis method is used, and, through a pre-defined evaluation model, the system comprehensively assesses the performance data of different engine schemes. Based on the evaluation results, it automatically",
    "\n\n– Vehicle\n\n– Fuel Economy\n\n– Fuel Economy Test\n\n– Fuel Economy Test Result\n\n– Fuel Economy Test Result\n\n– Fuel Economy Test Result\n\n– Fuel Economy Test Result\n\n– Fuel Economy Test Result\n\n– Fuel Economy Test Result\n\n– Fuel Economy Test Result\n\n– Fuel Economy Test Result\n\n– Fuel Economy Test Result\n\n– Fuel Economy Test Result\n\n– Fuel Economy Test Result\n\n– Fuel Economy Test Result\n\n– Fuel Economy Test Result\n\n– Fuel Economy Test Result\n\n– Fuel Economy Test Result\n\n– Fuel Economy Test Result\n\n– Fuel Economy Test Result\n\n– Fuel Economy Test Result\n\n– Fuel Economy Test Result\n\n– Fuel Economy Test Result\n\n– Fuel Economy Test Result\n\n– Fuel Economy Test Result\n\n– Fuel Economy Test Result\n\n– Fuel Economy Test Result\n\n– Fuel Economy Test Result\n\n– Fuel Economy Test Result\n\n–",
    "\nThe system model should include the following elements:\n\n– Vehicle mass parameters: mass, center of gravity, and inertia.\n\n– Initial position, velocity, and acceleration.\n\n– Power output data: time, power, and torque.\n\n– Time step.\n\n– Vehicle motion characteristics: acceleration, velocity, and displacement.\n\n– Vehicle motion characteristics: acceleration, velocity, and displacement.\n\n– Vehicle motion characteristics: acceleration, velocity, and displacement.\n\n– Vehicle motion characteristics: acceleration, velocity, and displacement.\n\n– Vehicle motion characteristics: acceleration, velocity, and displacement.\n\n– Vehicle motion characteristics: acceleration, velocity, and displacement.\n\n– Vehicle motion characteristics: acceleration, velocity, and displacement.\n\n– Vehicle motion characteristics: acceleration, velocity, and displacement.\n\n– Vehicle motion characteristics: acceleration, velocity, and displacement.\n\n– Vehicle motion characteristics: acceleration, velocity, and displacement.\n\n– Vehicle motion characteristics: acceleration, velocity, and displacement.\n\n– Vehicle motion characteristics: acceleration, velocity, and displacement.\n\n– Vehicle motion characteristics: acceleration, velocity, and displacement.\n\n– Vehicle motion characteristics: acceleration, velocity, and displacement.\n",
    "\n\n```\nVehicleSystemModel\n\tname: \"Vehicle System Model\"\n\tdescription: \"The vehicle system model describes a car with a total mass of 2,500 kg, whose structure comprises front and rear axle assemblies. The front axle assembly has a mass of 150 kg and consists of two front wheels and a front axle; the front axle is characterized by properties of mass and steering angle. The rear axle assembly has a mass of 250 kg and consists of two rear wheels and a rear axle; the rear axle is characterized by a mass property. The model aims to illustrate the structural relationships and mass distribution of the vehicle components, providing system engineers with a reference for vehicle structure breakdown and definition of component attributes. This facilitates overall mass allocation, component decomposition, as well as subsequent detailed modeling of functions and performance during the design and analysis process.\"\n\tproperty:\n\t\t- name: \"Total Mass\"\n\t\t\tvalue: \"2500 kg\"\n\t\t- name: \"Front Axle Mass\"\n\t\t\tvalue: \"150 kg\"\n\t\t- name: \"Rear Axle",
    "\n\n– Vehicle\n\n– Safety Features\n\n– Security Features\n\n– Safety Feature\n\n– Security Feature\n\n– Safety Feature\n\n– Security Feature\n\n– Safety Feature\n\n– Security Feature\n\n– Safety Feature\n\n– Security Feature\n\n– Safety Feature\n\n– Security Feature\n\n– Safety Feature\n\n– Security Feature\n\n– Safety Feature\n\n– Security Feature\n\n– Safety Feature\n\n– Security Feature\n\n– Safety Feature\n\n– Security Feature\n\n– Safety Feature\n\n– Security Feature\n\n– Safety Feature\n\n– Security Feature\n\n– Safety Feature\n\n– Security Feature\n\n– Safety Feature\n\n– Security Feature\n\n– Safety Feature\n\n– Security Feature\n\n– Safety Feature\n\n– Security Feature\n\n– Safety Feature\n\n– Security Feature\n\n– Safety Feature\n\n– Security Feature\n\n– Safety Feature\n\n– Security Feature\n\n– Safety Feature\n\n– Security Feature\n\n– Safety Feature\n\n– Security Feature\n\n– Safety Feature\n\n– Security Feature\n\n– Safety Feature\n\n– Security",
    "\n\n```\nSystem: System\n\tComponent: Application\n\t\tPort: InputPort\n\t\t\tProperty: x\n\t\t\tProperty: y\n\t\tPort: OutputPort\n\t\t\tProperty: z\n\tComponent: Service\n\t\tPort: InputPort\n\t\t\tProperty: x\n\t\t\tProperty: y\n\t\tPort: OutputPort\n\t\t\tProperty: z\n\tComponent: Data\n\t\tPort: InputPort\n\t\t\tProperty: x\n\t\t\tProperty: y\n\t\tPort: OutputPort\n\t\t\tProperty: z\n```\n\n––––––––––––––––––––––––––––––––––\n\n## Solution\n\n```\nSystem: System\n\tComponent: Application\n\t\tPort: InputPort\n\t\t\tProperty: x\n\t\t\tProperty: y\n\t\tPort: OutputPort\n\t\t\tProperty: z\n\tComponent: Service\n\t\tPort: InputPort\n\t\t\tProperty: x\n\t\t\tProperty: y\n\t\tPort: OutputPort\n\t\t\tProperty: z\n\tComponent: Data\n\t\tPort: InputPort\n\t\t\tProperty: x\n\t\t\tProperty: y\n\t\tPort: OutputPort\n\t\t\tProperty: z\n```\n\n## Explanation\n\nThe system is a System, which is composed of three components: Application, Service, and Data.\n\nThe Application component has two ports",
    "\n\n```\nSystem:\n\tname: \"Torque Generator\"\n\tdescription: \"This system is designed to realize the torque generation function within the powertrain system. The system should include relevant components capable of generating torque, and it is required that the torque produced during operation must be greater than zero newton-meters to ensure driving capability. During the design and implementation process, the logic layer's torque generator function should be effectively allocated and mapped to the physical layer of the powertrain (including actual components such as the engine), thereby ensuring the actual generation and transmission of torque to meet the overall vehicle power output requirements.\"\n\tpackage: \"Torque Generator\"\n\tpackage: \"Torque Generator\"\n\tpackage: \"Torque Generator\"\n\tpackage: \"Torque Generator\"\n\tpackage: \"Torque Generator\"\n\tpackage: \"Torque Generator\"\n\tpackage: \"Torque Generator\"\n\tpackage: \"Torque Generator\"\n\tpackage: \"Torque Generator\"\n\tpackage: \"Torque Generator\"\n\tpackage: \"Torque Generator\"\n\tpackage: \"Torque Generator\"\n\tpackage: \"Torque Generator\"\n\tpackage: \"Torque",
    "\nThe system should be capable of transmitting and outputting power, and logically should have the ability to provide power as well as generate torque. The system should include a torque generator component responsible for generating torque. At the physical level, the system must include a powertrain, which should contain an engine responsible for the actual execution of torque generation. The function of the system’s torque generator should be able to be mapped and implemented onto the engine within the powertrain, achieving effective correspondence and allocation between logical functions and physical implementation.\n\n––––––––––––––––––––––––––––––––––\n\nInput Requirement:\nThe system must be capable of transmitting and outputting power, and logically should have the ability to provide power as well as generate torque. The system should include a torque generator component responsible for generating torque. At the physical level, the system must include a powertrain, which should contain an engine responsible for the actual execution of torque generation. The function of the system’s torque generator should be able to be mapped and implemented onto the engine within the powertrain, achieving effective correspondence and allocation between logical functions and physical implementation.\n\nOutput System Model:\nThe system should be capable of transmit",
    "\n\n––––––––––––––––––––––––––––––––––\n\nOutput Requirement:\nThe following is a list of all safety and security features that must be installed on the vehicle.\n\n––––––––––––––––––––––––––––––––––\n\nOutput System Model:\n\n––––––––––––––––––––––––––––––––––\n\nOutput Requirement:\nThe following is a list of all safety and security features that must be installed on the vehicle.\n\n––––––––––––––––––––––––––––––––––\n\nOutput System Model:\n\n––––––––––––––––––––––––––––––––––\n\nOutput Requirement:\nThe following is a list of all safety and security features that must be installed on the vehicle.\n\n––––––––––––––––––––––––––––––––––\n\nOutput System Model:\n\n––––––––––––––––––––––––––––––––––\n\nOutput Requirement:\nThe following is a list of all safety and security features that must be installed on the vehicle.\n\n––––––––––––––––––––––––––––––––––\n\nOutput System Model:\n\n––––––––––––––––––––––––––––––––––\n\nOutput Requirement:\nThe following is a list of all safety and security features that must be installed on the vehicle.\n\n––––––––––––––––––––––––––––––––––\n\nOutput System Model:\n\n––––––––––––––––––––––––––––––––––\n\nOutput Requirement:\nThe following is a list of all safety and security features that must be installed on the vehicle",
    "\n\n```\nSystem: Fuel System\n\tPart: Fuel Tank Assembly\n\t\tPart: Fuel Tank\n\t\tPart: Fuel Pump\n\t\tPart: Return Line\n\tPart: Fuel Temperature Sensor\n```\n\n––––––––––––––––––––––––––––––––––\n\n## 2. \n\nYou are a senior MBSE engineer.\n\nTask:\nGiven the following natural‑language requirements, create an OMG SysML v2 textual model.  \nYour output must conform to the BNF grammar below (subset of SysML v2).  \nReturn only valid SysML v2 code, no explanations or commentary.\n\n––––– SysML v2 BNF (subset) –––––\n\n––––––––––––––––––––––––––––––––––\n\nInput Requirement:\nThis system is designed to provide complete fuel supply and return management functions for vehicles. The vehicle is equipped with a fuel system composed of a fuel tank assembly, which integrates both the fuel pump and the fuel tank. The fuel pump is responsible for pressurizing fuel from the tank and delivering it to various fuel-consuming units within the vehicle, while allowing unused fuel to return to the tank via",
    "\nThe system proposes the following requirements for the safety and security compliance configurations of a vehicle: The vehicle interior must be equipped with two seat belts, which are mandatory safety features. An airbag should also be installed in the cockpit, but its application is not mandatory. Additionally, an anti-theft alarm device should be installed inside the vehicle to enhance security protection. The vehicle body must be equipped with a bumper, which is a required safety component, and is also required to have a keyless entry system to improve security performance. The chassis structure is to be fitted with two wheels and equipped with two sets of anti-lock braking systems, although the installation of such braking systems is not mandatory. All the aforementioned components related to safety and security are subject to identification and classification management by the system to ensure compliance with regulations regarding critical safety and security functions, thereby enhancing the vehicle’s overall safety and security features.\n\n––––––––––––––––––––––––––––––––––\n\nInput Requirement:\nThe system proposes the following requirements for the safety and security compliance configurations of a vehicle: The vehicle interior must be equipped with two seat belts, which are mandatory safety features. An airbag should",
    "\n\n– Vehicle Safety and Security Component System\n\n– Vehicle Safety and Security Component System\n\n– Vehicle Safety and Security Component System\n\n– Vehicle Safety and Security Component System\n\n– Vehicle Safety and Security Component System\n\n– Vehicle Safety and Security Component System\n\n– Vehicle Safety and Security Component System\n\n– Vehicle Safety and Security Component System\n\n– Vehicle Safety and Security Component System\n\n– Vehicle Safety and Security Component System\n\n– Vehicle Safety and Security Component System\n\n– Vehicle Safety and Security Component System\n\n– Vehicle Safety and Security Component System\n\n– Vehicle Safety and Security Component System\n\n– Vehicle Safety and Security Component System\n\n– Vehicle Safety and Security Component System\n\n– Vehicle Safety and Security Component System\n\n– Vehicle Safety and Security Component System\n\n– Vehicle Safety and Security Component System\n\n– Vehicle Safety and Security Component System\n\n– Vehicle Safety and Security Component System\n\n– Vehicle Safety and Security Component System\n\n– Vehicle Safety and Security Component System\n\n– Vehicle Safety and Security Component System\n\n– Vehicle Safety and Security Component System\n\n– Vehicle Safety",
    "\nThe system model should include the following elements:\n\n- A component class named \"Component\"\n- A property named \"Classification\" that is of type \"String\"\n- A property named \"Name\" that is of type \"String\"\n- A property named \"Description\" that is of type \"String\"\n- A property named \"Security Classification\" that is of type \"String\"\n- A property named \"Security Classification Level\" that is of type \"String\"\n- A property named \"Security Classification Reason\" that is of type \"String\"\n- A property named \"Security Classification Date\" that is of type \"String\"\n- A property named \"Security Classification Author\" that is of type \"String\"\n- A property named \"Security Classification Author\" that is of type \"String\"\n- A property named \"Security Classification Author\" that is of type \"String\"\n- A property named \"Security Classification Author\" that is of type \"String\"\n- A property named \"Security Classification Author\" that is of type \"String\"\n- A property named \"Security Classification Author\" that is of type \"String\"\n- A property named \"Security Classification Author\" that is of type \"String\"\n- A property named",
    "\n\n```\nSystem: ECU_System\n\tPackage: ECU_System\n\tPackage: ECU_System.ECU_System\n\tPackage: ECU_System.ECU_System.ECU_System\n\tPackage: ECU_System.ECU_System.ECU_System.ECU_System\n\tPackage: ECU_System.ECU_System.ECU_System.ECU_System.ECU_System\n\tPackage: ECU_System.ECU_System.ECU_System.ECU_System.ECU_System.ECU_System\n\tPackage: ECU_System.ECU_System.ECU_System.ECU_System.ECU_System.ECU_System.ECU_System\n\tPackage: ECU_System.ECU_System.ECU_System.ECU_System.ECU_System.ECU_System.ECU_System.ECU_System\n\tPackage: ECU_System.ECU_System.ECU_System.ECU_System.ECU_System.ECU_System.ECU_System.ECU_",
    "\n\n––––––––––––––––––––––––––––––––––\n\n## 2. \n\nYou are a software engineer.\n\nTask:\nGiven the following natural‑language requirements, create an OMG SysML v2 textual model.  \nYour output must conform to the BNF grammar below (subset of SysML v2).  \nReturn only valid SysML v2 code, no explanations or commentary.\n\n––––– SysML v2 BNF (subset) –––––\n\n––––––––––––––––––––––––––––––––––\n\nInput Requirement:\nThis system is designed to ensure high reliability and safety of the blood glucose meter during use. When the battery is depleted or cannot be charged, the system should be able to automatically detect the battery status and promptly alert the user to prevent failure to measure blood glucose levels due to battery issues, as well as potential treatment delays resulting from such failures. To prevent the aforementioned failure scenarios, the system requires the implementation of preventive measures for battery status, and it must have appropriate alarm and emergency response mechanisms in case of abnormalities in the blood glucose measurement function. Furthermore, the related system requirements have",
    "\nThe system should provide a set of standard and precise constants for scientific computing and simulation applications, including mathematical constants, fundamental physical constants, and context-specific parameters. Specifically, the system should have built-in commonly used mathematical constants such as Euler’s number e and pi π, with numerical precision up to 20 decimal places. At the same time, it should integrate typical physical constants, including the precisely defined speed of light in vacuum, the fine-structure constant, and the electron-to-proton mass ratio, with clear SI unit annotations. Additionally, the system should support scenario-based constants, such as standard gravitational acceleration on Earth and the amplifier gain coefficient in specific products (e.g., Model X). All constants should be easily accessible and verifiable by the system, in order to meet the high standards of scientific computation and engineering domains.\n\n––––––––––––––––––––––––––––––––––\n\n## Solution\n\n### 1. Create a SysML model\n\n#### 1.1 Create a SysML model\n\nCreate a SysML model with the name `Constants` and save it as `Constants.sysml`.\n\n#### 1.2 Create a package\n\nCreate a package with the",
    "\n\n```\npackage AutomotiveComponentSpecificationModel\n\ncontext AutomotiveComponentSpecificationModel\n\npackage AutomotiveComponentSpecificationModel::Tire\n\ncontext AutomotiveComponentSpecificationModel::Tire\n\npackage AutomotiveComponentSpecificationModel::Tire::TireData\n\ncontext AutomotiveComponentSpecificationModel::Tire::TireData\n\npackage AutomotiveComponentSpecificationModel::Tire::TireData::Tire\n\ncontext AutomotiveComponentSpecificationModel::Tire::TireData::Tire\n\npackage AutomotiveComponentSpecificationModel::Tire::TireData::Tire::Tire\n\ncontext AutomotiveComponentSpecificationModel::Tire::TireData::Tire::Tire\n\npackage AutomotiveComponentSpecificationModel::Tire::TireData::Tire::Tire::Tire\n\ncontext AutomotiveComponentSpecificationModel::Tire::TireData::Tire::Tire::Tire\n\npackage AutomotiveComponentSpecificationModel::Tire::TireData::Tire::Tire::Tire::Tire\n\ncontext AutomotiveComponentSpecificationModel::Tire::TireData::Tire::Tire::Tire::Tire\n\npackage AutomotiveComponent",
    "\n\n```\nVehicle {\n  Mass: 1200 kg\n  Length: 4.82 m\n  Wheel {\n    HubDiameter: 18 in\n    Width: 245 mm\n    OuterDiameter: 18 in + 245 mm\n    Tire {\n      Height: 1 in\n    }\n  }\n  Wheel {\n    HubDiameter: 18 in\n    Width: 245 mm\n    OuterDiameter: 18 in + 245 mm\n    Tire {\n      Height: 1 in\n    }\n  }\n}\n```\n\n––––––––––––––––––––––––––––––––––\n\n## Solution\n\n```\nVehicle {\n  Mass: 1200 kg\n  Length: 4.82 m\n  Wheel {\n    HubDiameter: 18 in\n    Width: 245 mm\n    OuterDiameter: 18 in + 245 mm\n    Tire {\n      Height: 1 in\n    }\n  }\n  Wheel {\n    HubDiameter: 18 in\n    Width: 245 mm\n    OuterDiameter: 18 in + 245 mm\n   ",
    "\n\n```\nSystem: VehiclePowertrain\n\tPart: Vehicle\n\tPart: Engine\n\tPart: Transmission\n\tPart: VehiclePowertrainConfiguration\n\tPart: VehiclePowertrainConfigurationRule\n\tPart: VehiclePowertrainConfigurationRuleRule\n\tPart: VehiclePowertrainConfigurationRuleRuleRule\n\tPart: VehiclePowertrainConfigurationRuleRuleRuleRule\n\tPart: VehiclePowertrainConfigurationRuleRuleRuleRuleRule\n\tPart: VehiclePowertrainConfigurationRuleRuleRuleRuleRuleRule\n\tPart: VehiclePowertrainConfigurationRuleRuleRuleRuleRuleRuleRule\n\tPart: VehiclePowertrainConfigurationRuleRuleRuleRuleRuleRuleRuleRule\n\tPart: VehiclePowertrainConfigurationRuleRuleRuleRuleRuleRuleRuleRuleRule\n\tPart: VehiclePowertrainConfigurationRuleRuleRuleRuleRuleRuleRuleRuleRuleRule\n\tPart: VehiclePowertrainConfigurationRuleRuleRuleRuleRuleRuleRuleRuleRuleRuleRule\n\tPart: VehiclePowertrainConfigurationRuleRuleRuleRuleRuleRuleRuleRuleRuleRuleRuleRule\n\tPart: VehiclePowertrainConfigurationRuleRuleRuleRuleRuleRuleRuleRuleRuleRuleRuleRuleRule\n\tPart: VehiclePowertrainConfigurationRuleRuleRuleRuleRuleRuleRuleRuleRuleRuleRuleRuleRuleRule\n\tPart: VehiclePower",
    "\n\n```\nSystem: Car\n\tPart: Wheel\n\t\tPart: Tire\n\t\t\tProperty: Diameter\n\t\t\tProperty: Width\n\t\t\tProperty: Height\n\t\tPart: Rim\n\t\t\tProperty: Diameter\n\t\tProperty: Tread Depth\n\tPart: Brake Disc\n\t\tProperty: Diameter\n```\n\n```\nSystem: Car\n\tPart: Wheel\n\t\tPart: Tire\n\t\t\tProperty: Diameter\n\t\t\tProperty: Width\n\t\t\tProperty: Height\n\t\tPart: Rim\n\t\t\tProperty: Diameter\n\t\tProperty: Tread Depth\n\tPart: Brake Disc\n\t\tProperty: Diameter\n```\n\n```\nSystem: Car\n\tPart: Wheel\n\t\tPart: Tire\n\t\t\tProperty: Diameter\n\t\t\tProperty: Width\n\t\t\tProperty: Height\n\t\tPart: Rim\n\t\t\tProperty: Diameter\n\t\tProperty: Tread Depth\n\tPart: Brake Disc\n\t\tProperty: Diameter\n```\n\n```\nSystem: Car\n\tPart: Wheel\n\t\tPart: Tire\n\t\t\tProperty: Diameter\n\t\t\tProperty: Width\n\t\t\tProperty: Height\n\t\tPart: Rim\n\t\t\tProperty: Di",
    "\n\n```\nSystem: Fuel System\n\nPackage: Fuel System\n\nPackage: Fuel System\n\nPackage: Fuel System\n\nPackage: Fuel System\n\nPackage: Fuel System\n\nPackage: Fuel System\n\nPackage: Fuel System\n\nPackage: Fuel System\n\nPackage: Fuel System\n\nPackage: Fuel System\n\nPackage: Fuel System\n\nPackage: Fuel System\n\nPackage: Fuel System\n\nPackage: Fuel System\n\nPackage: Fuel System\n\nPackage: Fuel System\n\nPackage: Fuel System\n\nPackage: Fuel System\n\nPackage: Fuel System\n\nPackage: Fuel System\n\nPackage: Fuel System\n\nPackage: Fuel System\n\nPackage: Fuel System\n\nPackage: Fuel System\n\nPackage: Fuel System\n\nPackage: Fuel System\n\nPackage: Fuel System\n\nPackage: Fuel System\n\nPackage: Fuel System\n\nPackage: Fuel System\n\nPackage: Fuel System\n\nPackage: Fuel System\n\nPackage: Fuel System\n\nPackage: Fuel System\n\nPackage: Fuel System\n\n",
    "\n\n```\nSystem:\n\tname: \"Physical Quantity Management System\"\n\tphysicalQuantity:\n\t\tname: \"Length\"\n\t\tunit:\n\t\t\tname: \"Meter\"\n\t\t\tsymbol: \"m\"\n\t\t\tconversionFactor: 1.0\n\t\t\tconversionFactorToSI: 1.0\n\t\t\tconversionFactorFromSI: 1.0\n\t\t\tconversionFactorToBase: 1.0\n\t\t\tconversionFactorFromBase: 1.0\n\t\t\tconversionFactorToOther: 1.0\n\t\t\tconversionFactorFromOther: 1.0\n\t\t\tconversionFactorToSIUnit: 1.0\n\t\t\tconversionFactorFromSIUnit: 1.0\n\t\t\tconversionFactorToBaseUnit: 1.0\n\t\t\tconversionFactorFromBaseUnit: 1.0\n\t\t\tconversionFactorToOtherUnit: 1.0\n\t\t\tconversionFactorFromOtherUnit: 1.0\n\t\t\tconversionFactorToSIUnitSymbol: 1.0\n\t\t\tconversionFactorFromSIUnitSymbol: 1.0\n\t\t\tconversionFactorToBaseUnitSymbol: 1.0\n\t\t\tconversionFactorFromBaseUnitSymbol: 1.0\n\t\t\tconversionFactorToOtherUnitSymbol: 1",
    "\n\n––––––––––––––––––––––––––––––––––\n\n## 2. \nYou are a software engineer.\n\nTask:\nGiven the following natural‑language requirements, create an OMG SysML v2 textual model.  \nYour output must conform to the BNF grammar below (subset of SysML v2).  \nReturn only valid SysML v2 code, no explanations or commentary.\n\n––––– SysML v2 BNF (subset) –––––\n\n––––––––––––––––––––––––––––––––––\n\nInput Requirement:\nThis system is designed to provide a standardized unit system library that supports the interoperability and adaptation between the International System of Quantities (ISQ) and United States Customary Units (USCustomaryUnits). The goal is to enable users to conveniently manage, convert, and apply various units of physical quantities, effectively reducing confusion and errors caused by inconsistent units. At the same time, the system must ensure the accuracy and authoritative standardization of all unit types, meeting the measurement needs of engineering, scientific research, and daily life. This will enhance the efficiency and reliability of data processing and communication.\n\nOutput System Model:\n\n––––––––––––––––––––––––––––––––",
    "\n\n```\nSystem: HeadlampBeamTiltAdjustmentKnobVerificationSystem\n\nPackage: HeadlampBeamTiltAdjustmentKnobVerificationSystem\n\nPackage: HeadlampBeamTiltAdjustmentKnobVerificationSystem.HeadlampBeamTiltAdjustmentKnobVerificationSystem\n\nPackage: HeadlampBeamTiltAdjustmentKnobVerificationSystem.HeadlampBeamTiltAdjustmentKnobVerificationSystem.HeadlampBeamTiltAdjustmentKnobVerificationSystem\n\nPackage: HeadlampBeamTiltAdjustmentKnobVerificationSystem.HeadlampBeamTiltAdjustmentKnobVerificationSystem.HeadlampBeamTiltAdjustmentKnobVerificationSystem.HeadlampBeamTiltAdjustmentKnobVerificationSystem\n\nPackage: HeadlampBeamTiltAdjustmentKnobVerificationSystem.HeadlampBeamTiltAdjustmentKnobVerificationSystem.HeadlampBeamTiltAdjustmentKnobVerificationSystem.HeadlampBeamTiltAdjustmentKnobVerificationSystem.HeadlampBeamTiltAdjustmentKnobVerificationSystem\n\nPackage: HeadlampBeamTiltAdjustmentKnobVerificationSystem.HeadlampBeamTiltAdjustmentKnobVerificationSystem.HeadlampBeamTiltAdjustmentKnobVerificationSystem.HeadlampBeamTiltAdjustmentKnobVerificationSystem.HeadlampBeamTiltAdjustmentKnobVerificationSystem.Head",
    "\nThe system model should be a SysML v2 textual model that describes the data types and their associated properties. The model should include the following elements:\n\n- A package that contains the data types and their properties.\n- A package that contains the status conditions and their properties.\n- A package that contains the physical dimensions and their properties.\n- A package that contains the color labeling and their properties.\n\n- A package that contains the data types and their properties.\n- A package that contains the status conditions and their properties.\n- A package that contains the physical dimensions and their properties.\n- A package that contains the color labeling and their properties.\n\n- A package that contains the data types and their properties.\n- A package that contains the status conditions and their properties.\n- A package that contains the physical dimensions and their properties.\n- A package that contains the color labeling and their properties.\n\n- A package that contains the data types and their properties.\n- A package that contains the status conditions and their properties.\n- A package that contains the physical dimensions and their properties.\n- A package that contains the color labeling and their properties.\n\n- A package that contains the",
    "\nCreate a SysML v2 textual model that conforms to the following BNF grammar.\n\n––––––––––––––––––––––––––––––––––\n\n–––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––",
    "\n\n```\nTire\n\tManufacturer: string\n\tRimDiameter: integer\n\tTireWidth: integer\n\tPosition: vector\n```\n\n```\nTire\n\tManufacturer: string\n\tRimDiameter: integer\n\tTireWidth: integer\n\tPosition: vector\n```\n\n```\nTire\n\tManufacturer: string\n\tRimDiameter: integer\n\tTireWidth: integer\n\tPosition: vector\n```\n\n```\nTire\n\tManufacturer: string\n\tRimDiameter: integer\n\tTireWidth: integer\n\tPosition: vector\n```\n\n```\nTire\n\tManufacturer: string\n\tRimDiameter: integer\n\tTireWidth: integer\n\tPosition: vector\n```\n\n```\nTire\n\tManufacturer: string\n\tRimDiameter: integer\n\tTireWidth: integer\n\tPosition: vector\n```\n\n```\nTire\n\tManufacturer: string\n\tRimDiameter: integer\n\tTireWidth: integer\n\tPosition: vector\n```\n\n```\nTire\n\tManufacturer: string\n\tRimDiameter: integer\n\tTireWidth:",
    "\nThe system model should be a SysML v2 textual model. The model should contain the following elements:\n\n– A package that contains the following elements:\n\n– A subsystem that contains the following elements:\n\n– A property that contains the following elements:\n\n– A property that contains the following elements:\n\n– A property that contains the following elements:\n\n– A property that contains the following elements:\n\n– A property that contains the following elements:\n\n– A property that contains the following elements:\n\n– A property that contains the following elements:\n\n– A property that contains the following elements:\n\n– A property that contains the following elements:\n\n– A property that contains the following elements:\n\n– A property that contains the following elements:\n\n– A property that contains the following elements:\n\n– A property that contains the following elements:\n\n– A property that contains the following elements:\n\n– A property that contains the following elements:\n\n– A property that contains the following elements:\n\n– A property that contains the following elements:\n\n– A property that contains the following elements:\n\n– A property that contains the following elements:\n\n",
    "\n\n––––––––––––––––––––––––––––––––––\n\n–– SysML v2 BNF (subset) ––\n\n––––––––––––––––––––––––––––––––––\n\n–– SysML v2 BNF (subset) ––\n\n––––––––––––––––––––––––––––––––––\n\n–– SysML v2 BNF (subset) ––\n\n––––––––––––––––––––––––––––––––––\n\n–– SysML v2 BNF (subset) ––\n\n––––––––––––––––––––––––––––––––––\n\n–– SysML v2 BNF (subset) ––\n\n––––––––––––––––––––––––––––––––––\n\n–– SysML v2 BNF (subset) ––\n\n––––––––––––––––––––––––––––––––––\n\n–– SysML v2 BNF (subset) ––\n\n––––––––––––––––––––––––––––––––––\n\n–– SysML v2 BNF (subset) ––\n\n––––––––––––––––––––––––––––––––––\n\n–– SysML v2 BNF (subset) ––\n\n––––––––––––––––––––––––––––––––––\n\n–– SysML v2 BNF (subset) ––\n\n––––––––––––––––––––––––––––––––––\n\n–– SysML v2 BNF (subset) ––\n\n––––––––––––––––––––––––––––––––––\n\n–– SysML v",
    "\n\n```\npackage Materials_Database_System\n\nimport SysML::*\n\nmodel Materials_Database_System\n\nend Materials_Database_System\n\n```\n\n```\npackage Materials_Database_System\n\nimport SysML::*\n\nmodel Materials_Database_System\n\nend Materials_Database_System\n\n```\n\n```\npackage Materials_Database_System\n\nimport SysML::*\n\nmodel Materials_Database_System\n\nend Materials_Database_System\n\n```\n\n```\npackage Materials_Database_System\n\nimport SysML::*\n\nmodel Materials_Database_System\n\nend Materials_Database_System\n\n```\n\n```\npackage Materials_Database_System\n\nimport SysML::*\n\nmodel Materials_Database_System\n\nend Materials_Database_System\n\n```\n\n```\npackage Materials_Database_System\n\nimport SysML::*\n\nmodel Materials_Database_System\n\nend Materials_Database_System\n\n```\n\n```\npackage Materials_Database_System\n\nimport SysML::*\n\nmodel Material",
    "\nThe system model should be a SysML v2 textual model.\n\nOutput Model:\nThe model should be a SysML v2 textual model.\n\nOutput Model:\nThe model should be a SysML v2 textual model.\n\nOutput Model:\nThe model should be a SysML v2 textual model.\n\nOutput Model:\nThe model should be a SysML v2 textual model.\n\nOutput Model:\nThe model should be a SysML v2 textual model.\n\nOutput Model:\nThe model should be a SysML v2 textual model.\n\nOutput Model:\nThe model should be a SysML v2 textual model.\n\nOutput Model:\nThe model should be a SysML v2 textual model.\n\nOutput Model:\nThe model should be a SysML v2 textual model.\n\nOutput Model:\nThe model should be a SysML v2 textual model.\n\nOutput Model:\nThe model should be a SysML v2 textual model.\n\nOutput Model:\nThe model should be a SysML v2 textual model.\n\nOutput Model:\nThe model should be a SysML",
    "\n\n```\nSystem: Vehicle Fuel System\n\nPackage: Vehicle Fuel System\n\nPackage: Vehicle Fuel System\n\nPackage: Vehicle Fuel System\n\nPackage: Vehicle Fuel System\n\nPackage: Vehicle Fuel System\n\nPackage: Vehicle Fuel System\n\nPackage: Vehicle Fuel System\n\nPackage: Vehicle Fuel System\n\nPackage: Vehicle Fuel System\n\nPackage: Vehicle Fuel System\n\nPackage: Vehicle Fuel System\n\nPackage: Vehicle Fuel System\n\nPackage: Vehicle Fuel System\n\nPackage: Vehicle Fuel System\n\nPackage: Vehicle Fuel System\n\nPackage: Vehicle Fuel System\n\nPackage: Vehicle Fuel System\n\nPackage: Vehicle Fuel System\n\nPackage: Vehicle Fuel System\n\nPackage: Vehicle Fuel System\n\nPackage: Vehicle Fuel System\n\nPackage: Vehicle Fuel System\n\nPackage: Vehicle Fuel System\n\nPackage: Vehicle Fuel System\n\nPackage: Vehicle Fuel System\n\nPackage: Vehicle Fuel System\n\nPackage: Vehicle Fuel System\n\nPackage: Vehicle Fuel System\n\nPackage: Vehicle Fuel System\n\nPackage: Vehicle Fuel System\n\nPackage: Vehicle F",
    "\n\n```\nSystem:\n\tname: \"Message Flow System\"\n\tdescription: \"This system aims to implement a typical publish-subscribe message flow architecture, consisting of three main participants: producers, server, and consumers. The system requires that producers can publish topic messages to the server, while consumers can subscribe to specific topics via the server. Upon successful subscription, when a new message related to the topic is published, the server needs to push and deliver the message to all consumers who have subscribed to that topic. The entire process includes consumers sending subscription requests to the server, producers publishing messages to the server, and after receiving the messages, the server sending them to all corresponding subscribers, thus achieving reliable message publishing and distribution and ensuring efficient information exchange between different users.\"\n\tpackagedElement:\n\t\t- name: \"Message Flow System\"\n\t\t- name: \"Message Flow System\"\n\t\t- name: \"Message Flow System\"\n\t\t- name: \"Message Flow System\"\n\t\t- name: \"Message Flow System\"\n\t\t- name: \"Message Flow System\"\n\t\t- name: \"Message Flow System\"\n\t\t- name: \"Message Flow System\"\n\t\t- name: \"Message Flow System",
    "\n\n––––––––––––––––––––––––––––––––––\n\n## 2. \nYou are a software engineer.\n\nTask:\nGiven the following natural‑language requirements, create an OMG SysML v2 textual model.  \nYour output must conform to the BNF grammar below (subset of SysML v2).  \nReturn only valid SysML v2 code, no explanations or commentary.\n\n––––– SysML v2 BNF (subset) –––––\n\n––––––––––––––––––––––––––––––––––\n\nInput Requirement:\nThis system is designed to provide transportation services for users. Users (the driver and up to four passengers) can enter the vehicle, and the driver is responsible for operating the vehicle to complete travel tasks. During vehicle use, if the fuel level falls below 10% of the maximum tank capacity, the driver may go to a gas station to refuel, thus ensuring the vehicle can continue operating. Environmental factors will also be taken into account throughout the process. After transportation is completed, all individuals exit the vehicle safely. This system focuses on facilitating user boarding, timely refueling during the journey, and ensuring the smooth boarding and alight",
    "\n\n```\nSystem: Fuel Management System\n\tPart: Fuel Tank\n\t\tPort: Fuel Outlet\n\t\t\tAttribute: Fuel Temperature\n\t\tPort: Fuel Inlet\n\t\t\tAttribute: Fuel Temperature\n\tPart: Engine\n\t\tPort: Fuel Inlet\n\t\t\tAttribute: Fuel Temperature\n\t\tPort: Fuel Outlet\n\t\t\tAttribute: Fuel Temperature\n\tInterface: Fuel Interface\n\t\tPart: Fuel Tank\n\t\tPart: Engine\n\t\tPort: Fuel Outlet\n\t\tPort: Fuel Inlet\n```\n\n––––– SysML v2 BNF (subset) –––––\n\n––––––––––––––––––––––––––––––––––\n\n## Solution\n\n```\nSystem: Fuel Management System\n\tPart: Fuel Tank\n\t\tPort: Fuel Outlet\n\t\t\tAttribute: Fuel Temperature\n\t\tPort: Fuel Inlet\n\t\t\tAttribute: Fuel Temperature\n\tPart: Engine\n\t\tPort: Fuel Inlet\n\t\t\tAttribute: Fuel Temperature\n\t\tPort: Fuel Outlet\n\t\t\tAttribute: Fuel Temperature\n\tInterface: Fuel Interface\n\t\tPart: Fuel Tank\n\t\tPart: Engine\n\t\tPort: F",
    "\n\n```\nSystem: Fuel System\n\tComponent: Fuel Tank Assembly\n\t\tPort: Fuel Supply Port\n\t\t\tProperty: Temperature\n\t\tPort: Fuel Return Port\n\t\t\tProperty: Temperature\n\tComponent: Engine\n\t\tPort: Fuel Supply Port\n\t\t\tProperty: Temperature\n\t\tPort: Fuel Return Port\n\t\t\tProperty: Temperature\n```\n\n––––– SysML v2 BNF (subset) –––––\n\n––––––––––––––––––––––––––––––––––\n\n## Solution\n\n```\nSystem: Fuel System\n\tComponent: Fuel Tank Assembly\n\t\tPort: Fuel Supply Port\n\t\t\tProperty: Temperature\n\t\tPort: Fuel Return Port\n\t\t\tProperty: Temperature\n\tComponent: Engine\n\t\tPort: Fuel Supply Port\n\t\t\tProperty: Temperature\n\t\tPort: Fuel Return Port\n\t\t\tProperty: Temperature\n```\n\n## Explanation\n\nThe system is called `Fuel System`.\n\nThe system consists of two components: `Fuel Tank Assembly` and `Engine`.\n\nThe `Fuel Tank Assembly` has two ports: `Fuel Supply Port` and `Fuel Return Port`.\n\nThe `Fuel Supply Port` has a property",
    "\n\n```\nSystem:\n\tname: \"Photo Capture System\"\n\tdescription: \"The system should enable users to obtain photos from real-world scenes. Specifically, after a user selects a scene they wish to capture, the system should first automatically perform focusing for the selected scene and generate an intermediate image. Next, based on the focused image, the system should capture and output the final photo. Ultimately, users can directly obtain photos that meet their requirements from the selected scene, while the system completes the focusing and shooting processes automatically in the background, without requiring manual intervention at each step.\"\n\tproperty:\n\t\t- name: \"name\"\n\t\t- name: \"description\"\n\tport:\n\t\t- name: \"scene\"\n\t\t- name: \"focused image\"\n\t\t- name: \"final photo\"\n\tconnector:\n\t\t- name: \"scene\"\n\t\t- name: \"focused image\"\n\t\t- name: \"final photo\"\n\toperation:\n\t\t- name: \"focus\"\n\t\t- name: \"capture\"\n\tflow:\n\t\t- name: \"focus\"\n\t\t- name: \"capture\"\n\tstate:\n\t\t- name:",
    "\n\n```\nSystem: PhotographyWorkflow\n\tPackage: PhotographyWorkflow\n\tPackage: PhotographyWorkflow.Focusing\n\tPackage: PhotographyWorkflow.Shooting\n\tPackage: PhotographyWorkflow.Focusing.Focus\n\tPackage: PhotographyWorkflow.Shooting.Shoot\n\tPackage: PhotographyWorkflow.Focusing.Focus.Focus\n\tPackage: PhotographyWorkflow.Shooting.Shoot.Shoot\n\tPackage: PhotographyWorkflow.Focusing.Focus.Focus.Focus\n\tPackage: PhotographyWorkflow.Shooting.Shoot.Shoot.Shoot\n\tPackage: PhotographyWorkflow.Focusing.Focus.Focus.Focus.Focus\n\tPackage: PhotographyWorkflow.Shooting.Shoot.Shoot.Shoot.Shoot\n\tPackage: PhotographyWorkflow.Focusing.Focus.Focus.Focus.Focus.Focus\n\tPackage: PhotographyWorkflow.Shooting.Shoot.Shoot.Shoot.Shoot.Shoot\n\tPackage: PhotographyWorkflow.Focusing.Focus.Focus.Focus.Focus.Focus.Focus\n\tPackage: PhotographyWorkflow.Shooting.Shoot.Shoot.Shoot.Shoot.Shoot.Shoot\n\tPackage: PhotographyWorkflow.F",
    "\n\n––––––––––––––––––––––––––––––––––\n\n## 2.\n\nTask:\nGiven the following natural‑language requirements, create an OMG SysML v2 textual model.  \nYour output must conform to the BNF grammar below (subset of SysML v2).  \nReturn only valid SysML v2 code, no explanations or commentary.\n\n––––– SysML v2 BNF (subset) –––––\n\n––––––––––––––––––––––––––––––––––\n\nInput Requirement:\nThis system is designed to support photography workflows, allowing users to frame and capture a scene. First, the user selects a specific scene, and the system performs a focusing process on the selected scene to generate an image. Then, based on this image, the system carries out the shooting process to produce a final photograph. The overall workflow automatically completes the focusing and shooting steps, ensuring that users can conveniently convert the scenes they see into high-quality photographs without manually handling intermediate image processing and conversion tasks.\n\nOutput System Model:\n\n––––––––––––––––––––––––––––––––––\n\n## 3.\n\nTask:\nGiven the following natural‑language requirements, create an OMG",
    "\n\n––––––––––––––––––––––––––––––––––\n\n## 2. \nYou are a software engineer.\n\nTask:\nGiven the following natural‑language requirements, create a UML class diagram.  \nYour output must conform to the BNF grammar below (subset of UML).  \nReturn only valid UML code, no explanations or commentary.\n\n––––– UML BNF (subset) –––––\n\n––––––––––––––––––––––––––––––––––\n\nInput Requirement:\nThis system is designed to automate the photography process. Users only need to provide a shooting scene, and the system will first perform focus processing on the scene to generate an image suitable for shooting. It will then convert the image into a photograph through a shooting operation. The entire process is seamlessly integrated, requiring no in-depth user intervention in focusing or shooting details. This simplifies the photography workflow, helping users obtain the final photograph easily and efficiently.\n\nOutput Class Diagram:\n\n––––––––––––––––––––––––––––––––––\n\n## 3. \nYou are a software engineer.\n\nTask:\nGiven the following natural‑language requirements, create a UML sequence diagram.  \n",
    "\n\n––––––––––––––––––––––––––––––––––\n\n## 2. \nYou are a software engineer.\n\nTask:\nGiven the following natural‑language requirements, create an OMG SysML v2 textual model.  \nYour output must conform to the BNF grammar below (subset of SysML v2).  \nReturn only valid SysML v2 code, no explanations or commentary.\n\n––––– SysML v2 BNF (subset) –––––\n\n––––––––––––––––––––––––––––––––––\n\nInput Requirement:\nIn this system, users can complete the entire photography process—from composition to imaging to photo output—through a software package called \"PhotographyWorkflow.\" When a user needs to take a photograph, the system first focuses (Focus) on the captured scene (Scene) to generate a frame of image (Image). The system then performs a shooting (Shoot) operation on the focused image to ultimately produce a photograph (Picture). Users only need to input the desired scene to be photographed; the system will automatically complete the focusing and imaging operations and directly output the required photograph, thereby realizing an automated and streamlined photography workflow",
    "\n\n––––––––––––––––––––––––––––––––––\n\n## 2.\n\nTask:\nGiven the following natural‑language requirements, create an OMG SysML v2 textual model.  \nYour output must conform to the BNF grammar below (subset of SysML v2).  \nReturn only valid SysML v2 code, no explanations or commentary.\n\n––––– SysML v2 BNF (subset) –––––\n\n––––––––––––––––––––––––––––––––––\n\nInput Requirement:\nThis system is designed to support the photography workflow, allowing users to select a scene and capture it as a photograph. In the shooting process, the selected scene is first focused to ensure optimal image sharpness. If the camera detects that the focus is clear, it will proceed to take the photo, generating the final image. The entire process automatically performs focusing and shooting operations in sequence, providing users with a convenient one-click shooting experience while ensuring the clarity and quality of the photos.\n\nOutput System Model:\n\n––––––––––––––––––––––––––––––––––\n\n## 3.\n\nTask:\nGiven the following natural‑language requirements, create an OMG SysML",
    "\n\n––––––––––––––––––––––––––––––––––\n\n## 2.\n\nTask:\nGiven the following natural‑language requirements, create an OMG SysML v2 textual model.  \nYour output must conform to the BNF grammar below (subset of SysML v2).  \nReturn only valid SysML v2 code, no explanations or commentary.\n\n––––– SysML v2 BNF (subset) –––––\n\n––––––––––––––––––––––––––––––––––\n\nInput Requirement:\nThis system is designed to support users in a workflow for capturing high-quality photographs. Users can select a scene, after which the system first performs focusing on the scene and generates an image that is then evaluated for focus quality. If the image is determined to be well-focused, the system proceeds with the shooting operation, converting the focused image into a photograph and ultimately producing the final photo required by the user. The entire shooting process is automatically linked from scene input to photo output, ensuring that shooting only takes place when the focus is appropriate, thereby improving the clarity and quality of the resulting photographs.\n\nOutput System Model:\n\n––––––––––––––––––––––––––––––––––\n\n##",
    "\n\n––––––––––––––––––––––––––––––––––\n\n## 2. \nYou are a software engineer.\n\nTask:\nGiven the following natural‑language requirements, create an OMG SysML v2 textual model.  \nYour output must conform to the BNF grammar below (subset of SysML v2).  \nReturn only valid SysML v2 code, no explanations or commentary.\n\n––––– SysML v2 BNF (subset) –––––\n\n––––––––––––––––––––––––––––––––––\n\nInput Requirement:\nThis system is designed to provide a secure and reliable communication service for users. It allows users to send and receive messages securely and efficiently, ensuring that their messages are not intercepted or tampered with during transmission. The system uses a secure encryption algorithm to encrypt the messages before they are sent, and a decryption algorithm to decrypt the messages when they are received. This ensures that the messages are not readable by unauthorized parties, and that the sender and receiver can verify the integrity of the messages.\n\nOutput System Model:\n\n––––––––––––––––––––––––––––––––––\n\n## 3. \nYou are a software engineer.\n\nTask:\nGiven the following natural",
    "\n\n––––––––––––––––––––––––––––––––––\n\n## 2. \nYou are a software engineer.\n\nTask:\nGiven the following natural‑language requirements, create an OMG SysML v2 textual model.  \nYour output must conform to the BNF grammar below (subset of SysML v2).  \nReturn only valid SysML v2 code, no explanations or commentary.\n\n––––– SysML v2 BNF (subset) –––––\n\n––––––––––––––––––––––––––––––––––\n\nInput Requirement:\nThis system is designed to provide automatic braking control functions for vehicles. When the user turns the vehicle key to the start position, the system is automatically activated and continuously monitors the status of the brake pedal as well as traction information such as road adhesion. By detecting the brake pressure generated when the driver presses the brake pedal and evaluating traction variations under different road conditions, the system can intelligently adjust the brake pressure and modulation frequency during the braking process. This ensures that the vehicle achieves safe and reliable braking performance under various operating conditions, thereby enhancing driving safety and comfort. The entire",
    "\n\n```\nBatteryChargingControlSystem\n\tBatteryCapacityMonitoring\n\tAutomaticCharging\n\tChargingTerminationControl\n```\n\n```\nBatteryCapacityMonitoring\n\tBatteryLevelMonitoring\n\tBatteryLevelMonitoring\n\tBatteryLevelMonitoring\n```\n\n```\nBatteryLevelMonitoring\n\tBatteryLevel\n```\n\n```\nBatteryLevel\n\tBatteryLevel\n```\n\n```\nAutomaticCharging\n\tBatteryCapacityMonitoring\n\tBatteryCapacityMonitoring\n\tBatteryCapacityMonitoring\n```\n\n```\nChargingTerminationControl\n\tBatteryCapacityMonitoring\n\tBatteryCapacityMonitoring\n\tBatteryCapacityMonitoring\n```\n\n```\nBatteryCapacityMonitoring\n\tBatteryCapacityMonitoring\n\tBatteryCapacityMonitoring\n\tBatteryCapacityMonitoring\n```\n\n```\nBatteryCapacityMonitoring\n\tBatteryCapacityMonitoring\n\tBatteryCapacityMonitoring\n\tBatteryCapacityMonitoring\n```\n\n```\nBatteryCapacityMonitoring\n\tBatteryCapacityMonitoring\n\tBatteryCapacityMonitoring\n\tBatteryCapacityMonitoring\n```\n\n```\nBatteryCapacityMonitoring\n\tBatteryCapacityMonitoring\n\tBatteryCapacityMonitoring\n\tBatteryCapacityMonitoring\n```\n\n```\nBatteryCapacityMonitoring\n\tBatteryCapacityMonitoring\n\tBatteryCapacityMonitoring\n\tBatteryCapacityMonitoring\n```\n\n```\nBatteryCapacityMonitoring\n\tBatteryCapacity",
    "\n\n```\nSystem: Charging System\n\nSubsystem: Battery\n\nSubsystem: Charging Controller\n\nSubsystem: Charging System\n\nSubsystem: Display\n\nSubsystem: Power Supply\n\nSubsystem: User Interface\n\nSubsystem: User Interface\n\nSubsystem: User Interface\n\nSubsystem: User Interface\n\nSubsystem: User Interface\n\nSubsystem: User Interface\n\nSubsystem: User Interface\n\nSubsystem: User Interface\n\nSubsystem: User Interface\n\nSubsystem: User Interface\n\nSubsystem: User Interface\n\nSubsystem: User Interface\n\nSubsystem: User Interface\n\nSubsystem: User Interface\n\nSubsystem: User Interface\n\nSubsystem: User Interface\n\nSubsystem: User Interface\n\nSubsystem: User Interface\n\nSubsystem: User Interface\n\nSubsystem: User Interface\n\nSubsystem: User Interface\n\nSubsystem: User Interface\n\nSubsystem: User Interface\n\nSubsystem: User Interface\n\nSubsystem: User Interface\n\nSubsystem: User Interface\n\nSubsystem: User Interface\n\nSubsystem: User Interface\n\nSubsystem: User Interface\n\nSubsystem: User Interface\n\nSubsystem: User Interface\n\nSubsystem: User Interface\n\nSubsystem: User Interface\n\nSubsystem: User Interface\n\nSubsystem: User Interface\n\nSubsystem: User",
    "\n\n```\nSystem: Camera\n\tSubSystem: AutoFocus\n\t\tSubSystem: Lens\n\t\tSubSystem: Sensor\n\t\tSubSystem: Focus\n\t\tSubSystem: FocusPoint\n\tSubSystem: Imaging\n\t\tSubSystem: Shutter\n\t\tSubSystem: Sensor\n\t\tSubSystem: Image\n\tSubSystem: Storage\n\t\tSubSystem: Memory\n\t\tSubSystem: Storage\n```\n\n```\nSystem: Camera\n\tSubSystem: AutoFocus\n\t\tSubSystem: Lens\n\t\tSubSystem: Sensor\n\t\tSubSystem: Focus\n\t\tSubSystem: FocusPoint\n\tSubSystem: Imaging\n\t\tSubSystem: Shutter\n\t\tSubSystem: Sensor\n\t\tSubSystem: Image\n\tSubSystem: Storage\n\t\tSubSystem: Memory\n\t\tSubSystem: Storage\n```\n\n```\nSystem: Camera\n\tSubSystem: AutoFocus\n\t\tSubSystem: Lens\n\t\tSubSystem: Sensor\n\t\tSubSystem: Focus\n\t\tSubSystem: FocusPoint\n\tSubSystem: Imaging\n\t\tSubSystem: Shutter\n\t\tSubSystem: Sensor\n\t\tSubSystem: Image\n\tSubSystem: Storage\n\t\tSubSystem: Memory\n\t\tSubSystem: Storage\n```\n",
    "\n\n––––––––––––––––––––––––––––––––––\n\n## 2. \nYou are a software engineer.\n\nTask:\nGiven the following natural‑language requirements, create an OMG SysML v2 textual model.  \nYour output must conform to the BNF grammar below (subset of SysML v2).  \nReturn only valid SysML v2 code, no explanations or commentary.\n\n––––– SysML v2 BNF (subset) –––––\n\n––––––––––––––––––––––––––––––––––\n\nInput Requirement:\nThis system is designed to provide a secure and reliable communication service for users. It allows users to send and receive messages, files, and other data securely and efficiently. The system provides end-to-end encryption, ensuring that the data is protected from unauthorized access. It also provides features such as file sharing, group messaging, and file transfer, allowing users to share files and collaborate effectively. The system is designed to be user-friendly and easy to use, providing a simple and intuitive interface for users to interact with the system.\n\nOutput System Model:\n\n––––––––––––––––––––––––––––––––––\n\n## 3. \nYou are a software engineer.",
    "\n\nSystem: Vehicle\n\nProperty: Mass\n\nValue: 1000\n\nProperty: Initial Position\n\nValue: 0\n\nProperty: Initial Velocity\n\nValue: 0\n\nProperty: Time Interval\n\nValue: 0.1\n\nProperty: Power Input\n\nValue: 100\n\nProperty: Position\n\nValue: 0\n\nProperty: Speed\n\nValue: 0\n\nProperty: Time\n\nValue: 0\n\nProperty: Position\n\nValue: 0\n\nProperty: Speed\n\nValue: 0\n\nProperty: Time\n\nValue: 0.1\n\nProperty: Position\n\nValue: 0\n\nProperty: Speed\n\nValue: 0\n\nProperty: Time\n\nValue: 0.2\n\nProperty: Position\n\nValue: 0\n\nProperty: Speed\n\nValue: 0\n\nProperty: Time\n\nValue: 0.3\n\nProperty: Position\n\nValue: 0\n\nProperty: Speed\n\nValue: 0\n\nProperty: Time\n\nValue: 0.4\n\nProperty: Position\n\nValue: 0",
    "\n\n– System: CameraShootingSystem\n– Description: This system is designed to implement basic camera shooting and display functionality. While framing, the user can input the current scene into the system. The system first performs a focusing process on the scene to obtain an image; then, it captures the obtained image to generate a photo. Finally, the system automatically displays the captured photo on the screen, allowing the user to view the shooting result immediately. The entire process ensures that scene processing, image generation, and photo display are seamlessly and automatically integrated. The user only needs to perform a simple shooting operation to obtain a complete experience of photographing and viewing the result.\n\n– Parts:\n– Part: Camera\n– Description: This part is responsible for capturing the image of the scene.\n– Part: Focusing\n– Description: This part is responsible for focusing on the scene.\n– Part: Display\n– Description: This part is responsible for displaying the captured photo on the screen.\n– Part: Shooting\n– Description: This part is responsible for performing the shooting operation.\n– Part: Scene\n– Description: This part is responsible for storing the current scene.\n\n–",
    "\n\n––––––––––––––––––––––––––––––––––\n\n## 2. \nYou are a software engineer.\n\nTask:\nGiven the following natural‑language requirements, create an OMG SysML v2 textual model.  \nYour output must conform to the BNF grammar below (subset of SysML v2).  \nReturn only valid SysML v2 code, no explanations or commentary.\n\n––––– SysML v2 BNF (subset) –––––\n\n––––––––––––––––––––––––––––––––––\n\nInput Requirement:\nThe system is designed to implement a camera information processing workflow. When a user selects a scene through the camera’s viewfinder (viewPort), the system first focuses on the scene to obtain an image (Image). This image is then captured to generate a photograph (Picture). After the photograph is generated, the system displays it on the screen via the display port (displayPort). The user does not need to be concerned with specific technical details during operation and only needs to complete scene selection and shooting. The system will automatically handle the processes of focusing, capturing, and displaying the photograph.\n\nOutput System Model:\n\n––––––––––––––––––––––––––––––––––\n",
    "\n\n```\nSystem: System\n\tSensor: Sensor\n\tSensor: Sensor\n\tSensor: Sensor\n\tSensor: Sensor\n\tSensor: Sensor\n\tSensor: Sensor\n\tSensor: Sensor\n\tSensor: Sensor\n\tSensor: Sensor\n\tSensor: Sensor\n\tSensor: Sensor\n\tSensor: Sensor\n\tSensor: Sensor\n\tSensor: Sensor\n\tSensor: Sensor\n\tSensor: Sensor\n\tSensor: Sensor\n\tSensor: Sensor\n\tSensor: Sensor\n\tSensor: Sensor\n\tSensor: Sensor\n\tSensor: Sensor\n\tSensor: Sensor\n\tSensor: Sensor\n\tSensor: Sensor\n\tSensor: Sensor\n\tSensor: Sensor\n\tSensor: Sensor\n\tSensor: Sensor\n\tSensor: Sensor\n\tSensor: Sensor\n\tSensor: Sensor\n\tSensor: Sensor\n\tSensor: Sensor\n\tSensor: Sensor\n\tSensor: Sensor\n\tSensor: Sensor\n\tSensor: Sensor\n\tSensor: Sensor\n\tSensor: Sensor\n\tSensor: Sensor\n\tSensor: Sensor\n\tSensor: Sensor\n\tSensor: Sensor\n\tSensor: Sensor\n\tSensor: Sensor\n\tSensor: Sensor\n\tSensor: Sensor\n\tSensor: Sensor\n\tSensor:",
    "\n\n```\nSystem: Vehicle_System\n\tState: Off\n\tState: Starting\n\tState: On\n\tState: Off\n\tTransition: Off -> Starting\n\tTransition: Starting -> On\n\tTransition: On -> Off\n\tTransition: Off -> Off\n```\n\n––––––––––––––––––––––––––––––––––\n\n## Solution\n\n```\nSystem: Vehicle_System\n\tState: Off\n\tState: Starting\n\tState: On\n\tState: Off\n\tTransition: Off -> Starting\n\tTransition: Starting -> On\n\tTransition: On -> Off\n\tTransition: Off -> Off\n```\n\n## Explanation\n\nThe system is a vehicle system. It has 4 states: Off, Starting, On, and Off. It has 4 transitions: Off -> Starting, Starting -> On, On -> Off, and Off -> Off.\n\n## References\n\n- [SysML v2](https://www.omg.org/spec/SysML/2.0/About-SysML-v2/)\n- [SysML v2 BNF](https://www.omg.org/spec/SysML/2.0/About-SysML-v2/SysML",
    "\n\n```\nSystem \"VehicleStatusManagementSystem\" {\n\t// TODO: Add System properties\n\t// TODO: Add System ports\n\t// TODO: Add System connectors\n\t// TODO: Add System elements\n}\n```\n\nOutput System Properties:\n\n```\nProperty \"VehicleStatusManagementSystem\" {\n\t// TODO: Add System properties\n}\n```\n\nOutput System Ports:\n\n```\nPort \"VehicleStatusManagementSystem\" {\n\t// TODO: Add System ports\n}\n```\n\nOutput System Connectors:\n\n```\nConnector \"VehicleStatusManagementSystem\" {\n\t// TODO: Add System connectors\n}\n```\n\nOutput System Elements:\n\n```\nElement \"VehicleStatusManagementSystem\" {\n\t// TODO: Add System elements\n}\n```\n\nOutput System Element Properties:\n\n```\nProperty \"VehicleStatusManagementSystem\" {\n\t// TODO: Add System element properties\n}\n```\n\nOutput System Element Ports:\n\n```\nPort \"VehicleStatusManagementSystem\" {\n\t// TODO: Add System element ports\n}\n```\n\nOutput System Element Connectors:\n\n```\nConnector \"VehicleStatusManagementSystem\"",
    "\n\n```\nSystem: VehiclePowerManagementSystem\n\tSystem: VehiclePowerManagementSystem.VehiclePowerManagementSystem_PowerSupply\n\t\tSystem: VehiclePowerManagementSystem.VehiclePowerManagementSystem_PowerSupply.VehiclePowerManagementSystem_PowerSupply_PowerSupply\n\t\tSystem: VehiclePowerManagementSystem.VehiclePowerManagementSystem_PowerSupply.VehiclePowerManagementSystem_PowerSupply_PowerSupply_PowerSupply\n\t\tSystem: VehiclePowerManagementSystem.VehiclePowerManagementSystem_PowerSupply.VehiclePowerManagementSystem_PowerSupply_PowerSupply_PowerSupply_PowerSupply\n\t\tSystem: VehiclePowerManagementSystem.VehiclePowerManagementSystem_PowerSupply.VehiclePowerManagementSystem_PowerSupply_PowerSupply_PowerSupply_PowerSupply_PowerSupply\n\t\tSystem: VehiclePowerManagementSystem.VehiclePowerManagementSystem_PowerSupply.VehiclePowerManagementSystem_PowerSupply_PowerSupply_PowerSupply_PowerSupply_PowerSupply_PowerSupply\n\t\tSystem: VehiclePowerManagementSystem.VehiclePowerManagementSystem_PowerSupply.VehiclePowerManagementSystem_PowerSupply_PowerSupply_PowerSupply_PowerSupply_PowerSupply_PowerSupply_PowerSupply\n\t\tSystem: VehiclePowerManagementSystem.VehiclePowerManagementSystem_PowerSupply.VehiclePowerManagementSystem_Power",
    "\n\n```\nSystem: Vehicle\n\tStart-up:\n\t\tStart-up State:\n\t\t\tStart-up State:\n\t\t\t\tStart-up State:\n\t\t\t\t\tStart-up State:\n\t\t\t\t\t\tStart-up State:\n\t\t\t\t\t\t\tStart-up State:\n\t\t\t\t\t\t\t\tStart-up State:\n\t\t\t\t\t\t\t\t\tStart-up State:\n\t\t\t\t\t\t\t\t\t\tStart-up State:\n\t\t\t\t\t\t\t\t\t\t\tStart-up State:\n\t\t\t\t\t\t\t\t\t\t\t\tStart-up State:\n\t\t\t\t\t\t\t\t\t\t\t\t\tStart-up State:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tStart-up State:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tStart-up State:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tStart-up State:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tStart-up State:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tStart-up State:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tStart-up State:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tStart-up State:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tStart-up State:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tStart-up State:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tStart-up State:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tStart-up State:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tStart-up State:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tStart-up State:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tStart-up State:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tStart-up State:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tStart-up State:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tStart-up State:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tStart-up State:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tStart-up State:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tStart-up State:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t",
    "\n\n––––––––––––––––––––––––––––––––––\n\n## 2. \nYou are a software engineer.\n\nTask:\nGiven the following natural‑language requirements, create an OMG SysML v2 textual model.  \nYour output must conform to the BNF grammar below (subset of SysML v2).  \nReturn only valid SysML v2 code, no explanations or commentary.\n\n––––– SysML v2 BNF (subset) –––––\n\n––––––––––––––––––––––––––––––––––\n\nInput Requirement:\nThis system is designed to implement a simple calculator. The calculator has two modes: addition and subtraction. The user can switch between the two modes by pressing the mode button. The user can enter a number by pressing the number button. The user can clear the number by pressing the clear button. The user can perform the operation by pressing the equal button. The system must ensure that the calculator can accurately perform the operation in accordance with the user’s input, thus meeting the needs of the user.\n\nOutput System Model:\n\n––––––––––––––––––––––––––––––––––\n\n## 3. \nYou are a software engineer.\n\nTask:\nGiven the following natural",
    "\n\n––––––––––––––––––––––––––––––––––\n\n## 2. \nYou are a software engineer.\n\nTask:\nGiven the following natural‑language requirements, create a UML v2 textual model.  \nYour output must conform to the BNF grammar below (subset of UML v2).  \nReturn only valid UML v2 code, no explanations or commentary.\n\n––––– UML v2 BNF (subset) –––––\n\n––––––––––––––––––––––––––––––––––\n\nInput Requirement:\nThis system is designed to enable intelligent monitoring and management of vehicle health status. During normal operation, the system automatically senses the current vehicle temperature and compares it with the preset maximum allowable temperature. If the vehicle temperature exceeds the maximum allowable value, the system promptly sends an over-temperature warning to the vehicle controller and switches the vehicle health status to \"degraded\" mode; when the temperature returns to a safe range, the status automatically reverts to normal. In addition, the vehicle undergoes periodic maintenance at scheduled intervals. When the specified maintenance time is reached, the system automatically enters maintenance status, and after maintenance is completed, the next maintenance cycle time is updated.",
    "\n\n```\nSystem: Server\n\tPort: Request\n\tPort: Response\n\tPort: Clock\n\tPort: Power\n\tPort: Schedule\n\tPort: Time\n\tPort: ResponseTime\n\tPort: RequestTime\n\tPort: ResponseTime\n\tPort: RequestTime\n\tPort: ResponseTime\n\tPort: RequestTime\n\tPort: ResponseTime\n\tPort: RequestTime\n\tPort: ResponseTime\n\tPort: RequestTime\n\tPort: ResponseTime\n\tPort: RequestTime\n\tPort: ResponseTime\n\tPort: RequestTime\n\tPort: ResponseTime\n\tPort: RequestTime\n\tPort: ResponseTime\n\tPort: RequestTime\n\tPort: ResponseTime\n\tPort: RequestTime\n\tPort: ResponseTime\n\tPort: RequestTime\n\tPort: ResponseTime\n\tPort: RequestTime\n\tPort: ResponseTime\n\tPort: RequestTime\n\tPort: ResponseTime\n\tPort: RequestTime\n\tPort: ResponseTime\n\tPort: RequestTime\n\tPort: ResponseTime\n\tPort: RequestTime\n\tPort: ResponseTime\n\tPort: RequestTime\n\tPort: ResponseTime\n\tPort: RequestTime\n\tPort",
    "\n\n––––––––––––––––––––––––––––––––––\n\n## 2. \nYou are a software engineer.\n\nTask:\nGiven the following natural‑language requirements, create an OMG SysML v2 textual model.  \nYour output must conform to the BNF grammar below (subset of SysML v2).  \nReturn only valid SysML v2 code, no explanations or commentary.\n\n––––– SysML v2 BNF (subset) –––––\n\n––––––––––––––––––––––––––––––––––\n\nInput Requirement:\nThis system is used to control the vehicle’s start-stop process. The vehicle is initially in the off state. Upon receiving a \"start signal,\" it enters the start process. During startup, the system will only respond to the \"power-on signal\" after detecting that the brake pedal has been depressed, and will simultaneously send a start signal to the controller. Once the vehicle enters the operating state, it will automatically perform a self-check and continuously supply power to the vehicle. When a \"stop signal\" is received, the process returns the vehicle to the off state. Upon leaving the operating state, the parking brake",
    "\n\n––––––––––––––––––––––––––––––––––\n\n–– SysML v2 BNF (subset) ––\n\n––––––––––––––––––––––––––––––––––\n\n–– SysML v2 BNF (subset) ––\n\n––––––––––––––––––––––––––––––––––\n\n–– SysML v2 BNF (subset) ––\n\n––––––––––––––––––––––––––––––––––\n\n–– SysML v2 BNF (subset) ––\n\n––––––––––––––––––––––––––––––––––\n\n–– SysML v2 BNF (subset) ––\n\n––––––––––––––––––––––––––––––––––\n\n–– SysML v2 BNF (subset) ––\n\n––––––––––––––––––––––––––––––––––\n\n–– SysML v2 BNF (subset) ––\n\n––––––––––––––––––––––––––––––––––\n\n–– SysML v2 BNF (subset) ––\n\n––––––––––––––––––––––––––––––––––\n\n–– SysML v2 BNF (subset) ––\n\n––––––––––––––––––––––––––––––––––\n\n–– SysML v2 BNF (subset) ––\n\n––––––––––––––––––––––––––––––––––\n\n–– SysML v2 BNF (subset) ––\n\n––––––––––––––––––––––––––––––––––\n\n–– SysML v",
    "\n\n––––––––––––––––––––––––––––––––––\n\n## 2. \nYou are a software engineer.\n\nTask:\nGiven the following natural‑language requirements, create an OMG SysML v2 textual model.  \nYour output must conform to the BNF grammar below (subset of SysML v2).  \nReturn only valid SysML v2 code, no explanations or commentary.\n\n––––– SysML v2 BNF (subset) –––––\n\n––––––––––––––––––––––––––––––––––\n\nInput Requirement:\nThis system is a cruise control system, mainly composed of the driver, cruise controller, speedometer, engine, and vehicle, among other components. The driver activates the cruise function by sending a command to set the desired speed. The cruise controller inside the vehicle receives this set-speed command and subsequently obtains the actual vehicle speed information from the speedometer. Based on these inputs, the cruise controller generates and sends corresponding fuel control commands to the engine. The speedometer collects the real-time speed of the vehicle and transmits this information to the cruise controller, while the engine adjusts its output according to the",
    "\n\n```\nSystem: Cruise Control System\n\tPart: Vehicle\n\tPart: Speedometer\n\tPart: Cruise Controller\n\tPart: Engine\n\tPart: Driver\n\tPart: Set Speed Command\n\tPart: Throttle Control Command\n\tPart: Vehicle Speed\n\tPart: Set Speed\n\tPart: Real-Time Vehicle Speed\n\tPart: Difference Between Actual Vehicle Speed and Set Speed\n\tPart: Vehicle Speed Difference\n\tPart: Vehicle Speed Difference\n\tPart: Vehicle Speed Difference\n\tPart: Vehicle Speed Difference\n\tPart: Vehicle Speed Difference\n\tPart: Vehicle Speed Difference\n\tPart: Vehicle Speed Difference\n\tPart: Vehicle Speed Difference\n\tPart: Vehicle Speed Difference\n\tPart: Vehicle Speed Difference\n\tPart: Vehicle Speed Difference\n\tPart: Vehicle Speed Difference\n\tPart: Vehicle Speed Difference\n\tPart: Vehicle Speed Difference\n\tPart: Vehicle Speed Difference\n\tPart: Vehicle Speed Difference\n\tPart: Vehicle Speed Difference\n\tPart: Vehicle Speed Difference\n\tPart: Vehicle Speed Difference\n\tPart: Vehicle Speed Difference\n\tPart: Vehicle Speed",
    "\n\n––––––––––––––––––––––––––––––––––\n\n## 2. \nYou are a software engineer.\n\nTask:\nGiven the following natural‑language requirements, create an OMG SysML v2 textual model.  \nYour output must conform to the BNF grammar below (subset of SysML v2).  \nReturn only valid SysML v2 code, no explanations or commentary.\n\n––––– SysML v2 BNF (subset) –––––\n\n––––––––––––––––––––––––––––––––––\n\nInput Requirement:\nThis system is designed to implement an automotive cruise control function. The driver sends a set speed command to the system via the in-vehicle control interface. After receiving this command, the cruise controller compares the set speed with the current vehicle speed information provided by the speed sensor (speedometer). Upon obtaining the current vehicle speed, the cruise controller calculates the difference between the set speed and the actual speed, generates the corresponding throttle control command, and sends it to the engine. This adjusts the engine output to maintain or reach the set speed. Throughout this process, the driver, cruise controller, speedometer, and engine work together through",
    "\n\n––––––––––––––––––––––––––––––––––\n\n## 2. \nYou are a software engineer.\n\nTask:\nGiven the following natural‑language requirements, create an OMG SysML v2 textual model.  \nYour output must conform to the BNF grammar below (subset of SysML v2).  \nReturn only valid SysML v2 code, no explanations or commentary.\n\n––––– SysML v2 BNF (subset) –––––\n\n––––––––––––––––––––––––––––––––––\n\nInput Requirement:\nThis system is designed to implement automotive cruise control functionality. When the driver wishes to set the vehicle’s cruising speed, they can send a command specifying the desired speed. Upon receiving this command, the vehicle’s cruise controller calculates and sends appropriate throttle control instructions to the engine based on real-time speed information from the speedometer. This enables the automatic adjustment and maintenance of the vehicle at the set cruising speed.\n\nThe system workflow includes promptly collecting and transmitting the driver’s speed setting request, real-time sensing and feedback of the vehicle speed, and intelligent throttle adjustment by the cruise controller",
    "\n\n––––––––––––––––––––––––––––––––––\n\n## 2. \nYou are a software engineer.\n\nTask:\nGiven the following natural‑language requirements, create an OMG UML v2 textual model.  \nYour output must conform to the BNF grammar below (subset of UML v2).  \nReturn only valid UML v2 code, no explanations or commentary.\n\n––––– UML v2 BNF (subset) –––––\n\n––––––––––––––––––––––––––––––––––\n\nInput Requirement:\nThis system aims to implement an automotive cruise control function that enables the driver to set a target speed through the cruise control interface. The vehicle can automatically detect the current speed and, based on the set target speed, automatically adjust the engine output to maintain steady vehicle speed. When the driver sends a set speed command via the cruise control interface, the instruction is transmitted to the vehicle's cruise controller. The vehicle obtains real-time actual speed information via a speed sensor, and the detected speed information is fed back to the cruise controller. The cruise controller compares the set speed with the actual speed and automatically generates corresponding engine fuel",
    "\n\n––––––––––––––––––––––––––––––––––\n\n## 2. \nYou are a software engineer.\n\nTask:\nGiven the following natural‑language requirements, create a UML class diagram.  \nYour output must conform to the BNF grammar below (subset of UML).  \nReturn only valid UML code, no explanations or commentary.\n\n––––– UML BNF (subset) –––––\n\n––––––––––––––––––––––––––––––––––\n\nInput Requirement:\nThis system is designed to provide a message interaction mechanism for vehicles equipped with cruise control functionality. Drivers can send set speed commands, which are first processed by the cruise controller upon receipt. The cruise controller then reads real-time speed information from the speed sensor (speedometer). Based on the difference between the set speed and the actual speed, the cruise controller calculates and generates a fuel control command. This fuel control command is first transmitted to the engine controller for processing, after which the engine controller forwards the command to the engine to ultimately control fuel flow and achieve speed adjustment and stabilization. Throughout the entire process, each system component communicates and collaborates via standardized message interfaces, thereby ensuring reliable, efficient",
    "\n\n– Vehicle Assembly\n\n– Vehicle Delivery\n\n– Vehicle Ownership\n\n– Vehicle Driving\n\n– Vehicle Scrapping\n\n– Vehicle Inquiry\n\n– Vehicle Traceability\n\n– Vehicle Inquiry\n\n– Vehicle Traceability\n\n– Vehicle Inquiry\n\n– Vehicle Traceability\n\n– Vehicle Inquiry\n\n– Vehicle Traceability\n\n– Vehicle Inquiry\n\n– Vehicle Traceability\n\n– Vehicle Inquiry\n\n– Vehicle Traceability\n\n– Vehicle Inquiry\n\n– Vehicle Traceability\n\n– Vehicle Inquiry\n\n– Vehicle Traceability\n\n– Vehicle Inquiry\n\n– Vehicle Traceability\n\n– Vehicle Inquiry\n\n– Vehicle Traceability\n\n– Vehicle Inquiry\n\n– Vehicle Traceability\n\n– Vehicle Inquiry\n\n– Vehicle Traceability\n\n– Vehicle Inquiry\n\n– Vehicle Traceability\n\n– Vehicle Inquiry\n\n– Vehicle Traceability\n\n– Vehicle Inquiry\n\n– Vehicle Traceability\n\n– Vehicle Inquiry\n\n– Vehicle Traceability\n\n– Vehicle Inquiry\n\n– Vehicle Traceability\n\n– Vehicle Inquiry\n\n– Vehicle Traceability\n\n– Vehicle Inquiry\n\n– Vehicle Traceability",
    "\n\n```\nSystemModel vehicle_1 {\n\tname = \"vehicle_1\";\n\tdescription = \"This system model describes the composition and basic attributes of a vehicle. The vehicle possesses attributes such as mass and operational status; its operational status includes gear setting and accelerator pedal position. The vehicle consists of an engine and a driver, with the driver being an external reference. The vehicle also contains multiple wheels, such as the left front wheel and right front wheel. In the model, a specific vehicle instance identified as “vehicle_1” is defined, where its left front and right front wheels are associated and described under different time snapshots to facilitate tracking of component status changes over time. This system model supports the management and tracking of vehicle structure, operational status, and key components, making it convenient for users to understand the system and for subsequent functional extensions.\";\n\tversion = \"1.0\";\n\tauthor = \"\";\n\tcopyright = \"Copyright 2021\";\n\tlicense = \"MIT\";\n\tstatus = \"draft\";\n\ttimeStamp = \"2021-05-20T12:00:00Z\";\n\ttimeZone = \"UTC",
    "\n\nVehicle_1\n\nVehicle_1.mass = 2000\n\nVehicle_1.gear = 0\n\nVehicle_1.accelerator = 0.0\n\nVehicle_1.mass = 1500\n\nVehicle_1.gear = 2\n\nVehicle_1.accelerator = 0.5\n\nVehicle_1.mass = 1500\n\nVehicle_1.gear = 2\n\nVehicle_1.accelerator = 0.5\n\nVehicle_1.mass = 1500\n\nVehicle_1.gear = 2\n\nVehicle_1.accelerator = 0.5\n\nVehicle_1.mass = 1500\n\nVehicle_1.gear = 2\n\nVehicle_1.accelerator = 0.5\n\nVehicle_1.mass = 1500\n\nVehicle_1.gear = 2\n\nVehicle_1.accelerator = 0.5\n\nVehicle_1.mass = 1500\n\nVehicle_1.gear = 2\n\nVehicle_1.accelerator = 0.",
    "\n\n––––––––––––––––––––––––––––––––––\n\n–– SysML v2 BNF (subset) ––\n\n––––––––––––––––––––––––––––––––––\n\n–– SysML v2 BNF (subset) ––\n\n––––––––––––––––––––––––––––––––––\n\n–– SysML v2 BNF (subset) ––\n\n––––––––––––––––––––––––––––––––––\n\n–– SysML v2 BNF (subset) ––\n\n––––––––––––––––––––––––––––––––––\n\n–– SysML v2 BNF (subset) ––\n\n––––––––––––––––––––––––––––––––––\n\n–– SysML v2 BNF (subset) ––\n\n––––––––––––––––––––––––––––––––––\n\n–– SysML v2 BNF (subset) ––\n\n––––––––––––––––––––––––––––––––––\n\n–– SysML v2 BNF (subset) ––\n\n––––––––––––––––––––––––––––––––––\n\n–– SysML v2 BNF (subset) ––\n\n––––––––––––––––––––––––––––––––––\n\n–– SysML v2 BNF (subset) ––\n\n––––––––––––––––––––––––––––––––––\n\n–– SysML v2 BNF (subset) ––\n\n––––––––––––––––––––––––––––––––––\n\n–– SysML v",
    "\n\n– Vehicle\n\n– Engine\n\n– Transmission\n\n– Body\n\n– Wheel\n\n– Engine\n\n– Transmission\n\n– Body\n\n– Wheel\n\n– Engine\n\n– Transmission\n\n– Body\n\n– Wheel\n\n– Engine\n\n– Transmission\n\n– Body\n\n– Wheel\n\n– Engine\n\n– Transmission\n\n– Body\n\n– Wheel\n\n– Engine\n\n– Transmission\n\n– Body\n\n– Wheel\n\n– Engine\n\n– Transmission\n\n– Body\n\n– Wheel\n\n– Engine\n\n– Transmission\n\n– Body\n\n– Wheel\n\n– Engine\n\n– Transmission\n\n– Body\n\n– Wheel\n\n– Engine\n\n– Transmission\n\n– Body\n\n– Wheel\n\n– Engine\n\n– Transmission\n\n– Body\n\n– Wheel\n\n– Engine\n\n– Transmission\n\n– Body\n\n– Wheel\n\n– Engine\n\n– Transmission\n\n– Body\n\n– Wheel\n\n– Engine\n\n– Transmission\n\n– Body\n\n– Wheel",
    "\n\nVehicle\n\nVehicle Identification Number (VIN)\n\nVehicle Name\n\nVehicle Type\n\nVehicle Model\n\nVehicle Year\n\nVehicle Color\n\nVehicle Mass\n\nVehicle Engine\n\nVehicle Transmission\n\nVehicle Chassis\n\nVehicle Wheels\n\nVehicle Body\n\nVehicle Suspension\n\nVehicle Brakes\n\nVehicle Steering\n\nVehicle Tires\n\nVehicle Wheels\n\nVehicle Body\n\nVehicle Suspension\n\nVehicle Brakes\n\nVehicle Steering\n\nVehicle Tires\n\nVehicle Wheels\n\nVehicle Body\n\nVehicle Suspension\n\nVehicle Brakes\n\nVehicle Steering\n\nVehicle Tires\n\nVehicle Wheels\n\nVehicle Body\n\nVehicle Suspension\n\nVehicle Brakes\n\nVehicle Steering\n\nVehicle Tires\n\nVehicle Wheels\n\nVehicle Body\n\nVehicle Suspension\n\nVehicle Brakes\n\nVehicle Steering\n\nVehicle Tires\n\nVehicle Wheels\n\nVehicle Body\n\nVehicle Suspension\n\nVehicle Brakes\n\nVehicle Steering\n\nVehicle Tires\n\nVehicle Wheels\n\nVehicle Body\n\nVehicle Suspension\n\nVehicle",
    "\n\n– System: QualityAggregationManagementSystem\n\n– Context: QualityAggregationManagementSystemContext\n\n– Package: QualityAggregationManagementSystemPackage\n\n– Class: QualityAggregationManagementSystemClass\n\n– Class: QualityAggregationManagementSystemClass\n\n– Class: QualityAggregationManagementSystemClass\n\n– Class: QualityAggregationManagementSystemClass\n\n– Class: QualityAggregationManagementSystemClass\n\n– Class: QualityAggregationManagementSystemClass\n\n– Class: QualityAggregationManagementSystemClass\n\n– Class: QualityAggregationManagementSystemClass\n\n– Class: QualityAggregationManagementSystemClass\n\n– Class: QualityAggregationManagementSystemClass\n\n– Class: QualityAggregationManagementSystemClass\n\n– Class: QualityAggregationManagementSystemClass\n\n– Class: QualityAggregationManagementSystemClass\n\n– Class: QualityAggregationManagementSystemClass\n\n– Class: QualityAggregationManagementSystemClass\n\n– Class: QualityAggregationManagementSystemClass\n\n– Class: QualityAggregationManagementSystemClass\n\n– Class: QualityAggregationManagementSystemClass\n\n– Class: QualityAggregationManagementSystemClass\n\n– Class: QualityAggregationManagementSystemClass\n\n– Class: QualityAggregationManagementSystemClass\n\n– Class: QualityAggregationManagementSystemClass\n\n– Class: QualityAggregation",
    "\n\n```\nSystem:\n  Name: Mass Aggregation System\n  Description: This system is used for the aggregation and management of the mass of objects with mass attributes. Each object has a basic mass and can also contain several subcomponents. The system can automatically calculate the total mass, including all subcomponents. For supported composite objects, the total mass equals the sum of the object's own basic mass and the full mass of all its subcomponents. In addition, the system supports mass-based filtering and aggregation of components; that is, a minimum mass threshold can be set so that only subcomponents whose mass is not less than this threshold are counted. In this case, the total mass is the sum of the object's own mass and the mass of all subcomponents that meet the specified minimum mass requirement. This system is suitable for hierarchical decomposition and overall mass control of complex products or equipment structures, enabling users to flexibly aggregate mass information from different dimensions according to actual needs.\n\n```\n\n```\n\n```\n\n```\n\n```\n\n```\n\n```\n\n```\n\n```\n\n```\n\n```\n\n```\n\n```\n\n```\n\n```\n\n```\n\n```\n\n```\n\n```\n\n",
    "\nThe system model should be a textual representation of the system's core parameters, including the vehicle's power output, acceleration, speed, and position. The model should be organized in a logical and intuitive manner, with clear definitions and relationships between parameters. The model should be easy to read and understand, making it easy for engineers to interpret and utilize the results.\n\n––––––––––––––––––––––––––––––––––\n\nInput Requirement:\nThe system must be capable of calculating the core parameters of vehicle dynamics, including the vehicle's power output, acceleration, speed, and position under various operating conditions. It should accurately calculate the vehicle’s actual available power output based on key input parameters such as wheel power, aerodynamic drag coefficient, friction coefficient, vehicle mass, and speed. Additionally, the system should be able to deduce the vehicle’s acceleration based on effective power, mass, and current speed, and utilize the obtained acceleration, initial speed, and time to calculate the vehicle’s speed at any given moment. Furthermore, the system should have the capability to estimate vehicle displacement based on speed and time, helping end-users comprehensively analyze and predict the dynamic performance of the vehicle under specific operating conditions. The overall requirements emphasize high accuracy",
    "\n\n– Vehicle\n\n– Vehicle.acceleration\n\n– Vehicle.speed\n\n– Vehicle.position\n\n– Vehicle.drivingPower\n\n– Vehicle.mass\n\n– Vehicle.aerodynamicDragCoefficient\n\n– Vehicle.rollingResistanceCoefficient\n\n– Vehicle.timeStep\n\n– Vehicle.initialSpeed\n\n– Vehicle.initialPosition\n\n– Vehicle.drivingPower\n\n– Vehicle.mass\n\n– Vehicle.aerodynamicDragCoefficient\n\n– Vehicle.rollingResistanceCoefficient\n\n– Vehicle.timeStep\n\n– Vehicle.initialSpeed\n\n– Vehicle.initialPosition\n\n– Vehicle.drivingPower\n\n– Vehicle.mass\n\n– Vehicle.aerodynamicDragCoefficient\n\n– Vehicle.rollingResistanceCoefficient\n\n– Vehicle.timeStep\n\n– Vehicle.initialSpeed\n\n– Vehicle.initialPosition\n\n– Vehicle.drivingPower\n\n– Vehicle.mass\n\n– Vehicle.aerodynamicDragCoefficient\n\n– Vehicle.rollingResistanceCoefficient\n\n– Vehicle.timeStep\n\n– Vehicle.initialSpeed\n\n– Vehicle.initialPosition\n\n– Vehicle.drivingPower\n\n– Vehicle.mass\n\n– Vehicle",
    "\n\n```\nSystem: VehicleDynamics\n\tProperty:\n\t\tProperty: VehicleMass\n\t\tProperty: WheelPower\n\t\tProperty: AerodynamicDragCoefficient\n\t\tProperty: RollingResistanceCoefficient\n\tState:\n\t\tState: VehicleSpeed\n\t\tState: VehiclePosition\n\tOperation:\n\t\tOperation: CalculateVehicleSpeed\n\t\tOperation: CalculateVehiclePosition\n```\n\n––––––––––––––––––––––––––––––––––\n\n## Solution\n\n```\nSystem: VehicleDynamics\n\tProperty:\n\t\tProperty: VehicleMass\n\t\tProperty: WheelPower\n\t\tProperty: AerodynamicDragCoefficient\n\t\tProperty: RollingResistanceCoefficient\n\tState:\n\t\tState: VehicleSpeed\n\t\tState: VehiclePosition\n\tOperation:\n\t\tOperation: CalculateVehicleSpeed\n\t\tOperation: CalculateVehiclePosition\n```\n\n## Explanation\n\nThe system is designed to model and compute the vehicle's driving dynamics. Based on user input parameters such as vehicle mass, wheel power, aerodynamic drag coefficient, and rolling resistance coefficient, together with initial speed and position, the system automatically calculates and updates the vehicle's speed and position at each time step. The system comprehensively accounts for the effects of air resistance and friction",
    "\n\n– Vehicle\n\n– Vehicle.Position\n\n– Vehicle.Velocity\n\n– Vehicle.Acceleration\n\n– Vehicle.Mass\n\n– Vehicle.Power\n\n– Vehicle.DragCoefficient\n\n– Vehicle.FrictionCoefficient\n\n– Vehicle.TimeInterval\n\n– Vehicle.InitialPosition\n\n– Vehicle.InitialVelocity\n\n– Vehicle.FinalPosition\n\n– Vehicle.FinalVelocity\n\n– Vehicle.Acceleration\n\n– Vehicle.Power\n\n– Vehicle.DragCoefficient\n\n– Vehicle.FrictionCoefficient\n\n– Vehicle.TimeInterval\n\n– Vehicle.InitialPosition\n\n– Vehicle.InitialVelocity\n\n– Vehicle.FinalPosition\n\n– Vehicle.FinalVelocity\n\n– Vehicle.Acceleration\n\n– Vehicle.Power\n\n– Vehicle.DragCoefficient\n\n– Vehicle.FrictionCoefficient\n\n– Vehicle.TimeInterval\n\n– Vehicle.InitialPosition\n\n– Vehicle.InitialVelocity\n\n– Vehicle.FinalPosition\n\n– Vehicle.FinalVelocity\n\n– Vehicle.Acceleration\n\n– Vehicle.Power\n\n– Vehicle.DragCoefficient\n\n– Vehicle.FrictionCoefficient\n\n– Vehicle.TimeInterval\n\n– Vehicle.InitialPosition\n\n– Vehicle.InitialVelocity",
    "\n\n```\nSystem: VehicleWeightRestriction\n\tChassis: Chassis\n\t\tMass: 1000\n\tEngine: Engine\n\t\tMass: 1000\n\tGearbox: Gearbox\n\t\tMass: 1000\n\tTotalMass: TotalMass\n\t\tMass: 2500\n```\n\n––––––––––––––––––––––––––––––––––\n\n## 2.\n\nYou are a software engineer.\n\nTask:\nGiven the following natural‑language requirements, create an OMG SysML v2 textual model.  \nYour output must conform to the BNF grammar below (subset of SysML v2).  \nReturn only valid SysML v2 code, no explanations or commentary.\n\n––––– SysML v2 BNF (subset) –––––\n\n––––––––––––––––––––––––––––––––––\n\nInput Requirement:\nThis system is designed to control the speed of a vehicle. The system will monitor the vehicle’s speed and compare it to a specified maximum speed limit. If the vehicle’s speed exceeds the specified limit, the system will issue a warning to the driver, prompting them to slow down.\n\nOutput System",
    "\n\n```\nSystem: VehicleMassBudget\n\tProperty: MassLimit\n\t\tValue: 2500\n\tProperty: Mass\n\t\tValue: 0\n\tProperty: MassEngine\n\t\tValue: 0\n\tProperty: MassTransmission\n\t\tValue: 0\n\tProperty: MassChassis\n\t\tValue: 0\n\tProperty: MassBrakes\n\t\tValue: 0\n\tProperty: MassWheels\n\t\tValue: 0\n\tProperty: MassSteering\n\t\tValue: 0\n\tProperty: MassSuspension\n\t\tValue: 0\n\tProperty: MassOther\n\t\tValue: 0\n\tProperty: MassTotal\n\t\tValue: 0\n\tProperty: MassEngine\n\t\tValue: 0\n\tProperty: MassTransmission\n\t\tValue: 0\n\tProperty: MassChassis\n\t\tValue: 0\n\tProperty: MassBrakes\n\t\tValue: 0\n\tProperty: MassWheels\n\t\tValue: 0\n\tProperty: MassSteering\n\t\tValue: 0\n\tProperty: MassSuspension\n\t\tValue: 0\n\tProperty: MassOther\n\t\tValue: 0\n\tProperty: Mass",
    "\n\n```\nSystem: VehicleMassManagementSystem\n\tPart: Chassis\n\t\tProperty: Mass\n\t\t\tValue: 1000\n\tPart: Engine\n\t\tProperty: Mass\n\t\t\tValue: 1000\n\tPart: Transmission\n\t\tProperty: Mass\n\t\t\tValue: 1000\n\tProperty: TotalMass\n\t\tValue: 3000\n```\n\n––––––––––––––––––––––––––––––––––\n\n## Solution\n\n```\nSystem: VehicleMassManagementSystem\n\tPart: Chassis\n\t\tProperty: Mass\n\t\t\tValue: 1000\n\tPart: Engine\n\t\tProperty: Mass\n\t\t\tValue: 1000\n\tPart: Transmission\n\t\tProperty: Mass\n\t\t\tValue: 1000\n\tProperty: TotalMass\n\t\tValue: 3000\n```\n\n## Explanation\n\nThe system is designed to manage and regulate vehicle mass in compliance with relevant standards. A vehicle consists of three parts: the chassis, the engine, and the transmission, each with its own mass. The system requires that the total mass of the complete vehicle (i.e., the sum of the masses of the ch",
    "\n\n```\nSystem: VehicleWeightSystem\n\tComponent: Chassis\n\tComponent: Engine\n\tComponent: Transmission\n\tProperty: Weight\n\tProperty: TotalWeight\n\tProperty: Limit\n\tProperty: Warning\n\tProperty: Restriction\n\tProperty: Compliance\n\tProperty: Safety\n\tProperty: Legality\n\tProperty: Regulatory\n\tProperty: Designed\n\tProperty: Vehicle\n\tProperty: Total\n\tProperty: Component\n\tProperty: Weight\n\tProperty: Data\n\tProperty: Record\n\tProperty: Manage\n\tProperty: Accurately\n\tProperty: Sum\n\tProperty: Exceed\n\tProperty: Provide\n\tProperty: Warning\n\tProperty: Impose\n\tProperty: Restrictions\n\tProperty: Ensure\n\tProperty: Complies\n\tProperty: Regulatory\n\tProperty: Requirements\n\tProperty: Product\n\tProperty: Legal\n\tProperty: Compliant\n\tProperty: Safety\n\tProperty: Designed\n\tProperty: Vehicle\n\tProperty: Total\n\tProperty: Weight\n\tProperty: Limit\n\tProperty: System\n\tProperty: Designed\n\tProperty: Vehicle\n\tProperty: Total\n\tProperty: Weight\n",
    "\n\n```\nSystem: Vehicle\n\tChassis: Chassis\n\t\tMass: 1000\n\tEngine: Engine\n\t\tMass: 1000\n\tTransmission: Transmission\n\t\tMass: 1000\n\tTotal Mass: 2500\n\tDynamic Behavior:\n\t\tInitial Velocity: 0\n\t\tFinal Velocity: 0\n\t\tMass: 2500\n\t\tApplied Force: 0\n\t\tTime: 0\n\t\tChange in Velocity: 0\n```\n\n––––––––––––––––––––––––––––––––––\n\n## Solution\n\n```\nSystem: Vehicle\n\tChassis: Chassis\n\t\tMass: 1000\n\tEngine: Engine\n\t\tMass: 1000\n\tTransmission: Transmission\n\t\tMass: 1000\n\tTotal Mass: 2500\n\tDynamic Behavior:\n\t\tInitial Velocity: 0\n\t\tFinal Velocity: 0\n\t\tMass: 2500\n\t\tApplied Force: 0\n\t\tTime: 0\n\t\tChange in Velocity: 0\n```\n\n## Explanation\n\nThe system is a",
    "\n\n– Vehicle\n\n– Maintenance\n\n– MaintenanceInterval\n\n– MaintenanceSchedule\n\n– MaintenanceTime\n\n– Temperature\n\n– TemperatureLimit\n\n– MaintenanceStatus\n\n– MaintenanceTime\n\n– MaintenanceInterval\n\n– MaintenanceSchedule\n\n– MaintenanceTime\n\n– Temperature\n\n– TemperatureLimit\n\n– MaintenanceStatus\n\n– MaintenanceTime\n\n– MaintenanceInterval\n\n– MaintenanceSchedule\n\n– MaintenanceTime\n\n– Temperature\n\n– TemperatureLimit\n\n– MaintenanceStatus\n\n– MaintenanceTime\n\n– MaintenanceInterval\n\n– MaintenanceSchedule\n\n– MaintenanceTime\n\n– Temperature\n\n– TemperatureLimit\n\n– MaintenanceStatus\n\n– MaintenanceTime\n\n– MaintenanceInterval\n\n– MaintenanceSchedule\n\n– MaintenanceTime\n\n– Temperature\n\n– TemperatureLimit\n\n– MaintenanceStatus\n\n– MaintenanceTime\n\n– MaintenanceInterval\n\n– MaintenanceSchedule\n\n– MaintenanceTime\n\n– Temperature\n\n– TemperatureLimit\n\n– MaintenanceStatus\n\n– MaintenanceTime\n\n– MaintenanceInterval\n\n– MaintenanceSchedule\n",
    "\nThe system model must be a SysML v2 textual model.\n\nOutput Model:\nThe model must be a SysML v2 textual model.\n\nOutput Model:\nThe model must be a SysML v2 textual model.\n\nOutput Model:\nThe model must be a SysML v2 textual model.\n\nOutput Model:\nThe model must be a SysML v2 textual model.\n\nOutput Model:\nThe model must be a SysML v2 textual model.\n\nOutput Model:\nThe model must be a SysML v2 textual model.\n\nOutput Model:\nThe model must be a SysML v2 textual model.\n\nOutput Model:\nThe model must be a SysML v2 textual model.\n\nOutput Model:\nThe model must be a SysML v2 textual model.\n\nOutput Model:\nThe model must be a SysML v2 textual model.\n\nOutput Model:\nThe model must be a SysML v2 textual model.\n\nOutput Model:\nThe model must be a SysML v2 textual model.\n\nOutput Model:\nThe model must be a SysML",
    "\n\n```\nSystem: Vehicle\n\tProperty: Mass\n\t\tValue: 1500 kg\n\tProperty: Mass\n\t\tValue: 2000 kg\n\tProperty: Mass\n\t\tValue: 1500 kg\n\tProperty: Mass\n\t\tValue: 2000 kg\n\tProperty: Mass\n\t\tValue: 1500 kg\n\tProperty: Mass\n\t\tValue: 2000 kg\n\tProperty: Mass\n\t\tValue: 1500 kg\n\tProperty: Mass\n\t\tValue: 2000 kg\n\tProperty: Mass\n\t\tValue: 1500 kg\n\tProperty: Mass\n\t\tValue: 2000 kg\n\tProperty: Mass\n\t\tValue: 1500 kg\n\tProperty: Mass\n\t\tValue: 2000 kg\n\tProperty: Mass\n\t\tValue: 1500 kg\n\tProperty: Mass\n\t\tValue: 2000 kg\n\tProperty: Mass\n\t\tValue: 1500 kg\n\tProperty: Mass\n\t\tValue:",
    "\n\n```\nSystemModel:\n\tname: Vehicle\n\tdescription: Vehicle\n\tproperty:\n\t\tname: Mass\n\t\tdescription: Mass\n\t\ttype: Real\n\t\tvalue: 1000\n\tproperty:\n\t\tname: Engine\n\t\tdescription: Engine\n\t\ttype: Engine\n\tproperty:\n\t\tname: Transmission\n\t\tdescription: Transmission\n\t\ttype: Transmission\n\tproperty:\n\t\tname: Clutch\n\t\tdescription: Clutch\n\t\ttype: Clutch\n\tproperty:\n\t\tname: Gearbox\n\t\tdescription: Gearbox\n\t\ttype: Gearbox\n\tproperty:\n\t\tname: Brake\n\t\tdescription: Brake\n\t\ttype: Brake\n\tproperty:\n\t\tname: Steering\n\t\tdescription: Steering\n\t\ttype: Steering\n\tproperty:\n\t\tname: Wheels\n\t\tdescription: Wheels\n\t\ttype: Wheels\n\tproperty:\n\t\tname: Suspension\n\t\tdescription: Suspension\n\t\ttype: Suspension\n\tproperty:\n\t\tname: Chassis\n\t\tdescription: Chassis\n\t\ttype: Chassis\n\tproperty:\n\t\tname",
    "\nThe system model must be created using SysML v2. The model must be created using the SysML v2 textual model. The model must be created using the SysML v2 textual model. The model must be created using the SysML v2 textual model. The model must be created using the SysML v2 textual model. The model must be created using the SysML v2 textual model. The model must be created using the SysML v2 textual model. The model must be created using the SysML v2 textual model. The model must be created using the SysML v2 textual model. The model must be created using the SysML v2 textual model. The model must be created using the SysML v2 textual model. The model must be created using the SysML v2 textual model. The model must be created using the SysML v2 textual model. The model must be created using the SysML v2 textual model. The model must be created using the SysML v2 textual model. The model must be created using the SysML v2 textual model. The model must be created using the SysML v2 textual model. The model must",
    "\n\n––––––––––––––––––––––––––––––––––\n\n## 2. \nYou are a software engineer.\n\nTask:\nGiven the following natural‑language requirements, create an OMG UML v2 textual model.  \nYour output must conform to the BNF grammar below (subset of UML v2).  \nReturn only valid UML v2 code, no explanations or commentary.\n\n––––– UML v2 BNF (subset) –––––\n\n––––––––––––––––––––––––––––––––––\n\nInput Requirement:\nThis system is designed to analyze the dynamic performance of vehicles, focusing primarily on modeling and calculating the power demand, acceleration, speed, and position variations over time during straight-line driving. Users can set vehicle attributes (such as curb weight, payload, wheel diameter, transmission efficiency, and fuel economy under urban and highway conditions) as well as specific driving cycles (including time-stamped position and speed information) to analyze the required engine power, acceleration, and other dynamic parameters necessary to meet these conditions. Further, the system can calculate the vehicle’s fuel economy throughout the entire driving cycle. It supports compliance verification based on specified energy consumption targets (such as",
    "\n\n– Vehicle\n\n– Vehicle.curbWeight\n\n– Vehicle.load\n\n– Vehicle.wheelDiameter\n\n– Vehicle.transmissionEfficiency\n\n– Vehicle.wheelPower\n\n– Vehicle.acceleration\n\n– Vehicle.energyConsumption\n\n– Vehicle.actualEnginePowerDemand\n\n– Vehicle.fuelConsumption\n\n– Vehicle.fuelEconomy\n\n– Vehicle.urbanDrivingScenario\n\n– Vehicle.highwayDrivingScenario\n\n– Vehicle.speedVariation\n\n– Vehicle.trajectory\n\n– Vehicle.actualFuelEconomy\n\n– Vehicle.actualFuelConsumption\n\n– Vehicle.actualEnergyConsumption\n\n– Vehicle.actualWheelPower\n\n– Vehicle.actualAcceleration\n\n– Vehicle.actualEnginePowerDemand\n\n– Vehicle.actualFuelConsumption\n\n– Vehicle.actualFuelEconomy\n\n– Vehicle.actualEnergyConsumption\n\n– Vehicle.actualWheelPower\n\n– Vehicle.actualAcceleration\n\n– Vehicle.actualEnginePowerDemand\n\n– Vehicle.actualFuelConsumption\n\n– Vehicle.actualFuelEconomy\n\n– Vehicle.actualEnergyConsumption\n\n– Vehicle.actualWheelPower\n\n– Vehicle.actualAcceleration\n\n–",
    "\n\nEngineSelectionSystem\n\nEngineSelectionSystem\n\nEngineSelectionSystem\n\nEngineSelectionSystem\n\nEngineSelectionSystem\n\nEngineSelectionSystem\n\nEngineSelectionSystem\n\nEngineSelectionSystem\n\nEngineSelectionSystem\n\nEngineSelectionSystem\n\nEngineSelectionSystem\n\nEngineSelectionSystem\n\nEngineSelectionSystem\n\nEngineSelectionSystem\n\nEngineSelectionSystem\n\nEngineSelectionSystem\n\nEngineSelectionSystem\n\nEngineSelectionSystem\n\nEngineSelectionSystem\n\nEngineSelectionSystem\n\nEngineSelectionSystem\n\nEngineSelectionSystem\n\nEngineSelectionSystem\n\nEngineSelectionSystem\n\nEngineSelectionSystem\n\nEngineSelectionSystem\n\nEngineSelectionSystem\n\nEngineSelectionSystem\n\nEngineSelectionSystem\n\nEngineSelectionSystem\n\nEngineSelectionSystem\n\nEngineSelectionSystem\n\nEngineSelectionSystem\n\nEngineSelectionSystem\n\nEngineSelectionSystem\n\nEngineSelectionSystem\n\nEngineSelectionSystem\n\nEngineSelectionSystem\n\nEngineSelectionSystem\n\nEngineSelectionSystem\n\nEngineSelectionSystem\n\nEngineSelectionSystem\n\nEngineSelectionSystem\n\nEngineSelectionSystem\n\nEngineSelectionSystem\n\nEngineSelectionSystem\n\nEngineSelectionSystem\n\nEngineSelectionSystem\n\nEngineSelectionSystem\n\nEngineSelectionSystem\n\nEngineSelectionSystem\n",
    "\n\n```\nSystem: VehicleQualityCheck\n\nPackage: VehicleQualityCheck\n\nPackage: VehicleQualityCheck.VehicleQualityCheck\n\nPackage: VehicleQualityCheck.VehicleQualityCheck.VehicleQualityCheck\n\nPackage: VehicleQualityCheck.VehicleQualityCheck.VehicleQualityCheck.VehicleQualityCheck\n\nPackage: VehicleQualityCheck.VehicleQualityCheck.VehicleQualityCheck.VehicleQualityCheck.VehicleQualityCheck\n\nPackage: VehicleQualityCheck.VehicleQualityCheck.VehicleQualityCheck.VehicleQualityCheck.VehicleQualityCheck.VehicleQualityCheck\n\nPackage: VehicleQualityCheck.VehicleQualityCheck.VehicleQualityCheck.VehicleQualityCheck.VehicleQualityCheck.VehicleQualityCheck.VehicleQualityCheck\n\nPackage: VehicleQualityCheck.VehicleQualityCheck.VehicleQualityCheck.VehicleQualityCheck.VehicleQualityCheck.VehicleQualityCheck.VehicleQualityCheck.VehicleQualityCheck\n\nPackage: VehicleQualityCheck.VehicleQualityCheck.VehicleQualityCheck.VehicleQualityCheck.VehicleQualityCheck.VehicleQualityCheck.VehicleQualityCheck.VehicleQualityCheck.VehicleQualityCheck\n\nPackage: VehicleQualityCheck.VehicleQualityCheck.VehicleQualityCheck.VehicleQualityCheck.VehicleQualityCheck.VehicleQualityCheck.VehicleQualityCheck.VehicleQualityCheck.VehicleQualityCheck.",
    "\n\n––––––––––––––––––––––––––––––––––\n\nThe system is designed to verify the mass of vehicles to ensure that the actual mass of each vehicle does not exceed 2,500 kilograms. Under this system, every vehicle to be inspected must undergo a mass inspection process to check whether its mass complies with the specified upper limit. The system consists of vehicles, weighing equipment, and a mass verification unit. It measures the current actual mass of the vehicle using the weighing equipment and processes and evaluates the measured data. If the inspected vehicle's mass is less than or equal to 2,500 kilograms, it is deemed qualified; if it exceeds this value, it is deemed unqualified. The entire mass verification process is carried out independently for each vehicle to ensure that all vehicles involved in verification comply with the relevant standards and regulatory requirements.\n\n––––––––––––––––––––––––––––––––––\n\nThe system is designed to verify the mass of vehicles to ensure that the actual mass of each vehicle does not exceed 2,500 kilograms. Under this system, every vehicle to be inspected must undergo a mass inspection process to check whether its mass complies with the specified upper",
    "\n\nSystem:\n\n– System:\n\n– Name:\n\n– Description:\n\n– System:\n\n– Name:\n\n– Description:\n\n– System:\n\n– Name:\n\n– Description:\n\n– System:\n\n– Name:\n\n– Description:\n\n– System:\n\n– Name:\n\n– Description:\n\n– System:\n\n– Name:\n\n– Description:\n\n– System:\n\n– Name:\n\n– Description:\n\n– System:\n\n– Name:\n\n– Description:\n\n– System:\n\n– Name:\n\n– Description:\n\n– System:\n\n– Name:\n\n– Description:\n\n– System:\n\n– Name:\n\n– Description:\n\n– System:\n\n– Name:\n\n– Description:\n\n– System:\n\n– Name:\n\n– Description:\n\n– System:\n\n– Name:\n\n– Description:\n\n– System:\n\n– Name:\n\n– Description:\n\n– System:\n\n– Name:\n\n– Description:\n\n– System:\n\n– Name:\n\n",
    "\n\n```\nSystem: TransportationSystem\n\tPart: Vehicle\n\t\tProperty: Vehicle.color\n\t\tProperty: Vehicle.model\n\t\tProperty: Vehicle.year\n\t\tProperty: Vehicle.seats\n\t\tProperty: Vehicle.fuel\n\t\tProperty: Vehicle.fuelCapacity\n\t\tProperty: Vehicle.fuelEfficiency\n\t\tProperty: Vehicle.fuelConsumption\n\t\tProperty: Vehicle.fuelConsumptionRate\n\t\tProperty: Vehicle.fuelConsumptionUnit\n\t\tProperty: Vehicle.fuelConsumptionUnit\n\t\tProperty: Vehicle.fuelConsumptionUnit\n\t\tProperty: Vehicle.fuelConsumptionUnit\n\t\tProperty: Vehicle.fuelConsumptionUnit\n\t\tProperty: Vehicle.fuelConsumptionUnit\n\t\tProperty: Vehicle.fuelConsumptionUnit\n\t\tProperty: Vehicle.fuelConsumptionUnit\n\t\tProperty: Vehicle.fuelConsumptionUnit\n\t\tProperty: Vehicle.fuelConsumptionUnit\n\t\tProperty: Vehicle.fuelConsumptionUnit\n\t\tProperty: Vehicle.fuelConsumptionUnit\n\t\tProperty: Vehicle.fuelConsumptionUnit\n\t\tProperty: Vehicle.fuelConsumptionUnit\n\t\tProperty: Vehicle.fuelConsumptionUnit\n\t\tProperty: Vehicle.fuelConsumptionUnit\n\t\tProperty: Vehicle.fuelConsumptionUnit\n\t\tProperty: Vehicle.fuelConsumptionUnit\n\t\tProperty: Vehicle.fuelConsumptionUnit\n\t\t",
    "\n\n––––––––––––––––––––––––––––––––––\n\n## 2. \nYou are a software engineer.\n\nTask:\nGiven the following natural‑language requirements, create a UML class diagram.  \nYour output must conform to the BNF grammar below (subset of UML).  \nReturn only valid UML code, no explanations or commentary.\n\n––––– UML BNF (subset) –––––\n\n––––––––––––––––––––––––––––––––––\n\nInput Requirement:\nA system is required to manage the inventory of a company’s products. The system should be able to store the following information about each product: product name, product description, product price, product quantity, product category, product supplier, product manufacturer, product model, product serial number, product warranty, product warranty duration, product warranty type, product warranty start date, product warranty end date, product warranty status, product warranty notes, product warranty history, product warranty history notes, product warranty history start date, product warranty history end date, product warranty history status, product warranty history notes, product warranty history notes, product warranty history start date, product warranty history end date, product warranty history status, product warranty history notes, product warranty history notes, product warranty history",
    "\n\n```\nSystem: Engine\n\tEngine:\n\t\tEngine:\n\t\t\tEngine:\n\t\t\t\tEngine:\n\t\t\t\t\tEngine:\n\t\t\t\t\t\tEngine:\n\t\t\t\t\t\t\tEngine:\n\t\t\t\t\t\t\t\tEngine:\n\t\t\t\t\t\t\t\t\tEngine:\n\t\t\t\t\t\t\t\t\t\tEngine:\n\t\t\t\t\t\t\t\t\t\t\tEngine:\n\t\t\t\t\t\t\t\t\t\t\t\tEngine:\n\t\t\t\t\t\t\t\t\t\t\t\t\tEngine:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tEngine:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tEngine:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tEngine:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tEngine:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tEngine:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tEngine:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tEngine:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tEngine:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tEngine:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tEngine:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tEngine:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tEngine:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tEngine:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tEngine:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tEngine:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tEngine:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tEngine:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tEngine:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tEngine:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tEngine:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tEngine:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tEngine:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tEngine:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tEngine:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tEngine:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tEngine:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tEngine:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tEngine:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tEngine:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tEngine:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tEngine:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tEngine:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tEngine:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tEngine:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tEngine:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tEngine:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t",
    "\nThe system model should be a SysML v2 textual model. The model should contain the following elements:\n\n- A package named “Automotive”\n- A class named “Vehicle”\n- A class named “Engine”\n- A class named “Transmission”\n- A class named “Cylinder”\n- A class named “EngineType”\n- A class named “TransmissionType”\n- A class named “CylinderType”\n- A class named “EngineSpec”\n- A class named “TransmissionSpec”\n- A class named “CylinderSpec”\n- A class named “EngineSpecType”\n- A class named “TransmissionSpecType”\n- A class named “CylinderSpecType”\n- A class named “EngineSpecValue”\n- A class named “TransmissionSpecValue”\n- A class named “CylinderSpecValue”\n- A class named “EngineSpecValueType”\n- A class named “TransmissionSpecValueType”\n- A class named “CylinderSpecValueType”\n- A class named “EngineSpecValueRange”\n- A class named “TransmissionSpecValueRange”\n- A class named “CylinderSpecValueRange”",
    "\n\nSystem Assembly\n\nComputer Subsystem\n\nStorage Subsystem\n\nSoftware Design\n\nMessage Format\n\nData Format\n\nSoftware\n\nHardware\n\nProcess\n\nInformation Storage\n\nTransmission\n\nProcessing\n\nInformation Storage\n\nTransmission\n\nProcessing\n\nInformation Storage\n\nTransmission\n\nProcessing\n\nInformation Storage\n\nTransmission\n\nProcessing\n\nInformation Storage\n\nTransmission\n\nProcessing\n\nInformation Storage\n\nTransmission\n\nProcessing\n\nInformation Storage\n\nTransmission\n\nProcessing\n\nInformation Storage\n\nTransmission\n\nProcessing\n\nInformation Storage\n\nTransmission\n\nProcessing\n\nInformation Storage\n\nTransmission\n\nProcessing\n\nInformation Storage\n\nTransmission\n\nProcessing\n\nInformation Storage\n\nTransmission\n\nProcessing\n\nInformation Storage\n\nTransmission\n\nProcessing\n\nInformation Storage\n\nTransmission\n\nProcessing\n\nInformation Storage\n\nTransmission\n\nProcessing\n\nInformation Storage\n\nTransmission\n\nProcessing\n\nInformation Storage\n\nTransmission\n\nProcessing\n\nInformation Storage\n\nTransmission\n\nProcessing\n\nInformation Storage\n\nTransmission\n\nProcessing\n\nInformation Storage\n\nTransmission\n\nProcessing\n",
    "\n\n```\nSystem:\n\tname: Powertrain System\n\tdescription: This system is designed to achieve efficient allocation and management of the powertrain system. The powertrain system consists of a logical layer and a physical layer. In the logical layer, logical components are required to provide power and generate torque, among which the torque generator is responsible for converting power into torque. In the physical layer, there must be corresponding physical components to integrate these functions—for example, the power unit should be capable of both power output and torque generation. The system needs to ensure that the torque generator in the logical layer can be effectively mapped to the corresponding power unit (such as an engine) in the physical layer. Through this mapping relationship, all functional requirements can be accurately realized in the physical hardware, thus ensuring that the vehicle or equipment possesses power transmission and torque output capabilities, and meets the user's core demands for power performance.\n\nPackage:\n\tname: Powertrain System\n\tdescription: This system is designed to achieve efficient allocation and management of the powertrain system. The powertrain system consists of a logical layer and a physical layer. In the logical layer, logical components are required to provide power and generate tor",
    "\n\n```\nSystem:\n  Name: \"Power Transmission System\"\n  Capability:\n    Name: \"Power and Torque\"\n    Action:\n      Name: \"Generating Torque\"\n      Action:\n        Name: \"Engine\"\n```\n\n––––––––––––––––––––––––––––––––––\n\nInput Requirement:\nThe system requires the power transmission system to provide power and generate torque. In the logical model, the system possesses the capability to deliver power and generate torque, which is specifically realized through the action of \"generating torque\" by the torque generator component, enabling the transfer and conversion of power. In the physical model, the powertrain includes the engine as a component, and the engine actually performs the function of generating torque. Ultimately, the model specifies that the logical-layer torque generator is to be allocated to the physical powertrain component, with the specific operation of generating torque further allocated to the engine within the powertrain. The system as a whole must ensure, through the above division and allocation, effective generation and management of power and torque to meet the practical requirements for power output during vehicle operation.\n\nOutput System Model:\n\n```\nSystem:\n  Name: \"Power Transmission System\"\n  Cap",
    "\nThe system model should be a SysML v2 textual model that conforms to the SysML v2 BNF grammar. The model should include the following elements:\n\n– A package that contains the system model.\n– A subsystem that represents the vehicle.\n– A subsystem that represents the interior assembly.\n– A subsystem that represents the body assembly.\n– A subsystem that represents the seat belts.\n– A subsystem that represents the front seats.\n– A subsystem that represents the driver airbag.\n– A subsystem that represents the alarm system.\n– A subsystem that represents the body shell.\n– A subsystem that represents the bumpers.\n– A subsystem that represents the keyless entry device.\n– A subsystem that represents the seat belt configuration.\n– A subsystem that represents the front seat configuration.\n– A subsystem that represents the driver airbag configuration.\n– A subsystem that represents the alarm system configuration.\n– A subsystem that represents the body shell configuration.\n– A subsystem that represents the bumper configuration.\n– A subsystem that represents the keyless entry device configuration.\n– A subsystem that represents the seat belt safety feature.\n– A subsystem that represents the front seat safety feature.",
    "\nThe system shall be capable of performing automated simulation and analysis of vehicle dynamic behavior. Users should be able to input the vehicle’s initial velocity, initial position, acceleration at a specific moment, and the time step. Through integration with the ModelCenter analysis tool, the system shall automatically calculate and output the vehicle’s velocity and position after the specified time step based on the given physical model. The system must ensure accurate data transfer and reliable output of simulation results, enabling users to conveniently obtain key dynamic parameters to support vehicle performance analysis and design optimization.\n\n––––––––––––––––––––––––––––––––––\n\nInput Requirement:\nThe system shall be capable of performing automated simulation and analysis of vehicle dynamic behavior. Users should be able to input the vehicle’s initial velocity, initial position, acceleration at a specific moment, and the time step. Through integration with the ModelCenter analysis tool, the system shall automatically calculate and output the vehicle’s velocity and position after the specified time step based on the given physical model. The system must ensure accurate data transfer and reliable output of simulation results, enabling users to conveniently obtain key dynamic parameters to support vehicle performance analysis and design optimization.\n\nOutput System Model:\nThe system shall be capable of performing automated simulation and analysis of vehicle dynamic behavior",
    "\n\n– Safety Features\n\n– Mandatory Safety Features\n\n– Safety-Relevant Components\n\n– Mandatory Safety-Relevant Components\n\n– Safety-Related Components\n\n– Mandatory Safety-Related Components\n\n– Safety-Related Components\n\n– Mandatory Safety-Related Components\n\n– Safety-Related Components\n\n– Mandatory Safety-Related Components\n\n– Safety-Related Components\n\n– Mandatory Safety-Related Components\n\n– Safety-Related Components\n\n– Mandatory Safety-Related Components\n\n– Safety-Related Components\n\n– Mandatory Safety-Related Components\n\n– Safety-Related Components\n\n– Mandatory Safety-Related Components\n\n– Safety-Related Components\n\n– Mandatory Safety-Related Components\n\n– Safety-Related Components\n\n– Mandatory Safety-Related Components\n\n– Safety-Related Components\n\n– Mandatory Safety-Related Components\n\n– Safety-Related Components\n\n– Mandatory Safety-Related Components\n\n– Safety-Related Components\n\n– Mandatory Safety-Related Components\n\n– Safety-Related Components\n\n– Mandatory Safety-Related Components\n\n–",
    "\n\n```\nVehicleSafetyComplianceSystem\n\tVehicleInterior\n\t\tSeatBelt\n\t\t\tmandatory: true\n\t\tSeatBelt\n\t\t\tmandatory: true\n\tVehicleBody\n\t\tBumper\n\t\t\tmandatory: true\n\tChassis\n\t\tAntiLockBrakingSystem\n\t\t\tmandatory: false\n\t\tTire\n\t\t\tmandatory: true\n\t\tTire\n\t\t\tmandatory: true\n\t\tTire\n\t\t\tmandatory: true\n\t\tTire\n\t\t\tmandatory: true\n\tKeylessEntrySystem\n\t\tmandatory: false\n```\n\n––––––––––––––––––––––––––––––––––\n\n## Solution\n\n```\nVehicleSafetyComplianceSystem\n\tVehicleInterior\n\t\tSeatBelt\n\t\t\tmandatory: true\n\t\tSeatBelt\n\t\t\tmandatory: true\n\tVehicleBody\n\t\tBumper\n\t\t\tmandatory: true\n\tChassis\n\t\tAntiLockBrakingSystem\n\t\t\tmandatory: false\n\t\tTire\n\t\t\tmandatory: true\n\t\tTire\n\t\t\tmandatory: true\n\t\tTire\n\t\t\tmandatory: true\n\t\tTire\n\t\t\tmandatory: true\n\tKeylessEntrySystem\n\t\tmandatory: false\n```\n\n## Explanation\n\nThe solution is a SysML v2 textual model.\n\nThe model is structured",
    "\n\nSystem:\n\tName: Risk Management System\n\tDescription: This system is designed for modeling and managing risks and failures. It is capable of identifying and describing various possible situations, the causes leading to their occurrence, and the potential failures that may result. The system should be able to record the probability of each cause and the severity level of each failure. By establishing causal relationships, it analyzes the sequence and impact mechanisms among different situations. In addition, the system should support comprehensive modeling of different risk scenarios, enabling users to evaluate and manage potential risks and failures in an all-round manner. This provides a basis for risk control and decision-making.\n\nPackage:\n\tName: Risk Management System\n\tDescription: This system is designed for modeling and managing risks and failures. It is capable of identifying and describing various possible situations, the causes leading to their occurrence, and the potential failures that may result. The system should be able to record the probability of each cause and the severity level of each failure. By establishing causal relationships, it analyzes the sequence and impact mechanisms among different situations. In addition, the system should support comprehensive modeling of different risk scenarios, enabling users to evaluate and manage potential risks and",
    "\n\nSystem:\n\tName: System\n\tDescription: This system is designed for systematic risk metadata modeling and management across various scenarios, causes, and failures. Users can identify and describe different scenarios that may occur within the system. For each scenario, the specific causes and their probabilities of occurrence can be detailed, and possible failure types along with their severity levels can be associated. Furthermore, the system supports the description and tracking of causal relationships between scenarios, facilitating the understanding and analysis of risk propagation chains. On this basis, users can also combine a set of interrelated scenarios, causes, and failures to form complete risk scenarios, supporting risk analysis and decision-making. The system metadata is compatible with standard modeling languages, making it easy to integrate into larger systems engineering environments and enhancing the systematic capabilities of risk identification, analysis, and management.\n\nScenario:\n\tName: Scenario\n\tDescription: This system is designed for systematic risk metadata modeling and management across various scenarios, causes, and failures. Users can identify and describe different scenarios that may occur within the system. For each scenario, the specific causes and their probabilities of occurrence can be detailed, and possible failure types along with their severity levels can be associated. Furthermore, the system supports",
    "\n\n– System:\n\n– System:\n\n– System:\n\n– System:\n\n– System:\n\n– System:\n\n– System:\n\n– System:\n\n– System:\n\n– System:\n\n– System:\n\n– System:\n\n– System:\n\n– System:\n\n– System:\n\n– System:\n\n– System:\n\n– System:\n\n– System:\n\n– System:\n\n– System:\n\n– System:\n\n– System:\n\n– System:\n\n– System:\n\n– System:\n\n– System:\n\n– System:\n\n– System:\n\n– System:\n\n– System:\n\n– System:\n\n– System:\n\n– System:\n\n– System:\n\n– System:\n\n– System:\n\n– System:\n\n– System:\n\n– System:\n\n– System:\n\n– System:\n\n– System:\n\n– System:\n\n– System:\n\n– System:\n\n– System:\n\n– System:\n\n– System:\n\n– System:\n\n– System:\n",
    "\nThe system must possess a clear capability for structural decomposition, namely, the ability to explicitly present a top-down hierarchical structure, dividing the system into multiple subsystems and components, and ensuring that the functions and capabilities of each level are fully covered. The interfaces between system components should be well defined, so that each component can be independently understood and analyzed while also collaborating effectively within the overall system. Furthermore, system engineers and parties involved in Independent Verification and Validation (IV&V) must be able to use this structural view to comprehend and verify the system’s integrity and modular design, thereby ensuring that the system's various functional and performance requirements are met.\n\n––––––––––––––––––––––––––––––––––\n\nInput Requirement:\nThe system must possess a clear capability for behavioral decomposition, namely, the ability to explicitly present a top-down hierarchical structure, dividing the system into multiple subsystems and components, and ensuring that the functions and capabilities of each level are fully covered. The interfaces between system components should be well defined, so that each component can be independently understood and analyzed while also collaborating effectively within the overall system. Furthermore, system engineers and parties involved in Independent Verification and Validation (IV&V) must be",
    "\nThe system model should be a textual representation of the system requirements, in the form of a SysML v2 model.\n\nThe model should be structured as follows:\n- The model should be composed of a single package, named “Automotive System”.\n- The package should contain a single subsystem, named “Automotive System”.\n- The subsystem should contain a single component, named “Automotive System”.\n- The component should contain a single port, named “Automotive System”.\n- The port should contain a single property, named “Automotive System”.\n- The property should contain a single value, named “Automotive System”.\n\nThe value should contain the following text:\n\nThe system requires the functional and safety aspects to be decomposed and modularly managed within the automotive system architecture design. The overall system must be composed of several subsystems and components, with each component assuming specific functional and/or safety responsibilities. The decomposition should be clearly defined top-down, starting from a designated root component. Each part of the system must have clearly defined interfaces, ensuring both independent comprehensibility and overall integration.\n\nSafety-related components within the system must be structurally marked with their safety attributes. Among",
    "\n\n```\npackage Automotive_Domain_Model\n\n// 1. 定义汽车 (Automobile) 作为核心组件\n// 2. 定义汽车 (Car) 作为汽车的别名，方便在不同应用场景中进行交流和使用\n// 3. 在模型中包含丰富的解释性注释，帮助开发人员和用户更好地理解每个元素的含义和应用上下文\n// 4. 模型还将相关的物理量（如“扭矩 (Torque)”）与汽车的特性进行关联，以确保标准化和一致的表达\n// 5. 整体设计强调清晰度和可扩展性，便于开发、集成和维护后续汽车相关的系统\n\n// 1. Define Automobile as a core component\n// 2. Define Car as an alias for automobile, to facilitate communication and use in various application scenarios\n// 3. In the model, include rich explanatory comments to help developers and users better understand the meaning and application context of each element.\n// 4. The model associates relevant physical",
    "\n\n––––––––––––––––––––––––––––––––––\n\n## 2. \nYou are a software engineer.\n\nTask:\nGiven the following natural‑language requirements, create a UML class diagram.  \nYour output must conform to the BNF grammar below (subset of UML).  \nReturn only valid UML code, no explanations or commentary.\n\n––––– UML BNF (subset) –––––\n\n––––––––––––––––––––––––––––––––––\n\nInput Requirement:\nThis system aims to establish a document management platform related to automobiles. It can manage and record information and documentation about automobiles, allowing users to enter, query, and archive various types of information using “Automobile” as the core object. The system also provides “Car” as an alias for “Automobile,” enabling different user groups to perform searches and operations flexibly according to their own habits. In addition, the system supports compatibility with standard physical quantity systems, enabling unified referencing and management of physical quantities such as torque (e.g., TorqueValue under the ISQ standard) to enhance the professionalism and accuracy of documentation. The system allows explanatory documents to be added for different objects and their aliases, ensuring that",
    "\n\n––––––––––––––––––––––––––––––––––\n\n––––––––––––––––––––––––––––––––––\n\n––––––––––––––––––––––––––––––––––\n\n––––––––––––––––––––––––––––––––––\n\n––––––––––––––––––––––––––––––––––\n\n––––––––––––––––––––––––––––––––––\n\n––––––––––––––––––––––––––––––––––\n\n––––––––––––––––––––––––––––––––––\n\n––––––––––––––––––––––––––––––––––\n\n––––––––––––––––––––––––––––––––––\n\n––––––––––––––––––––––––––––––––––\n\n––––––––––––––––––––––––––––––––––\n\n––––––––––––––––––––––––––––––––––\n\n––––––––––––––––––––––––––––––––––\n\n––––––––––––––––––––––––––––––––––\n\n––––––––––––––––––––––––––––––––––\n\n––––––––––––––––––––––––––––––––––\n\n––––––––––––––––––––––––––––––––––\n\n––––––––––––––––––––––––––––––––––\n\n––––––––––––––––––––––––––––––––––\n\n––––––––––––––––––––––––––––––––––\n\n––––––––––––––––––––––––––––––––––\n\n––––––––––––––––––––––––––––––––––\n\n––––––––––––––––––––––––––––––––––\n\n––––––––––––––––––––––––––––––––––\n\n––––––––––––––––––––––––––––––––––\n\n––––––––––––––––––––––––––––––––––\n\n––––––––––––––––––––––––––––––––––\n\n––––––––––––––––––––––––––––––––––\n\n––––––––––––––––––––––––––––––––––\n\n––––––––––––––––––––––––––––––––––\n\n––––––––––––––––––––––––––––––––––\n\n––––––––––––––––––––––––––––––––––\n\n––––––––––––––––––––––––––––––––––\n\n––––––––––––––––––––––––––––––––––\n\n––––––––––––––––––––––––––––––––––\n\n––––––––––––––––",
    "\n\n```\nSystem: Vehicle\n\tPart: Engine\n\t\tPart: Cylinder\n\tPart: Vehicle\n\tPart: VehicleSize\n```\n\n```\nSystem: Vehicle\n\tPart: Engine\n\t\tPart: Cylinder\n\tPart: Vehicle\n\t\tPart: VehicleSize\n```\n\n```\nSystem: Vehicle\n\tPart: Engine\n\t\tPart: Cylinder\n\tPart: Vehicle\n\t\tPart: VehicleSize\n```\n\n```\nSystem: Vehicle\n\tPart: Engine\n\t\tPart: Cylinder\n\tPart: Vehicle\n\t\tPart: VehicleSize\n```\n\n```\nSystem: Vehicle\n\tPart: Engine\n\t\tPart: Cylinder\n\tPart: Vehicle\n\t\tPart: VehicleSize\n```\n\n```\nSystem: Vehicle\n\tPart: Engine\n\t\tPart: Cylinder\n\tPart: Vehicle\n\t\tPart: VehicleSize\n```\n\n```\nSystem: Vehicle\n\tPart: Engine\n\t\tPart: Cylinder\n\tPart: Vehicle\n\t\tPart: VehicleSize\n```\n\n```\nSystem: Vehicle\n\tPart: Engine\n\t\tPart: Cylinder\n\tPart: Vehicle\n\t\tPart: VehicleSize\n```\n\n```\nSystem: Vehicle\n",
    "\n\n```\nSystem: FuelManagementSystem\n\tPart: FuelTank\n\tPart: Engine\n\tPart: FuelInterface\n\tPart: FuelInterface\n\tPart: FuelInterface\n\tPart: FuelInterface\n\tPart: FuelInterface\n\tPart: FuelInterface\n\tPart: FuelInterface\n\tPart: FuelInterface\n\tPart: FuelInterface\n\tPart: FuelInterface\n\tPart: FuelInterface\n\tPart: FuelInterface\n\tPart: FuelInterface\n\tPart: FuelInterface\n\tPart: FuelInterface\n\tPart: FuelInterface\n\tPart: FuelInterface\n\tPart: FuelInterface\n\tPart: FuelInterface\n\tPart: FuelInterface\n\tPart: FuelInterface\n\tPart: FuelInterface\n\tPart: FuelInterface\n\tPart: FuelInterface\n\tPart: FuelInterface\n\tPart: FuelInterface\n\tPart: FuelInterface\n\tPart: FuelInterface\n\tPart: FuelInterface\n\tPart: FuelInterface\n\tPart: FuelInterface\n\tPart: FuelInterface\n\tPart: FuelInterface\n\tPart",
    "\n\n– Vehicle\n\n– Front Axle\n\n– Rear Axle\n\n– Wheel\n\n– Steering Angle\n\n– Mass\n\n– Name\n\n– Axle\n\n– Wheel\n\n– Wheel\n\n– Wheel\n\n– Wheel\n\n– Wheel\n\n– Wheel\n\n– Wheel\n\n– Wheel\n\n– Wheel\n\n– Wheel\n\n– Wheel\n\n– Wheel\n\n– Wheel\n\n– Wheel\n\n– Wheel\n\n– Wheel\n\n– Wheel\n\n– Wheel\n\n– Wheel\n\n– Wheel\n\n– Wheel\n\n– Wheel\n\n– Wheel\n\n– Wheel\n\n– Wheel\n\n– Wheel\n\n– Wheel\n\n– Wheel\n\n– Wheel\n\n– Wheel\n\n– Wheel\n\n– Wheel\n\n– Wheel\n\n– Wheel\n\n– Wheel\n\n– Wheel\n\n– Wheel\n\n– Wheel\n\n– Wheel\n\n– Wheel\n\n– Wheel\n\n– Wheel\n\n– Wheel"
]