[
    "package 'VehicleSystem' {\n\tattribute def VehicleMass;\n\tattribute def VehicleStatus;\n\tattribute def GearSetting;\n\tattribute def AcceleratorPedalPosition;\n\tattribute def Engine;\n\tattribute def Driver;\n\t\n\tclass 'Vehicle' {\n\t\tattribute mass: VehicleMass;\n\t\tattribute status: VehicleStatus;\n\t\tattribute gear: GearSetting;\n\t\tattribute accelerator: AcceleratorPedalPosition;\n\t\tport enginePort: Engine;\n\t\tport driverPort: Driver;\n\t}\n\t\n\tclass 'Engine' {\n\t\tattribute def engine;\n\t}\n\t\n\tclass 'Driver' {\n\t\tattribute def driver;\n\t}\n\t\n\tpackage 'VehicleManagement' {\n\t\tpart context {\n\t\t\tpart vehicle: Vehicle;\n\t\t\tpart engine: Engine;\n\t\t\tpart driver: Driver",
    "package 'Vehicle' {\n\tattribute def Personnel;\n\tattribute def Engine;\n\tattribute def ManualVehicle;\n\tattribute def PoweredVehicle;\n\tattribute def ManualPoweredVehicle;\n\tport def PersonnelPort {\n\t\tout personnel: Personnel;\n\t}\n\tport def EnginePort {\n\t\tout engine: Engine;\n\t}\n\tport def ManualVehiclePort {\n\t\tout manualVehicle: ManualVehicle;\n\t}\n\tport def PoweredVehiclePort {\n\t\tout poweredVehicle: PoweredVehicle;\n\t}\n\tport def ManualPoweredVehiclePort {\n\t\tout manualPoweredVehicle: ManualPoweredVehicle;\n\t}\n\tpart context {\n\t\tpart personnel",
    "package 'Vehicle' {\n\tclass def VehicleComponent;\n\tclass def Engine extends VehicleComponent;\n\tclass def Transmission extends VehicleComponent;\n\tclass def Wheel extends VehicleComponent;\n\tclass def Vehicle {\n\t\tattribute def engine: Engine;\n\t\tattribute def transmission: Transmission;\n\t\tattribute def wheels: Set(Wheel);\n\t\tconstraint wheels.size = 4;\n\t}\n\tblock def VehicleStructure {\n\t\tpart engine: Engine;\n\t\tpart transmission: Transmission;\n\t\tpart wheels: Set(Wheel);\n\t\tconstraint wheels.size = 4;\n\t\tassemble Vehicle {\n\t\t\tpart engine;\n\t\t\tpart transmission;\n\t\t\tpart wheels;\n\t\t}\n\t}\n}",
    "package 'VehicleClassification' {\n\tattribute def SmallEngine;\n\tattribute def LargeEngine;\n\tattribute def Vehicle;\n\tport def SmallEnginePort {\n\t\tout smallEngine: SmallEngine;\n\t}\n\tport def LargeEnginePort {\n\t\tout largeEngine: LargeEngine;\n\t}\n\tport def VehiclePort {\n\t\tout vehicle: Vehicle;\n\t}\n\tpart context {\n\t\tpart smallVehicle {\n\t\t\tport vehiclePort: VehiclePort;\n\t\t\tport smallEnginePort: SmallEnginePort;\n\t\t\tperform classifyVehicle.assignSmallEngine {\n\t\t\t\tout vehicle = vehiclePort.vehicle;\n\t\t\t\tout smallEngine = smallEnginePort.",
    "package 'TrafficSignalSystem' {\n\tattribute def ColorState;\n\tattribute def GreenState;\n\tport def ColorStatePort {\n\t\tout colorState: ColorState;\n\t}\n\tport def GreenStatePort {\n\t\tout greenState: GreenState;\n\t}\n\tpart context {\n\t\tpart trafficSignal {\n\t\t\tport colorStatePort: ColorStatePort;\n\t\t\tperform manageTraffic.indicateColorState {\n\t\t\t\tout colorState = colorStatePort.colorState;\n\t\t\t}\n\t\t}\n\t\tpart specificTrafficSignal {\n\t\t\tport greenStatePort: GreenStatePort;\n\t\t\tperform manageTraffic.indicateGreenState {\n\t\t\t\tout greenState = greenStatePort.greenState;\n\t\t\t}\n\t\t}\n\t}\n\taction manageTraffic {\n\t\taction indicateColorState { out colorState: ColorState; }\n\t\taction indicateGreenState { out greenState: GreenState; }\n\t}\n}",
    "package 'InformationClassification' {\n\tattribute def Unclassified;\n\tattribute def Confidential;\n\tattribute def Secret;\n\tattribute def A;\n\tattribute def B;\n\tattribute def C;\n\tattribute def D;\n\tattribute def F;\n\tattribute def Color;\n\tattribute def Code;\n\tattribute def Grade;\n\tattribute def Points;\n\tport def UnclassifiedPort {\n\t\tout unclassified: Unclassified;\n\t}\n\tport def ConfidentialPort {\n\t\tout confidential: Confidential;\n\t",
    "package 'VehicleEngine' {\n\tattribute def Cylinder;\n\tattribute def Engine;\n\tattribute def SmallVehicle;\n\tattribute def LargeVehicle;\n\tport def CylinderPort {\n\t\tout cylinder: Cylinder;\n\t}\n\tport def EnginePort {\n\t\tout engine: Engine;\n\t}\n\tport def SmallVehiclePort {\n\t\tout smallVehicle: SmallVehicle;\n\t}\n\tport def LargeVehiclePort {\n\t\tout largeVehicle: LargeVehicle;\n\t}\n\tpart context {\n\t\tpart smallVehicle {\n\t\t\tport enginePort: EnginePort;\n\t\t\tperform configureEngine.createEngine {\n\t\t\t\tout engine = enginePort.engine;\n\t\t\t}\n\t\t}\n\t\tpart largeVehicle {\n\t\t\tport enginePort: EnginePort",
    "package 'VehicleModeling' {\n\tattribute def DriverInfo;\n\tattribute def FuelTank;\n\tattribute def FuelType;\n\tattribute def VehicleQuality;\n\tattribute def PersonnelInfo;\n\tattribute def FuelInfo;\n\t\n\tport def DriverInfoPort {\n\t\tout driverInfo: DriverInfo;\n\t}\n\tport def FuelTankPort {\n\t\tout fuelTank: FuelTank;\n\t}\n\tport def FuelTypePort {\n\t\tout fuelType: FuelType;\n\t}\n\tport def VehicleQualityPort {\n\t\tout vehicleQuality: VehicleQuality;\n\t}\n\tport def PersonnelInfoPort {\n\t\tout personnelInfo: PersonnelInfo;\n\t}\n\tport def FuelInfoPort {\n\t\tout fuelInfo: FuelInfo;\n\t}\n\t\n\tpart context {\n\t\tpart vehicle {\n\t\t\tport driverInfo",
    "package 'WheelAssembly' {\n\tattribute def WheelBearingUnit;\n\tattribute def Tire;\n\tattribute def Bead;\n\tattribute def Hub;\n\tattribute def Rim;\n\tattribute def BoltMountingHole;\n\tattribute def ThreadedHole;\n\tattribute def BoltConnection;\n\tport def WheelBearingUnitPort {\n\t\tout wheelBearingUnit: WheelBearingUnit;\n\t}\n\tport def TirePort {\n\t\tout tire: Tire;\n\t}\n\tport def BeadPort {\n\t\tout bead: Bead;\n\t}\n\tport def HubPort {\n\t\tout hub: Hub;\n",
    "package 'FuelManagementSystem' {\n\tattribute def FuelFlow;\n\tattribute def Temperature;\n\tport def FuelFlowPort {\n\t\tout fuelFlow : FuelFlow;\n\t}\n\tport def TemperaturePort {\n\t\tout temperature : Temperature;\n\t}\n\tpart context {\n\t\tpart fuelTank {\n\t\t\tport fuelFlowPort: FuelFlowPort;\n\t\t\tperform manageFuelFlow.supplyFuel {\n\t\t\t\tout fuelFlow = fuelFlowPort.fuelFlow;\n\t\t\t}\n\t\t\tperform manageFuelFlow.receiveExcessFuel {\n\t\t\t\tin fuelFlow = fuelFlowPort.fuelFlow;\n\t\t\t}\n\t\t}\n\t\tpart engine {\n\t\t\tport fuelFlowPort: ~FuelFlowPort;\n\t\t\tperform manageFuel",
    "package 'VehicleConfiguration' {\n\tattribute def Mass;\n\tattribute def Axle;\n\tattribute def Tire;\n\tattribute def Vehicle;\n\tattribute def FrontAxle;\n\tattribute def RearAxle;\n\tattribute def SteeringAngle;\n\tclass def Axle {\n\t\tattribute def mass;\n\t\tattribute def tires;\n\t}\n\tclass def Tire {\n\t\tattribute def mass;\n\t}",
    "package 'CouplingSystem' {\n\tattribute def Vehicle;\n\tattribute def Trailer;\n\tattribute def Hitch;\n\tattribute def CouplingMechanism;\n\tport def VehiclePort {\n\t\tout vehicle: Vehicle;\n\t}\n\tport def TrailerPort {\n\t\tout trailer: Trailer;\n\t}\n\tport def HitchPort {\n\t\tout hitch: Hitch;\n\t}\n\tport def CouplingMechanismPort {\n\t\tout couplingMechanism: CouplingMechanism;\n\t}\n",
    "package 'VehiclePowerTransmission' {\n\tattribute def FuelCmd;\n\tattribute def Power;\n\tattribute def ClutchCmd;\n\tattribute def Drivesh",
    "package 'IntegratedSystem' {\n\tattribute def Signal;\n\tport def SignalPort {\n\t\tout signal: Signal;\n\t}\n\tpart context",
    "package 'AutomotivePowertrain' {\n\tattribute def FuelCmd;\n\tattribute def EngineTorque;\n\tattribute def DrivingForce;\n\tport def FuelCmdPort {\n\t\tout onFuelCmd : FuelCmd;\n\t}\n\tport def EngineTorquePort {\n\t\tout engineTorque : EngineTorque;\n\t}\n\tport def DrivingForcePort {\n\t\tout drivingForce : DrivingForce;\n\t}\n\tpart context {\n\t\tpart user {\n\t\t\tport fuelCmdPort: FuelCmdPort;\n\t\t\tperform controlPowertrain.send",
    "package 'AutomotivePowertrain' {\n\tattribute def FuelControlCmd;\n\tattribute def Torque;\n\tattribute def StallSignal;\n\tport def FuelControlCmdPort {\n\t\tout onFuelControlCmd : FuelControlCmd;\n\t}\n\tport def StallSignalPort {\n\t\tout onStallSignal : StallSignal;\n\t}\n\tport def TorquePort {\n\t\tout torque: Torque;\n\t}\n\tpart context {\n\t\tpart user {\n\t\t\tport fuelControlCmdPort: FuelControlCmdPort;\n\t\t\tperform controlPowertrain.sendFuelControlCmd {\n\t\t\t\tout onFuelControlCmd = fuelControlCmdPort.",
    "package 'VehiclePowertrain' {\n\tattribute def EngineStartSignal;\n\tattribute def FuelCommand;\n\tattribute def EngineOutputTorque;\n\tattribute def TransmissionTorque;\n\tattribute def WheelTorque;\n\tport def EngineStartSignalPort {\n\t\tout engineStartSignal: EngineStartSignal;\n\t}\n\tport def FuelCommandPort {\n\t\tout fuelCommand: FuelCommand;\n\t}\n\tport def EngineOutputTorquePort {\n\t\tout engineOutputTorque: EngineOutputTorque;\n\t}\n\tport def TransmissionTorquePort {\n\t\tout transmissionTorque: TransmissionTorque;\n\t}\n\tport def WheelTorquePort {\n\t\tout",
    "package 'PowerConnection' {\n\tattribute def ConnectionCmd;\n\tattribute def ConnectionStatus;\n\tport def ConnectionCmdPort {\n\t\tout connectionCmd : ConnectionCmd;\n\t}\n\tport def ConnectionStatusPort {\n\t\tout connectionStatus : ConnectionStatus;\n\t}\n\tpart context {\n\t\tpart user {\n\t\t\tport connectionCmdPort: ConnectionCmdPort;\n\t\t\tperform manageConnection.sendConnectionCmd {\n\t\t\t\tout connectionCmd = connectionCmdPort.connectionCmd;\n\t\t\t}\n\t\t}\n\t\tinterface userToPowerConnection connect user.connectionCmdPort to powerConnection.connectionCmdPort {\n\t\t\tref flow references manageConnection.connectionCmdFlow\n\t\t\t\tfrom source.connectionCmd to target.connectionCmd; \n\t\t}\n\t\tpart powerConnection {\n\t\t\tport connectionCmdPort: ~ConnectionCmd",
    "package 'VehicleTrailerConnection' {\n\tattribute def ConnectionStatus;\n\tattribute def Chassis;\n\tattribute def TowBall;\n\tattribute def Coupler;\n\tattribute def TrailerFrame;\n\tport def ChassisPort {\n\t\tout chassis: Chassis;\n\t}\n\tport def TowBallPort {\n\t\tout towBall: TowBall;\n\t}\n\tport def CouplerPort {\n\t\tout coupler: Coupler;\n\t}\n\tport def TrailerFramePort {\n\t\tout trailerFrame: TrailerFrame;\n\t}\n\tpart context {\n\t\t",
    "package 'VehicleTrailerSystem' {\n\tattribute def TowBall;\n\tattribute def Coupler;\n\tattribute def TrailerChassis;\n\tport def TowBallPort {\n\t\tout towBall: TowBall;\n\t}\n\tport def CouplerPort {\n\t\tout coupler: Coupler;\n\t}\n\tport def TrailerChassisPort {\n\t\tout trailerChassis: TrailerChassis;\n\t}\n\tpart context {\n\t\tpart vehicle {\n\t\t\tport towBallPort: TowBallPort;\n\t\t}\n\t\tpart trailer {\n\t\t\tport couplerPort: CouplerPort;\n\t\t\tport trailerChass",
    "package 'FuelSystem' {\n\tattribute def FuelSupply;\n\tattribute def FuelReturn;\n\tattribute def Temperature;\n\tport def FuelSupplyPort {\n\t\tout fuelSupply: FuelSupply;\n\t}\n\tport def FuelReturnPort {\n\t\tout fuelReturn: FuelReturn;\n\t}\n\tport def TemperaturePort {\n\t\tout temperature: Temperature;\n\t}\n\tpart context {\n\t\tpart fuelTank {\n\t\t\tport fuelSupplyPort: FuelSupplyPort;\n\t\t\tport fuelReturnPort: FuelReturnPort;\n\t\t\tperform fuelFlow.supplyFuel {\n\t\t\t\tout fuelSupply = fuelSupplyPort.fuelSupply;\n\t\t\t}\n\t\t\tperform fuel",
    "package 'FuelDeliverySystem' {\n\tattribute def Fuel;\n\tattribute def FuelLevel;\n\tattribute def MaxCapacity;\n\tport def FuelPumpPort {\n\t\tout fuel: Fuel;\n\t}\n\tport def VehicleFuelTankPort {\n\t\tin fuel: Fuel;\n\t\tout fuelLevel: FuelLevel;\n\t\tout maxCapacity: MaxCapacity;\n\t}\n\tpart context {\n\t\tpart storageTank {\n\t\t\tport fuelPumpPort: FuelPumpPort;\n\t\t\tperform manageFuel.outputFuel {\n\t\t\t\tout fuel = fuel",
    "package 'AutomobileAssembly' {\n\tattribute def VehicleAssembly;\n\tattribute def Gearbox;\n\tattribute def Engine;\n\tattribute def FinalVehicle;\n\tport def VehicleAssemblyPort {\n\t\tout vehicleAssembly: VehicleAssembly;\n\t}\n\tport def GearboxPort {\n\t\tout gearbox: Gearbox;\n\t}\n\tport def EnginePort {\n\t\tout engine: Engine;\n\t}\n\tport def FinalVehiclePort {\n\t\tout finalVehicle: FinalVehicle;\n\t}\n\tpart context",
    "package 'VehicleA' {\n\tattribute def Off;\n\tattribute def Starting;\n\tattribute def Running;\n\tattribute",
    "package 'VehicleSystem' {\n\tattribute def StartSignal;\n\tattribute def BrakePedal;\n\tattribute def Temperature;\n\tattribute def Status;\n\tattribute def MaintenanceInterval;\n\tattribute def Fuel;\n\tattribute def TemperatureThreshold;\n\tport def StartSignalPort {\n\t\tout startSignal : StartSignal;\n\t}\n\tport def BrakePedalPort {\n",
    "package 'VehicleSimulation' {\n\tattribute def Mass;\n\tattribute def Position;\n\tattribute def Velocity;\n\tattribute def Acceleration;\n\tattribute def Slope;\n\tattribute def Friction;\n\tattribute def State;\n\tattribute def Time;\n\tattribute def Snapshot;\n\tport def MassPort {\n\t\tout mass: Mass;\n\t}\n\tport def PositionPort {\n\t\tout position: Position;\n\t}\n\tport def VelocityPort {\n\t\tout velocity: Velocity;\n\t}\n\tport def AccelerationPort {\n\t\tout acceleration: Acceleration;\n\t}\n\tport def SlopePort {\n\t\tout slope: Slope;\n\t}\n\tport def FrictionPort {\n\t\tout",
    "package 'AutomotiveConfigurator' {\n\tattribute def SubsystemAConfig;\n\tattribute def SubsystemBConfig",
    "package 'ModularVehiclePlatform' {\n\tattribute def SubsystemA;\n\tattribute def SubsystemB;\n\tattribute def VehicleConfigA;\n\tattribute def VehicleConfigB;\n\tattribute def Component;\n\tport def SubsystemAPort {\n\t\tout subsystemA: SubsystemA;\n\t}",
    "package 'VehicleProductLine' {\n\tattribute def Engine;\n\tattribute def Transmission;\n\tattribute def Wheels;\n\tattribute def Configuration;\n\tport def EnginePort {\n\t\tout engine: Engine;\n\t}\n\tport def TransmissionPort {\n\t\tout transmission: Transmission;\n\t}\n\tport def WheelsPort {\n\t\tout wheels: Wheels;\n\t}\n\tport def ConfigurationPort {\n\t\tout configuration: Configuration;\n\t}\n\tpart context {\n\t\tpart user {\n\t\t\tport enginePort: EnginePort;\n\t\t\tport transmissionPort: Transmission",
    "package 'AutomobileSystem' {\n\tattribute def Mass;\n\tattribute def FuelStatus;\n\tattribute def PowerDelivery;\n\tattribute def Reliability;\n\tport def MassPort {\n\t\tout mass: Mass;\n\t}\n\tport def FuelStatusPort {\n\t\tout fuelStatus:",
    "package 'VehicleMassCompliance' {\n\tattribute def MeasuredMass;\n\tattribute def MaxPermissibleMass;\n\tattribute def ComplianceStatus;\n\tport def MeasuredMassPort {\n\t\tout measuredMass : MeasuredMass;\n\t}\n\tport def MaxPermissibleMassPort {\n\t\tout maxPermissibleMass : MaxPermissibleMass;\n\t}\n\tport def ComplianceStatusPort {\n\t\tout complianceStatus : ComplianceStatus;\n\t}\n\tpart context {\n\t\tpart testOperator {\n\t\t\tport measuredMassPort: MeasuredMassPort;\n\t\t\tperform measureMass {\n\t\t\t\tout measuredMass =",
    "package 'WaterSupplyNetwork' {\n\tattribute def HotWater;\n\tattribute def ColdWater;\n\tport def HotWaterPort {\n\t\tout hotWater: HotWater;\n\t}\n\tport def ColdWaterPort {\n\t\tout coldWater: ColdWater;\n\t}\n\tpart context {\n\t\tpart spigotBank {\n\t\t\tport hotWaterPort: HotWaterPort;\n\t\t\tport coldWaterPort: ColdWaterPort;\n\t\t}\n\t\tpart spigot {\n\t\t\tport hotWaterPort: ~HotWaterPort;\n\t\t\tport coldWaterPort: ~ColdWaterPort;\n\t\t}\n\t\tpart faucet {\n\t\t\t",
    "package 'VehicleQualityAnalysis' {\n\tattribute def QualityData;\n\tattribute def TotalMass;\n\tattribute def AnalysisRequirement;\n\tattribute def AnalysisUseCase;\n\tattribute def AnalysisTask;\n\tattribute def AnalysisPlan;\n\tport def QualityDataPort {\n\t\tin qualityData: QualityData;\n\t}\n\tport def TotalMassPort {\n\t\tout totalMass: TotalMass;\n\t}\n\tport def AnalysisRequirementPort {\n\t\tin analysisRequirement: AnalysisRequirement;\n\t}\n\tport def AnalysisUseCasePort {\n\t\tin analysisUseCase: AnalysisUseCase;\n\t}\n\tport def AnalysisTaskPort {\n\t\tout analysisTask: AnalysisTask;\n\t}\n\tport def AnalysisPlan",
    "package 'VehiclePowertrain' {\n\tattribute def EngineType;\n\tattribute def EngineStructure;\n\tattribute def Component;\n\tattribute def PerformanceIndicator;\n\tattribute def EvaluationModel;\n\tattribute def Recommendation;\n\tattribute def Explanation;\n\tport def EngineTypePort {\n\t\tout engineType : EngineType;\n\t}\n\tport def EngineStructurePort {\n\t\tout engineStructure : EngineStructure;\n\t}\n\tport def ComponentPort {\n\t\tout component : Component",
    "package 'FuelEconomy' {\n\tattribute def VehicleLoad;\n\tattribute def OperatingConditions;\n\tattribute def FuelConsumption;\n\tattribute def FuelEfficiency;\n\tport def VehicleLoadPort {\n\t\tout vehicleLoad : VehicleLoad;\n\t}\n\tport def OperatingConditionsPort {\n\t\tout operatingConditions : OperatingConditions;\n\t}\n\tport def FuelConsumptionPort {\n\t\tout fuelConsumption : FuelConsumption;\n\t}\n\tport def FuelEfficiencyPort {\n\t\tout fuelEfficiency : FuelEfficiency;\n\t}\n",
    "package 'VehicleMotionSimulation' {\n\tattribute def Mass;\n\tattribute def InitialPosition;\n\tattribute def InitialVelocity;\n\tattribute def PowerOutputData;\n\tattribute def TimeStep;\n\tattribute def Acceleration;\n\tattribute def VelocityVariation;\n\tattribute def Displacement;\n\tport def MassPort {\n\t\tout mass: Mass;\n\t}\n\tport def InitialPositionPort {\n\t\tout initialPosition: InitialPosition;\n\t}\n\tport def InitialVelocityPort {\n\t\tout initialVelocity: InitialVelocity;\n\t}\n\tport def PowerOutputDataPort {\n\t\tout powerOutputData: PowerOutputData;\n\t}\n\tport def TimeStepPort {\n\t\tout timeStep: TimeStep;\n\t}\n\tport def AccelerationPort {\n\t\tout",
    "package 'VehicleSystem' {\n\tattribute def Mass;\n\tattribute def SteeringAngle;\n\tattribute def FrontAxleAssembly;\n\tattribute def RearAxleAssembly;\n\tattribute def FrontWheel;\n\tattribute def RearWheel;\n\tattribute def Axle;\n\tclass def Vehicle {\n\t\tattribute mass: Mass;\n\t\tpart frontAxleAssembly: FrontAxleAssembly;\n\t\tpart rearAxleAssembly: RearAxleAssembly;\n\t}\n\tclass def AxleAssembly {\n\t\tattribute mass: Mass;\n\t\tattribute steeringAngle: SteeringAngle;\n\t\tpart ax",
    "package 'VehicleSafetyDisplay' {\n\tattribute def SafetyFeature;\n\tattribute def SecurityFeature;\n\tattribute def Component;\n\tport def SafetyFeaturePort {\n\t\tout safetyFeature: SafetyFeature;\n\t}\n\tport def SecurityFeaturePort {\n\t\tout securityFeature: SecurityFeature;\n\t}\n\tport def ComponentPort {\n\t\tout component: Component;\n\t}\n\tpart context {\n\t\tpart user {\n\t\t\tport safetyFeaturePort: SafetyFeaturePort;\n\t\t\tport securityFeaturePort: SecurityFeature",
    "package 'LayeredSystem' {\n\tattribute def X;\n\tattribute def Y;\n\tattribute def Z;\n\tport def XPort {\n\t\tout x: X;\n\t}\n\tport def YPort {\n\t\tout y: Y;\n\t}\n\tport def ZPort {\n\t\tout z: Z;\n\t}\n\tpart context {\n\t\tpart applicationLayer {\n\t\t\tport xPort: XPort;\n\t\t\tport yPort: YPort;\n\t\t\tperform serviceLayer.provideFunctionality {\n\t\t\t\tin x = xPort.x;\n\t\t\t\tin y = yPort.y;\n\t\t\t}\n\t\t}\n\t\tpart serviceLayer {\n\t\t\tport xPort: ~XPort;\n\t\t\tport yPort: ~YPort;\n\t\t\tport zPort: ZPort;\n\t\t\tperform dataLayer.retrieveAndStoreData {\n\t\t\t\tin x = xPort.",
    "package 'TorqueGenerator' {\n\tattribute def Torque;\n\tattribute def Engine;\n\tport def TorquePort {\n\t\tout torque: Torque;\n\t}\n\tport def EnginePort {\n\t\tout engine: Engine;\n\t}\n\tpart context {\n\t\tpart logicLayer {\n\t\t\tport torquePort: TorquePort;\n\t\t\tperform generateTorque {\n\t\t\t\tout torque = torquePort.torque;\n\t\t\t}\n\t\t}\n\t\tinterface logicToPhysical connect logicLayer.torquePort to physicalLayer.torquePort {\n\t\t\tref flow references transmitTorque\n\t\t\t\tfrom source.torque to target.torque; \n\t\t}\n\t\tpart physicalLayer {\n\t\t\tport torquePort: ~TorquePort;\n\t\t\tport enginePort: EnginePort;\n\t\t\tperform transmit",
    "package 'PowerSystem' {\n\tattribute def Power;\n\tattribute def Torque;\n\tport def PowerPort {\n\t\tout power: Power;\n\t}\n\tport def TorquePort {\n\t\tout torque: Torque;\n\t}\n\tpart context {\n\t\tpart torqueGenerator {\n\t\t\tperform generateTorque {\n\t\t\t\tout torque: Torque;\n\t\t\t}\n\t\t}\n\t\tpart powertrain {\n\t\t\tpart engine {\n\t\t\t\tperform executeTorque {\n\t\t\t\t\tin torque: Torque;\n\t\t\t\t\tout power: Power;\n\t\t\t\t}\n\t\t\t}\n\t\t\tconnect torqueGenerator.torquePort to engine.torquePort;\n\t\t}\n\t\tport powerPort: PowerPort;\n\t\tconnect powertrain.powerPort to powerPort;\n\t}\n\taction",
    "package 'VehicleSafetyAndAntiTheft' {\n\tattribute def SeatBelt;\n\tattribute def Bumper;\n\tattribute def DriverAirbag;\n\tattribute def AntiLockBrakingSystem;\n\tattribute def AlarmSystem;\n\tattribute def KeylessEntrySystem;\n\t\n\tport def SeatBeltPort {\n\t\tout seatBelt: SeatBelt;\n\t}\n\tport",
    "package 'FuelSupplyAndReturnManagement' {\n\tattribute def FuelFlow;\n\tattribute def FuelTemp;\n\tport def FuelFlowPort {\n\t\tout fuelFlow : FuelFlow;\n\t}\n\tport def FuelTempPort {\n\t\tout fuelTemp : FuelTemp;\n\t}\n\tpart context {\n\t\tpart fuelTankAssembly {\n\t\t\tport fuelFlowPort: FuelFlowPort;\n\t\t\tport fuelTempPort: FuelTempPort;\n\t\t\tperform manageFuelSupplyAndReturn {\n\t\t\t\tin fuelFlow = fuelFlowPort.fuelFlow;\n\t\t\t\tout fuelTemp = fuelTempPort.fuelTemp;\n\t\t\t}\n\t\t}\n\t\tpart vehicle {\n\t\t\t",
    "package 'VehicleSafetySecurity' {\n\tattribute def SeatBelt;\n\tattribute def Airbag;\n\tattribute def AntiTheftAlarm;\n\tattribute def Bumper;\n\tattribute def KeylessEntry;\n\tattribute def AntiLockBrakingSystem;\n\tattribute def Wheel;\n\tport def SeatBeltPort {\n\t\tout seatBelt: SeatBelt;\n\t}\n\tport def AirbagPort {\n\t\tout airbag: Airbag;\n\t}\n\tport def AntiThe",
    "package 'VehicleSafetyAndSecurity' {\n\tattribute def AlarmSystem;\n\tattribute def SeatBelt;\n\tattribute def FrontRowSeat;\n\tattribute def DriverAirbag;\n\tattribute def VehicleBody;\n\tattribute def Bumper;\n\tattribute def KeylessEntrySystem;\n\tport def AlarmSystemPort {\n\t\tout alarmSystem: AlarmSystem;\n\t}\n\tport def SeatBeltPort {\n\t\tout seatBelt: SeatBelt;\n\t}\n\tport def FrontRowSeatPort {\n\t\tout frontRowSeat: FrontRowSeat;\n\t}\n\tport def DriverAirbagPort {\n\t\tout driverAirbag: DriverAirbag;",
    "package 'SecurityManagement' {\n\tattribute def SecurityClassification;\n\tattribute def Component;\n\tport def ComponentPort {\n\t\tout component: Component;\n\t\tout securityClassification: SecurityClassification;\n\t}\n\tpart context {\n\t\tpart user {\n\t\t\tport componentPort: ComponentPort;\n\t\t\tperform classifyComponent.sendComponent {\n\t\t\t\tout component = componentPort.component;\n\t\t\t\tout securityClassification = componentPort.securityClassification;\n\t\t\t}\n\t\t}\n\t\tinterface userToComponent connect user.componentPort to component.componentPort {\n\t\t\tref flow references classifyComponent.componentFlow\n\t\t\t\tfrom source.component to target.component; \n\t\t\tref flow references classifyComponent.securityClassificationFlow\n\t\t\t\tfrom source.securityClassification to target.securityClassification; \n\t\t}\n\t\tpart component {\n\t\t\tport componentPort: ~ComponentPort;\n\t\t\tperform classifyComponent.receiveComponent {\n\t\t\t\t",
    "package 'AutomotiveECU' {\n\tattribute def CANBus;\n\tattribute def BusIF;\n\tattribute def VCU;\n\tattribute def ECU;\n\tattribute def SensorData;\n\tport def CANBusPort {\n\t\tout canBus : CANBus;\n\t}\n\tport def BusIFPort {\n\t\tout busIF : BusIF;\n\t}\n\tport def VCUPort {\n\t\tout vcu : VCU;\n\t}\n\tport def ECUPort {\n\t\tout ecu : ECU;\n\t}\n\tport def SensorDataPort {\n\t\tout sensorData : SensorData;\n\t",
    "package 'BloodGlucoseMeter' {\n\tattribute def BatteryStatus;\n\tattribute def Alarm;\n\tport def BatteryStatusPort {\n\t\tout batteryStatus : BatteryStatus;\n\t}\n\tport def AlarmPort {\n\t\tout alarm: Alarm;\n\t}\n\tpart context {\n\t\tpart system {\n\t\t\tperform monitorBatteryStatus {\n\t\t\t\tout batteryStatus = batteryStatusPort.batteryStatus;\n\t\t\t}\n\t\t\tport batteryStatusPort: BatteryStatusPort;\n\t\t}\n\t\tinterface systemToUser connect system.batteryStatusPort to user",
    "package 'Constants' {\n\tattribute def MathConstant;\n\tattribute def PhysConstant;\n\tattribute def ScenarioConstant;\n\tport def MathConstantPort {\n\t\tout mathConstant : MathConstant;\n\t}\n\tport def PhysConstantPort {\n\t\tout physConstant : PhysConstant;\n\t}\n\tport def ScenarioConstantPort {\n\t\tout scenarioConstant : ScenarioConstant;\n\t}\n\tpart context {\n\t\tpart user {\n\t\t\tport mathConstantPort: MathConstantPort;\n\t\t\tport physConstantPort: PhysConstantPort;\n\t\t\tport",
    "package 'AutomotiveComponent' {\n\tattribute def Manufacturer: String;\n\tattribute def RimDiameter: Real;\n\tattribute def Width: Integer;\n\tclass 'Tire' {\n\t\tattribute manufacturer: Manufacturer;\n\t\tattribute rimDiameter: RimDiameter;\n\t\tattribute width: Width;\n\t}\n\tpart context {\n\t\tpart tireInstance: Tire;\n\t}\n}",
    "package 'AutomotiveComponentModel' {\n\tattribute def Mass;\n\tattribute def Length;\n\tattribute def HubDiameter;\n\tattribute def Width;\n\tattribute def OuterDiameter;\n\tattribute def TireHeight;\n\tattribute def Vehicle;\n\tattribute def FrontWheel;\n\tattribute def WheelPair;\n\tattribute def Tire;\n\t\n\tclass def Vehicle {\n\t\tattribute mass: Mass;\n\t\tattribute length: Length;\n\t}\n\t\n\tclass def FrontWheel {\n\t\tattribute hubDiameter: HubDiameter;\n\t\tattribute width: Width;\n\t\tattribute outerDiameter: Out",
    "package 'Powertrain' {\n\tattribute def Engine;\n\tattribute def Transmission;\n\tattribute def HighPerformance;\n\tport def EnginePort {\n\t\tout engine: Engine;\n\t}\n\tport def TransmissionPort {\n\t\tout transmission: Transmission;\n\t}\n\tport def HighPerformancePort {\n\t\tout highPerformance: HighPerformance;\n\t}\n\tpart context {\n\t\tpart vehicle {\n\t\t\tport enginePort: EnginePort;\n\t\t\tport transmissionPort: TransmissionPort;\n\t\t\tport highPerformancePort: HighPerformancePort;\n\t\t\tperform configurePowertrain.selectEngine {\n\t\t\t\tin highPerformance = highPerformancePort.highPerformance;\n\t",
    "package 'AutomotiveSystem' {\n\tattribute def WheelAssembly;\n\tattribute def Tire;\n\tattribute def BrakeDisc;\n\tattribute def Car;\n\tport def CarPort {\n\t\tout",
    "package 'AutomotiveFuelSystem' {\n\tattribute def Fuel;\n\tattribute def Temperature;\n\tport def FuelTankAssemblyPort {\n\t\tout fuel: Fuel;\n\t\tin fuel: Fuel;\n\t}\n\tport def FuelPumpPort {\n\t\tout fuel: Fuel;\n\t\tin fuel: Fuel;\n\t}\n\tport def TemperaturePort {\n\t\tout temperature: Temperature;\n\t}\n\tpart context {\n\t\tpart fuelTankAssembly {\n\t\t\tport fuelTankAssemblyPort: FuelTankAssemblyPort;\n\t\t\tperform fuelFlow {\n\t\t\t\tin fuel = fuelTankAssemblyPort.fuel;\n\t\t\t\t",
    "package 'PhysicalQuantitySystem' {\n\tattribute def Length;\n\tattribute def Mass;\n\tattribute def Time;\n\tattribute def ElectricCurrent;\n\tattribute def Temperature;\n\tattribute def AmountOfSubstance;\n\tattribute def LuminousIntensity;\n\tattribute def ImportedQuantity;\n\tattribute def ExtendedQuantity;\n\tport def LengthPort {\n\t\tout length: Length;\n\t}\n\tport def MassPort {\n\t\tout mass: Mass;\n\t}\n\tport def TimePort {\n\t\tout time: Time;\n\t}\n\tport def ElectricCurrentPort {\n\t\tout electricCurrent: ElectricCurrent;\n\t}\n\tport def TemperaturePort {\n\t\tout temperature: Temperature;\n\t}\n\tport def AmountOfSubstancePort {\n\t\tout amountOfSubstance: AmountOfSubstance",
    "package 'UnitSystemLibrary' {\n\tattribute def Quantity;\n\tattribute def Unit;\n\tattribute def Conversion;\n\tport def QuantityPort {\n\t\tout quantity: Quantity;\n\t}\n\tport def UnitPort {\n\t\tout unit: Unit;\n\t}\n\tport def ConversionPort {\n\t\tout conversion: Conversion;\n\t}\n\tpart context {\n\t\tpart user {\n\t\t\tport quantityPort: QuantityPort;\n\t\t\tperform manageUnits.sendQuantity {\n\t\t\t\tout quantity = quantityPort.quantity;\n\t\t\t}\n\t\t}\n\t\tinterface userToUnitSystemLibrary connect user.quantityPort to unitSystemLibrary.quantityPort {\n\t\t\tref flow references manageUnits.quantityFlow\n\t\t\t\tfrom source.quantity to target.quantity; \n\t\t}\n\t\tpart unitSystemLibrary {",
    "package 'HeadlampTiltAdjustment' {\n\tattribute def TiltAngle;\n\tattribute def SI;\n\tattribute def Pi;\n\tattribute def E;\n\tport def TiltAnglePort {\n\t\tout tiltAngle : TiltAngle;\n\t}\n\tport def SIPort {\n\t\tout si : SI;\n\t}\n\tport def PiPort {\n\t\tout pi : Pi;\n\t}\n\tport def EPort {\n\t\tout e : E;\n\t}\n\tpart context {\n\t\tpart user {\n\t\t\tport tiltAnglePort: TiltAnglePort;\n\t\t\tperform verifyTiltAngle {\n\t\t\t\tout tiltAngle = tiltAnglePort.tiltAngle;\n\t\t\t}\n\t\t}\n\t\tpart headlamp",
    "package 'DataTypeSystem' {\n\tattribute def UnsignedInt;\n\tattribute def UnsignedFloat;\n\tattribute def DateTime;\n\tattribute def String;\n\tattribute def Boolean;\n\tattribute def StatusColor;\n\tattribute def Diameter;\n\tattribute def Size;\n\tattribute def Small;\n\tattribute def Medium;\n\tattribute def Large;\n\tattribute def DefaultSize;\n\t\n\tclass def UnsignedInt {\n\t\tconstraint nonNegative;\n\t}\n\t\n\tclass def UnsignedFloat",
    "package 'CollectionManagement' {\n\tclass def SparePart;\n\tclass def Person;\n\tclass def Real;\n\tclass def Bag {\n\t\tattribute def SparePart;\n\t}\n\tclass def List {\n\t\tattribute def Integer;\n\t}\n\tclass def Set {\n\t\tattribute def String;\n\t}\n\tclass def OrderedSet {\n\t\tattribute def Person;\n\t}\n\tclass def Array {\n\t\tattribute def Real;\n\t}\n\tport def SparePartPort {\n\t\tout sparePart: SparePart;\n\t}\n\tport def PersonPort {\n\t",
    "package 'TireInfo' {\n\tattribute def Manufacturer;\n\tattribute def RimDiameter;\n\tattribute def TireWidth;\n\tattribute def InstallationPosition;\n\tclass def Tire {\n\t\tattribute manufacturer: Manufacturer;\n\t\tattribute rimDiameter: RimDiameter;\n\t\tattribute tireWidth: TireWidth;\n\t\tattribute installationPosition: InstallationPosition;\n\t}\n\tpart context {\n\t\tpart tireDatabase {\n\t\t\tcollection tires: Tire;\n\t\t\tperform addTire {\n\t\t\t\tin manufacturer: Manufacturer;\n\t\t\t\tin rimDiameter: RimDiameter;\n\t\t",
    "package 'SpacecraftTrajectory' {\n\tattribute def Time;\n\tattribute def Position;\n\tattribute def Velocity;\n\tattribute def SamplingPoint;\n\tport def TimePort {\n\t\tout time: Time;\n\t}\n\tport def PositionPort {\n\t\tout position: Position;\n\t}\n\tport def VelocityPort {\n\t\tout velocity: Velocity;\n\t}\n\tport def SamplingPointPort {\n\t\tout samplingPoint: SamplingPoint;\n\t}\n\tpart context {\n\t\tpart spacecraft",
    "package 'AlloyManagementSystem' {\n\tattribute def Substance;\n\tattribute def Material;\n\tattribute def Alloy;\n\tattribute def MassFraction;\n\tattribute def TensileStrength;\n\tattribute def SIUnit;\n\tattribute def RealValue;\n\tattribute def StandardValue;\n\tport def SubstancePort",
    "package 'MaterialsDatabase' {\n\tattribute def Material;\n\tattribute def AtomicMass;\n\tattribute def Composition;\n\tattribute def MechanicalProperties;\n\tattribute def TensileStrength;\n\tattribute def MassFraction;\n\tattribute def EngineeringUnits;\n\tport def MaterialPort {\n\t\tout material: Material;\n\t",
    "package 'PubSub' {\n\tattribute def Message;\n\tattribute def Topic;\n\tport def MessagePort {\n\t\tout message: Message;\n\t}\n\tport def TopicPort {\n\t\tout topic: Topic;\n\t}\n\tpart context {\n\t\tpart producer {\n\t\t\tport messagePort: MessagePort;\n\t\t\tperform publishMessage {\n\t\t\t\tout message = messagePort.message;\n\t\t\t}\n\t\t}\n\t\tinterface producerToServer connect producer.messagePort to server.messagePort {\n\t\t\tref flow references publishMessage.messageFlow\n\t\t\t\tfrom source.message to target.message; \n\t\t}\n\t\tpart server {\n\t\t\t",
    "package 'VehicleFuelSystem' {\n\tattribute def Fuel;\n\tattribute def FuelTemperature;\n\tport def FuelTankToEnginePort {\n\t\tout fuel: Fuel;\n\t\tout fuelTemperature: FuelTemperature;\n\t}\n\tport def EngineToFuelTankPort {\n\t\tin fuel: Fuel;\n\t\tin fuelTemperature: FuelTemperature;\n\t}\n\tpart context {\n\t\tpart fuelTankAssembly {\n\t\t\tperform supplyFuel {\n\t\t\t\tout fuel = fuelTankToEnginePort.fuel;\n\t\t\t\tout fuelTemperature = fuelTankToEnginePort.fuelTemperature;\n\t\t\t}\n\t\t}\n\t\tpart engine {\n",
    "package 'PubSub' {\n\tattribute def Topic;\n\tattribute def Message;\n\tport def ProducerPort {\n\t\tout publish: Topic;\n\t}\n\tport def ConsumerPort {\n\t\tout subscribe: Topic;\n\t\tin receive: Message;\n\t}\n\tport def ServerPort {\n\t\tout publish: Topic;\n\t\tout subscribe: Topic;\n\t\tin receive: Message;\n\t}\n\tpart context {\n\t\tpart producer {\n\t\t\tport producerPort: ProducerPort;\n\t\t\tperform publishMessage {\n\t\t\t\tout topic = producerPort.publish;\n\t\t\t}\n\t\t}\n\t\tpart consumer {\n\t\t\tport consumerPort: ConsumerPort;\n\t\t\tperform subscribe",
    "package 'TransportationSystem' {\n\tattribute def FuelLevel;\n\tattribute def BoardingPermission;\n\tattribute def EnvironmentalFactor;\n\tport def FuelLevelPort {\n\t\tout fuelLevel : FuelLevel;\n\t}\n\tport def BoardingPermissionPort {\n\t\tout boardingPermission : BoardingPermission;\n\t}\n\tport def EnvironmentalFactorPort {\n\t\tout environmentalFactor : EnvironmentalFactor;\n\t}\n\tpart context {\n\t\tpart driver {\n\t\t\tport boardingPermissionPort: BoardingPermissionPort;\n\t\t\tperform transportationProcess.requestBoardingPermission {\n\t\t\t\tout boardingPermission = boardingPermissionPort.boardingPermission;\n\t\t\t}\n\t\t}\n\t",
    "package 'FuelSupplyAndReturnManagement' {\n\tattribute def FuelTemperature;\n\tattribute def FuelFlow;\n\tport def FuelOutletPort {\n\t\tout fuelFlow : FuelFlow;\n\t\tout fuelTemperature : FuelTemperature;\n\t}\n\tport def FuelInletPort {\n\t\tin fuelFlow : FuelFlow;\n\t\tin fuelTemperature : FuelTemperature;\n\t}\n\tport def FuelReturnPort {\n\t\tin fuelFlow : FuelFlow;\n\t\tin fuelTemperature : FuelTemperature;\n\t}\n\tpart",
    "package 'VehicleFuelSystem' {\n\tattribute def Fuel;\n\tattribute def Temperature;\n\tport def FuelTankToEnginePort {\n\t\tout fuel: Fuel;\n\t\tout temperature: Temperature;\n\t}\n\tport def EngineToFuelTankPort {\n\t\tout fuel: Fuel;\n\t\tout temperature: Temperature;\n\t}\n\tpart context {\n\t\tpart fuelTank {\n\t\t\tport fuelTankToEnginePort: FuelTankToEnginePort;\n\t\t\tperform manageFuelFlow.supplyFuel {\n\t\t\t\tout fuel = fuelTankToEnginePort.fuel;\n\t\t\t\tout temperature = fuelTankToEnginePort.temperature;\n\t\t\t}\n\t\t}\n\t\tpart engine {\n\t\t\tport engineToFuelTank",
    "package 'PhotoCapture' {\n\tattribute def Scene;\n\tattribute def FocusedImage;\n\tattribute def FinalPhoto;\n\tport def ScenePort {\n\t\tout scene: Scene;\n\t}\n\tport def FocusedImagePort {\n\t\tout focusedImage: FocusedImage;\n\t}\n\tport def FinalPhotoPort {\n\t\tout finalPhoto: FinalPhoto;\n\t}\n\tpart context {\n\t\tpart user {\n\t\t\tport scenePort: ScenePort;\n\t\t\tperform captureScene.selectScene {\n\t\t\t\tout scene = scenePort.scene;\n\t\t\t}\n\t\t}\n\t\tinterface userToCapture connect user.scenePort to captureScene.scenePort {\n\t\t\tref flow references captureScene.sceneFlow\n\t\t\t\tfrom source.scene to target.scene; \n\t\t}\n\t\tpart captureScene {\n\t\t\tport scenePort: ~ScenePort;\n\t\t\t",
    "package 'PhotographyWorkflow' {\n\tattribute def Scene;\n\tattribute def IntermediateImage;\n\tattribute def FinalImage;\n\tport def ScenePort {\n\t\tout scene: Scene;\n\t}\n\tport def IntermediateImagePort {\n\t\tout intermediateImage: IntermediateImage;\n\t}\n\tport def FinalImagePort {\n\t\tout finalImage: FinalImage;\n\t}\n\tpart context {\n\t\tpart user {\n\t\t\tport scenePort: ScenePort;\n\t\t\tperform selectScene.sendScene {\n\t\t\t\tout scene = scenePort.scene;\n\t\t\t}\n\t\t}\n\t\tinterface userToWorkflow connect user.scenePort to workflow.scenePort {\n\t\t\tref flow references photographyProcess.sceneFlow",
    "package 'PhotographyWorkflow' {\n\tattribute def Scene;\n\tattribute def Image;\n\tattribute def Photograph;\n\tport def ScenePort {\n\t\tout scene: Scene;\n\t}\n\tport def ImagePort {\n\t\tout image: Image;\n\t}\n\tport def PhotographPort {\n\t\tout photograph: Photograph;\n\t}\n\tpart context {\n\t\tpart user {\n\t\t\tport scenePort: ScenePort;\n\t\t\tperform captureScene.selectScene {\n\t\t\t\tout scene = scenePort.scene;\n\t\t\t}\n\t\t}\n\t\tinterface userToWorkflow connect user.scenePort to workflow.scenePort {\n\t\t\tref flow references captureScene.sceneFlow\n\t\t\t\tfrom source.scene to target.scene; \n\t\t}\n\t\tpart workflow {\n\t\t\tport scenePort: ~ScenePort;\n\t\t\tperform captureScene.performFocusing",
    "package 'PhotographyAutomation' {\n\tattribute def FocusProcessedScene;\n\tattribute def Photograph;\n\tport def FocusProcessedScenePort {\n\t\tout focusProcessedScene : FocusProcessedScene;\n\t}\n\tport def PhotographPort {\n\t\tout photograph: Photograph;\n\t}\n\tpart context {\n\t\tpart user {\n\t\t\tport focusProcessedScenePort: FocusProcessedScenePort;\n\t\t\tperform automatePhotography.provideShootingScene {\n\t\t\t\tout focusProcessedScene = focusProcessedScenePort.focusProcessedScene;\n\t\t\t}\n\t\t}\n\t\tinterface userToSystem connect user.focusProcessedScenePort to system.focusProcessedScenePort {\n\t\t\tref flow references automatePhotography.sceneFlow\n\t\t\t\tfrom source.focusProcessedScene to target.focusProcessedScene; \n\t\t}\n\t\tpart system {\n\t\t\tport focusProcessedScenePort: ~",
    "package 'PhotographyWorkflow' {\n\tattribute def Focus;\n\tattribute def Scene;\n\tattribute def Image;\n\tattribute def Shoot;\n\tattribute def Picture;\n\tport def FocusPort {\n\t\tout focus: Focus;\n\t}\n\tport def ScenePort {\n\t\tout scene: Scene;\n\t}\n\tport def ImagePort {\n\t\tout image: Image;\n\t}\n\tport def ShootPort {\n\t\tout shoot: Shoot;\n\t}\n\tport def PicturePort {\n\t\tout picture: Picture;\n\t}\n\tpart context {\n\t\tpart user {\n\t\t\tport scenePort: ScenePort;\n\t\t\tperform photographyProcess.inputScene {\n\t\t\t\tout scene = scenePort.scene;\n\t\t\t}\n\t\t}",
    "package 'PhotographyWorkflow' {\n\tattribute def FocusCmd;\n\tattribute def ShootCmd;\n\tattribute def Image;\n\tport def FocusCmdPort {\n\t\tout focusCmd : FocusCmd;\n\t}\n\tport def ShootCmdPort {\n\t\tout shootCmd : ShootCmd;\n\t}\n\tport def ImagePort {\n\t\tout image: Image;\n\t}\n\tpart context {\n\t\tpart user {\n\t\t\tport focusCmdPort: FocusCmdPort;\n\t\t\tport shootCmdPort: ShootCmdPort;\n\t\t\tperform captureScene.sendFocusCmd {\n\t\t\t\tout focusCmd = focusCmdPort.focusCmd;\n\t\t\t}\n\t\t\tperform captureScene.sendShootCmd {\n\t\t\t\tout shootCmd = shootCmdPort.shootCmd;\n\t\t\t}\n\t\t}\n\t\tinterface userToCamera connect user.focusCmdPort to camera.focusCmdPort {\n\t\t",
    "package 'PhotoCapture' {\n\tattribute def Scene;\n\tattribute def FocusedImage;\n\tattribute def Photograph;\n\tport def ScenePort {\n\t\tout scene: Scene;\n\t}\n\tport def FocusedImagePort {\n\t\tout focusedImage: FocusedImage;\n\t}\n\tport def PhotographPort {\n\t\tout photograph: Photograph;\n\t}\n\tpart context {\n\t\tpart user {\n\t\t\tport scenePort: ScenePort;\n\t\t\tperform captureScene.selectScene {\n\t\t\t\tout scene = scenePort.scene;\n\t\t\t}\n\t\t}\n\t\tinterface userToSystem connect user.scenePort to system.scenePort {\n\t\t\tref flow references captureScene.sceneFlow\n\t\t\t\tfrom source.scene to target.scene; \n\t\t}\n\t",
    "package 'PhotographyWorkflow' {\n\tattribute def Scene;\n\tattribute def FocusedImage;\n\tattribute def FinalImage;\n\tport def ScenePort {\n\t\tout scene: Scene;\n\t}\n\tport def FocusedImagePort {\n\t\tout focusedImage: FocusedImage;\n\t}\n\tport def FinalImagePort {\n\t\tout finalImage: FinalImage;\n\t}\n\tpart context {\n\t\tpart user {\n\t\t\tperform triggerTakePhoto {\n\t\t\t\tout scene = scenePort.scene;\n\t\t\t}\n\t\t}\n\t\tinterface userToScene connect user.scenePort to photographySystem.scenePort {\n\t\t\tref flow references photographyWorkflow.sceneFlow\n\t\t\t\tfrom source.scene to",
    "package 'Automatic_Braking_Control' {\n\tattribute def BrakePedal;\n\tattribute def TractionInfo;\n\tattribute def BrakePressure;\n\tattribute def ModulationFrequency;\n\tport def BrakePedalPort {\n\t\tout brakePedal: BrakePedal;\n\t}\n\tport def TractionInfoPort {\n\t\tout tractionInfo: TractionInfo;\n\t}\n\tport def BrakePressurePort {\n\t\tout brakePressure: BrakePressure;\n\t}\n\tport def ModulationFrequencyPort {\n\t\tout modulationFrequency: ModulationFrequency;\n\t}\n\tpart context {\n\t\tpart",
    "package 'BatteryChargingControl' {\n\tattribute def BatteryLevel;\n\tattribute def ChargeSupply;\n\tport def BatteryLevelPort {\n\t\tout batteryLevel: BatteryLevel;\n\t}\n\tport def ChargeSupplyPort {\n\t\tout chargeSupply: ChargeSupply;\n\t}\n\tpart context {\n\t\tpart battery {\n\t\t\tport batteryLevelPort: BatteryLevelPort;\n\t\t\tperform monitorBattery.updateBatteryLevel {\n\t\t\t\tout batteryLevel = batteryLevelPort.batteryLevel;\n\t\t\t}\n\t\t}\n\t\tinterface batteryToControl connect battery.batteryLevelPort to control.batteryLevelPort {\n\t\t\tref flow references monitorBattery.batteryLevelFlow\n\t\t\t\tfrom source.batteryLevel",
    "package 'BatteryChargingSystem' {\n\tattribute def BatteryLevel;\n\tattribute def ChargingState;\n\tport def BatteryLevelPort {\n\t\tout batteryLevel : BatteryLevel;\n\t}\n\tport def ChargingStatePort {\n\t\tout chargingState : ChargingState;\n\t}\n\tpart context {\n\t\tpart battery {\n\t\t\tport batteryLevelPort: BatteryLevelPort;\n\t\t\tperform monitorAndControlCharging.updateBatteryLevel {\n\t\t\t\tout batteryLevel = batteryLevelPort.batteryLevel;\n\t\t\t}\n\t\t}\n\t\tpart charger {\n\t\t\tport chargingStatePort: ChargingStatePort;\n\t\t\tperform monitorAndControlCharging.manageCharging {\n\t\t\t\tin chargingState = chargingStatePort",
    "package 'Camera' {\n\tattribute def Scene;\n\tattribute def Image;\n\tport def ScenePort {\n\t\tout scene: Scene;\n\t}\n\tport def ImagePort {\n\t\tout image: Image;\n\t}\n\tpart context {\n\t\tpart user {\n\t\t\tport scenePort: ScenePort;\n\t\t\tperform captureScene.selectScene {\n\t\t\t\tout scene = scenePort.scene;\n\t\t\t}\n\t\t}\n\t\tinterface userToCamera connect user.scenePort to camera.scenePort {\n\t\t\tref flow references captureScene.sceneFlow\n\t\t\t\tfrom source.scene to target.scene; \n\t\t}\n\t\tpart camera {\n\t\t\tport scenePort: ~ScenePort;\n\t\t\tperform captureScene.autoFocus {\n\t\t\t",
    "package 'DigitalCamera' {\n\tattribute def SceneSelection;\n\tattribute def FocusedImage;\n\tattribute def CapturedImage;\n\tport def SceneSelectionPort {\n\t\tout sceneSelection: SceneSelection;\n\t}\n\tport def FocusedImagePort {\n\t\tout focusedImage: FocusedImage;\n\t}\n\tport def CapturedImagePort {\n\t\tout capturedImage: CapturedImage;\n\t}\n\tpart context {\n\t\tpart user {\n\t\t\tport sceneSelectionPort: SceneSelectionPort;\n\t\t\tperform shootingProcess.selectScene {\n\t\t\t\tout sceneSelection = sceneSelectionPort.sceneSelection;\n\t\t\t}\n\t\t}\n\t\tinterface userToCamera connect user.sceneSelectionPort to camera.sceneSelectionPort {\n\t\t\tref flow references shootingProcess.",
    "package 'VehicleSimulation' {\n\tattribute def Mass;\n\tattribute def InitialPosition;\n\tattribute def InitialVelocity;\n\tattribute def TimeInterval;\n\tattribute def PowerInput;\n\tattribute def Position;\n\tattribute def Speed;\n\tport def MassPort {\n\t\tout mass: Mass;\n\t}\n\tport def InitialPositionPort {\n\t\tout initialPosition: InitialPosition;\n\t}\n\tport def InitialVelocityPort {\n\t\tout initialVelocity: InitialVelocity;\n\t}\n\tport def TimeIntervalPort {\n\t\tout timeInterval: TimeInterval;\n\t}\n\tport def PowerInputPort {\n\t\tout powerInput: PowerInput;\n\t}\n\tport def PositionPort {\n\t\tout position: Position;\n\t}\n\tport def SpeedPort {\n\t\tout speed: Speed;\n\t}\n",
    "package 'Camera' {\n\tattribute def Scene;\n\tattribute def Image;\n\tattribute def Display;\n\tport def ScenePort {\n\t\tout scene: Scene;\n\t}\n\tport def ImagePort {\n\t\tout image: Image;\n\t}\n\tport def DisplayPort {\n\t\tout display: Display;\n\t}\n\tpart context {\n\t\tpart user {\n\t\t\tport scenePort: ScenePort;\n\t\t\tperform captureScene.inputScene {\n\t\t\t\tout scene = scenePort.scene;\n\t\t\t}\n\t\t}\n\t\tinterface userToCamera connect user.scenePort to camera.scenePort {\n\t\t\tref flow references captureScene.sceneFlow\n\t\t\t\tfrom source.scene to target.scene; \n\t\t}\n\t\tpart camera {\n\t\t\tport scenePort: ~ScenePort;\n",
    "package 'Camera' {\n\tattribute def ViewPort;\n\tattribute def Image;\n\tattribute def Picture;\n\tattribute def DisplayPort;\n\tport def ViewPortPort {\n\t\tout viewPort : ViewPort;\n\t}\n\tport def DisplayPort {\n\t\tout displayPort : DisplayPort;\n\t}\n\tpart context {\n\t\tpart user {\n\t\t\tport viewPortPort: ViewPortPort;\n\t\t\tperform processScene.selectScene {\n\t\t\t\tout viewPort = viewPortPort.viewPort;\n\t\t\t}\n\t\t}\n\t\tinterface userToCamera connect user.viewPortPort to camera.viewPortPort {\n\t\t\tref flow references processScene.viewPortFlow\n\t\t\t\tfrom source.viewPort to target.viewPort; \n\t\t}\n\t\tpart camera {\n\t\t\tport viewPortPort: ~ViewPortPort;\n\t\t\t",
    "package 'SensorManagementSystem' {\n\tattribute def Sensor;\n\tattribute def Status;\n\tattribute def Update;\n\tport def SensorPort {\n\t\tout sensor: Sensor;\n\t\tout status: Status;\n\t\tin update: Update;\n\t}\n\tpart context {\n\t\tpart system {\n\t\t\tport sensorPort: SensorPort;\n\t\t\tperform manageSensors.monitorSensors {\n\t\t\t\tin sensor = sensorPort.sensor;\n\t\t\t\tin status = sensorPort.status;\n\t\t\t\tout update = sensorPort.update;\n\t\t\t}\n\t\t}\n\t\tpart sensor {\n\t\t\tport sensorPort: ~SensorPort;\n\t\t\tperform manageSensors.updateSensor {\n\t\t\t\tin update = sensorPort.update;\n\t\t\t}\n\t\t}\n\t}\n\taction manageSensors {\n\t\taction monitorSensors",
    "package 'VehicleStateManagement' {\n\tattribute def StartSignal;\n\tattribute def PowerOnSignal;\n\tattribute def ShutdownSignal;\n\tattribute def State;\n\tport def StartSignalPort {\n\t\tout startSignal : StartSignal;\n\t}\n\tport def PowerOnSignalPort {\n\t\tout powerOnSignal : PowerOnSignal;\n\t}\n\tport def ShutdownSignalPort {\n\t\tout shutdownSignal : ShutdownSignal;\n\t}\n\tport def StatePort {\n\t\tout state : State;\n\t}\n\tpart context {\n\t\tpart vehicle {\n\t\t\tport startSignalPort: StartSignalPort;\n\t\t\tport powerOnSignalPort: PowerOnSignalPort;\n\t\t",
    "package 'VehicleStateManagement' {\n\tattribute def VehicleStartSignal;\n\tattribute def VehicleOnSignal;\n\tattribute def VehicleOffSignal;\n\tattribute def State;\n\tport def VehicleStartSignalPort {\n\t\tout onVehicleStartSignal : VehicleStartSignal;\n\t}\n\tport def VehicleOnSignalPort {\n\t\tout onVehicleOnSignal : VehicleOnSignal;\n\t}\n\tport def VehicleOffSignalPort {\n\t\tout onVehicleOffSignal : VehicleOffSignal;\n\t}\n\tport def StatePort {\n\t\tout",
    "package 'VehiclePowerManagement' {\n\tattribute def StartCmd;\n\tattribute def StartedSignal;\n\tattribute def ShutdownCmd;\n\tattribute def PoweredOnState;\n\tattribute def SafetyOpDone;\n\tattribute def PowerOffState;\n\tattribute def DiagnosisResult;\n\tattribute def PowerSupply;\n\tattribute def FunctionalUnitPower;\n\tport def StartCmdPort {\n\t\tout startCmd : StartCmd;\n\t}\n\tport def StartedSignalPort {\n\t\tin startedSignal : StartedSignal;\n\t}\n\tport def ShutdownCmdPort {\n\t\tout shutdownCmd : ShutdownCmd;\n",
    "package 'VehicleControl' {\n\tattribute def StartSignal;\n\tattribute def StartedSignal;\n\tattribute def ShutdownSignal;\n\tattribute def VehicleStatus;\n\tport def StartSignalPort {\n\t\tout startSignal : StartSignal;\n\t}\n\tport def StartedSignalPort {\n\t\tout startedSignal : StartedSignal;\n\t}\n\tport def ShutdownSignalPort {\n\t\tout shutdownSignal : ShutdownSignal;\n\t}\n\tport def VehicleStatusPort {\n\t\tout vehicleStatus : VehicleStatus;\n\t}\n\tpart context {\n\t\tpart user {\n\t\t\tport startSignalPort: StartSignalPort;\n\t\t\tport startedSignalPort: StartedSignalPort;\n",
    "package 'VehiclePowerManagement' {\n\tattribute def StartSignal;\n\tattribute def OnSignal;\n\tattribute def OffSignal;\n\tattribute def HealthState;\n\tport def StartSignalPort {\n\t\tout startSignal : StartSignal;\n\t}\n\tport def OnSignalPort {\n\t\tout onSignal : OnSignal;\n\t}\n\tport def OffSignalPort {\n\t\tout offSignal : OffSignal;\n\t}\n\tport def HealthStatePort {\n\t\tout healthState : HealthState;\n\t}\n\tpart context {\n\t\tpart user {\n\t\t\tport startSignalPort: StartSignalPort;\n\t\t",
    "package 'VehicleHealthManagement' {\n\tattribute def Temperature;\n\tattribute def HealthStatus;\n\tattribute def MaintenanceStatus;\n\tattribute def MaintenanceTime;\n\tattribute def Time;\n\tport def TemperaturePort {\n\t\tout temperature: Temperature;\n\t}\n\tport def HealthStatusPort {\n\t\tout healthStatus: HealthStatus;\n\t}\n\tport def MaintenanceStatusPort {\n\t\tout maintenanceStatus: MaintenanceStatus;\n\t}\n\tport def",
    "package 'TimedClockServer' {\n\tattribute def StartCmd;\n\tattribute def Request;\n\tattribute def Response;\n\tattribute def Time;\n\tport def RequestPort {\n\t\tin request : Request;\n\t}\n\tport def ResponsePort {\n\t\tout response : Response;\n\t}\n\tport def TimePort {\n\t\tout time : Time;\n\t}\n\tpart context {\n\t\tpart server {\n\t\t\tport requestPort: RequestPort;\n\t\t\tport responsePort: ResponsePort;\n\t\t\tport timePort: TimePort;\n\t\t\tperform manageServerState.handleStartCmd {\n\t\t\t\tin startCmd = requestPort.startCmd;\n\t",
    "package 'VehicleStartStop' {\n\tattribute def StartSignal;\n\tattribute def StopSignal;\n\tattribute def PowerOnSignal;\n\tattribute def BrakeSignal;\n\tattribute def OperatingState;\n\tattribute def OffState;\n\tattribute def SelfCheck;\n\tattribute def PowerSupply;\n\tattribute def ParkingBrake;\n\tport def StartSignalPort {\n\t\tout startSignal : StartSignal;\n\t}\n\tport def StopSignalPort {\n\t\tout stopSignal : StopSignal;\n\t}\n\tport def PowerOnSignalPort {\n\t\tout powerOnSignal : PowerOnSignal;\n\t",
    "package 'VehicleControlSystem' {\n\tattribute def StartStopSignal;\n\tattribute def VehicleState;\n\tattribute def SafetyCheck;\n\tattribute def PowerSupply;\n\tport def StartStopSignalPort {\n\t\tout startStopSignal : StartStopSignal;\n\t}\n\tport def VehicleStatePort {\n\t\tout vehicleState : VehicleState;\n\t}\n\tport def SafetyCheckPort {\n\t\tout safetyCheck : Saf",
    "package 'CruiseControl' {\n\tattribute def SetSpeedCmd;\n\tattribute def ActualSpeed;\n\tattribute def FuelControlCmd;\n\tport def SetSpeedCmdPort {\n\t\tout setSpeedCmd: SetSpeedCmd;\n\t}\n\tport def ActualSpeedPort {\n\t\tout actualSpeed: ActualSpeed;\n\t}\n\tport def FuelControlCmdPort {\n\t\tout fuelControlCmd: FuelControlCmd;\n\t}\n\tpart context {\n\t\tpart driver {\n\t\t\tport setSpeedCmdPort: SetSpeedCmdPort;\n\t\t\tperform cruiseControl.sendSetSpeedCmd {\n\t\t\t\tout setSpeedCmd = setSpeedCmdPort.setSpeed",
    "package 'CruiseControl' {\n\tattribute def SetSpeedCmd;\n\tattribute def VehicleSpeed;\n\tattribute def ThrottleCmd;\n\tport def SetSpeedCmdPort {\n\t\tout setSpeedCmd: SetSpeedCmd;\n\t}\n\tport def VehicleSpeedPort {\n\t\tout vehicleSpeed: VehicleSpeed;\n\t}\n\tport def ThrottleCmdPort {\n\t\tout throttleCmd: ThrottleCmd;\n\t}\n\tpart context {\n\t\tpart driver {\n\t\t\tport setSpeedCmdPort: SetSpeedCmdPort;\n\t\t\tperform controlVehicleSpeed.sendSetSpeedCmd {\n\t\t\t\tout setSpeedCmd = setSpeedCmdPort.setSpeedCmd;\n\t\t\t}\n\t\t}\n\t\tinterface driverToCruiseControl connect driver.setSpeedCmdPort to cru",
    "package 'CruiseControl' {\n\tattribute def SetSpeedCmd;\n\tattribute def SpeedInfo;\n\tattribute def ThrottleCmd;\n\tport def SetSpeedCmdPort {\n\t\tout setSpeedCmd: SetSpeedCmd;\n\t}\n\tport def SpeedInfoPort {\n\t\tout speedInfo: SpeedInfo;\n\t}\n\tport def ThrottleCmdPort {\n\t\tout throttleCmd: ThrottleCmd;\n\t}\n\tpart context {\n\t\tpart driver {\n\t\t\tport setSpeedCmdPort: SetSpeedCmdPort;\n\t\t\tperform maintainSpeed.sendSetSpeedCmd {\n\t\t\t\tout setSpeedCmd = setSpeed",
    "package 'CruiseControl' {\n\tattribute def SpeedSetting;\n\tattribute def SpeedFeedback;\n\tattribute def ThrottleInstruction;\n\tport def SpeedSettingPort {\n\t\tout speedSetting: SpeedSetting;\n\t}\n\tport def SpeedFeedbackPort {\n\t\tout speedFeedback: SpeedFeedback;\n\t}\n\tport def ThrottleInstructionPort {\n\t\tout throttleInstruction: ThrottleInstruction;\n\t}\n\tpart context {\n\t\tpart driver {\n\t\t\tport speedSettingPort: SpeedSettingPort;\n\t\t\tperform setCruisingSpeed {\n\t\t\t\tout speedSetting = speedSetting",
    "package 'CruiseControl' {\n\tattribute def SetSpeedCmd;\n\tattribute def Speed;\n\tattribute def FuelControlCmd;\n\tport def SetSpeedCmdPort {\n\t\tout setSpeedCmd: SetSpeedCmd;\n\t}\n\tport def SpeedPort {\n\t\tout speed: Speed;\n\t}\n\tport def FuelControlCmdPort {\n\t\tout fuelControlCmd: FuelControlCmd;\n\t}\n\tpart context {\n\t\tpart driver {",
    "package 'CruiseControl' {\n\tattribute def SetSpeedCmd;\n\tattribute def ActualSpeed;\n\tattribute def FuelControlCmd;\n\tport def SetSpeedCmdPort {\n\t\tout setSpeedCmd: SetSpeedCmd;\n\t}\n\tport def ActualSpeedPort {\n\t\tout actualSpeed: ActualSpeed;\n\t}\n\tport def FuelControlCmdPort {\n\t\tout fuelControlCmd: FuelControlCmd;\n\t}\n\tpart context {\n\t\tpart driver {\n\t\t\tport setSpeedCmdPort: SetSpeedCmdPort;\n\t\t\tperform cruiseControl.sendSetSpeedCmd {\n\t\t\t\tout setSpeedCmd = setSpeedCmdPort.setSpeedCmd;\n",
    "package 'VehicleLifecycle' {\n\tattribute def DeliveryDate;\n\tattribute def OwnerInfo;\n\tattribute def DriverInfo;\n\tattribute def ScrappingInfo;\n\tport def DeliveryPort {\n\t\tout deliveryDate : DeliveryDate;\n\t}\n\tport def OwnerPort {\n\t\tout ownerInfo : OwnerInfo;\n\t}\n\tport def DriverPort {\n\t\tout driverInfo : DriverInfo;\n\t}\n\tport def ScrappingPort {\n\t\tout scrappingInfo : ScrappingInfo;\n\t}\n\tpart context {\n\t\tpart assembly {\n\t\t\tperform manage",
    "package 'Vehicle' {\n\tattribute def Mass;\n\tattribute def OperationalStatus;\n\tattribute def GearSetting;\n\tattribute def AcceleratorPedalPosition;\n\tport def OperationalStatusPort {\n\t\tout operationalStatus : OperationalStatus;\n\t}\n\tport def GearSettingPort {\n\t\tout gearSetting : GearSetting;\n\t}\n\tport def AcceleratorPedalPositionPort {\n\t\tout acceleratorPedalPosition : AcceleratorPedalPosition;\n\t}\n\tpart context {\n\t\tpart engine {\n\t\t\tattribute def EngineStatus;\n\t\t}\n\t\tpart driver {\n\t\t\tattribute def DriverStatus;\n\t\t}\n",
    "package 'VehicleSystem' {\n\tattribute def Mass;\n\tattribute def Gear;\n\tattribute def AcceleratorPos;\n\tattribute def Time;\n\tattribute def VehicleInstance;\n\tclass def Vehicle {\n\t\tattribute mass: Mass;\n\t\tattribute gear: Gear;\n\t\tattribute acceleratorPos: AcceleratorPos;\n\t\tattribute time: Time;\n\t}\n\tport def VehiclePort {\n\t\tout vehicleInstance: VehicleInstance;\n\t}\n\tpart context {\n\t\tpart vehicle_1 {\n\t\t\tclassifier Vehicle;\n\t\t",
    "package 'Vehicle' {\n\tattribute def Mass;\n\tattribute def Gear;\n\tattribute def Throttle;\n\tattribute def Driver;\n\tport def MassPort {\n\t\tout mass: Mass;\n\t}\n\tport def GearPort {\n\t\tout gear: Gear;\n\t}\n\tport def ThrottlePort {\n\t\tout throttle: Throttle;\n\t}\n\tport def DriverPort {\n\t\tout driver: Driver;\n\t}\n\tpart context {\n\t\tpart vehicle {\n\t\t\tport massPort",
    "package 'VehicleMassModeling' {\n\tattribute def Mass;\n\tattribute def Component;\n\tport def MassPort {\n\t\tout mass: Mass;\n\t}\n\tport def ComponentPort {\n\t\tout component: Component;\n\t}\n\tpart context {\n\t\tpart user {\n\t\t\tport massPort: MassPort;\n\t\t\tperform aggregateMass.requestTotalMass {\n\t\t\t\tout mass = massPort.mass;\n\t\t\t}\n\t\t}\n\t\tinterface userToModel connect user.massPort to model.massPort {\n\t",
    "package 'VehicleMassManagement' {\n\tattribute def Mass;\n\tattribute def SerialNumber;\n\tattribute def VIN;\n\tclass def Vehicle {\n\t\tattribute def mass: Mass;\n\t\tattribute def vin: VIN;\n\t\tport def massPort: Mass;\n\t\tport def vinPort: VIN;\n\t\tpart component {\n\t\t\tattribute def mass: Mass;\n\t\t\tattribute def serialNumber: SerialNumber;\n\t\t\tport def massPort: Mass;\n\t\t\tport def serialNumberPort: SerialNumber;\n\t\t}",
    "package 'MassAggregation' {\n\tclass def Object {\n\t\tattribute def simpleMass: Real;\n\t\tattribute def totalMass: Real;\n\t}\n\tclass def SimpleThing extends Object {\n\t\tconstraint simpleMass = totalMass;\n\t}\n\tclass def CompositeThing extends Object {\n\t\tpart def subcomponents: Set(Object);\n\t\tconstraint totalMass = simpleMass + sum(subcomponents.totalMass);\n\t}\n\tcontext def MassAggregationContext {\n\t\tpart def objects: Set(Object);\n\t\tconstraint totalMass = sum(objects.totalMass);\n\t}\n}",
    "package 'MassAggregationSystem' {\n\tattribute def Mass;\n\tattribute def BasicMass;\n\tattribute def Subcomponents;\n\tattribute def MinMassThreshold;\n\tattribute def TotalMass;\n\tattribute def FilteredSubcomponents;\n\tport def MassPort {\n\t\tout mass: Mass;\n\t}\n\tport def BasicMassPort {\n\t\tout basicMass: BasicMass;\n\t}\n\tport def SubcomponentsPort {\n\t\tout subcomponents: Subcomponents;\n\t}\n\tport def MinMassThresholdPort {\n\t\tout minMassThreshold: MinM",
    "package 'VehicleDynamics' {\n\tattribute def WheelPower;\n\tattribute def AerodynamicDragCoefficient;\n\tattribute def FrictionCoefficient;\n\tattribute def VehicleMass;\n\tattribute def Speed;\n\tattribute def Time;\n\tattribute def PowerOutput;\n\tattribute def Acceleration;\n\tattribute def Displacement;\n\t\n\tport def WheelPowerPort {\n\t\tout wheelPower: WheelPower;\n\t}\n\tport def AerodynamicDragCoefficientPort {\n\t\tout aerodynamicDragCoefficient: AerodynamicDragCoefficient;\n",
    "package 'VehicleDynamics' {\n\tattribute def WheelEndPower;\n\tattribute def TotalMass;\n\tattribute def InitialSpeed;\n\tattribute def InitialPosition;\n\tattribute def TimeStep;\n\tattribute def AerodynamicDragCoefficient;\n\tattribute def RollingResistanceCoefficient;\n\tattribute def Acceleration;\n\tattribute def Speed;\n\tattribute def Position;\n\tattribute def AvailableDrivingPower;\n\tport def WheelEndPowerPort {\n\t\tout wheelEndPower : WheelEndPower;\n\t}\n\tport def TotalMassPort {\n\t\tout totalMass :",
    "package 'VehicleDynamics' {\n\tattribute def Mass;\n\tattribute def WheelPower;\n\tattribute def DragCoefficient;\n\tattribute def RollingResistanceCoefficient;\n\tattribute def InitialSpeed;\n\tattribute def InitialPosition;\n\tattribute def TimeStep;\n\tattribute def Velocity;\n\tattribute def Acceleration;\n\tattribute def Displacement;\n\tport def InputParametersPort {\n\t\tin mass: Mass;\n\t\tin wheelPower: WheelPower;\n\t\tin dragCoefficient: DragCoefficient;\n\t\tin rollingResistanceCoefficient: RollingResistanceCoefficient;\n\t\tin initialSpeed: InitialSpeed;\n\t\tin initialPosition: InitialPosition;\n\t}\n\tport def TimeStepPort {\n\t\tin timeStep: TimeStep;\n\t}",
    "package 'VehicleDynamicSimulation' {\n\tattribute def InitialPosition;\n\tattribute def InitialVelocity;\n\tattribute def VehicleMass;\n\tattribute def WheelEndDrivePower;\n\tattribute def TimeInterval;\n\tattribute def AirResistanceCoefficient;\n\tattribute def FrictionCoefficient;\n\tattribute def Acceleration;\n\tattribute def FinalVelocity;\n\tattribute def FinalPosition;\n\tport def InputPort {\n\t\tin initialPosition: InitialPosition;\n\t\tin initialVelocity: InitialVelocity;\n\t\tin vehicleMass: VehicleMass;\n\t\tin",
    "package 'VehicleMassManager' {\n\tattribute def Mass;\n\tattribute def OverweightWarning;\n\tport def MassPort {\n\t\tout mass: Mass;\n\t}\n\tport def OverweightWarningPort {\n\t\tout overweightWarning: OverweightWarning;\n\t}\n\tpart context {\n\t\tpart chassis {\n\t\t\tattribute def mass: Mass;\n\t\t}\n\t\tpart engine {\n\t\t\tattribute def mass: Mass;\n\t\t}\n\t\tpart gearbox {\n\t\t\tattribute def mass: Mass;\n\t\t}\n\t\tpart manager {\n\t\t\tperform manageMass.calculateTotalMass {\n\t\t\t\tin chassisMass = chassis.mass;\n\t\t",
    "package 'VehicleMassBudget' {\n\tattribute def Mass;\n\tattribute def EngineMass;\n\tattribute def TransmissionMass;\n\tport def MassPort {\n\t\tout mass: Mass;\n\t}\n\tport def EngineMassPort {\n\t\tout engineMass: EngineMass;\n\t}\n\tport def TransmissionMassPort {\n\t\tout transmissionMass: TransmissionMass;\n\t}\n\tpart context {\n\t\tpart chassis {\n\t\t\tport massPort: MassPort;\n\t\t}\n\t\tpart engine {\n\t\t\tport massPort: MassPort;\n\t\t\tport engineM",
    "package 'VehicleMassCompliance' {\n\tattribute def Mass;\n\tattribute def TotalMass;\n\tport def ChassisMassPort {\n\t\tout chassisMass: Mass;\n\t}\n\tport def EngineMassPort {\n\t\tout engineMass: Mass;\n\t}\n\tport def TransmissionMassPort {\n\t\tout transmissionMass: Mass;\n\t}\n\tport def TotalMassPort {\n\t\tout totalMass: TotalMass;\n\t}\n\tpart context {\n\t\tpart system {\n\t\t\tport chassisMassPort: ChassisMassPort;\n\t\t\tport engineMassPort: EngineMassPort;",
    "package 'VehicleWeightSystem' {\n\tattribute def ChassisWeight;\n\tattribute def EngineWeight;\n\tattribute def TransmissionWeight;\n\tattribute def TotalWeight;\n\tattribute def WeightLimit;\n\tport def ChassisWeightPort {\n\t\tout chassisWeight : ChassisWeight;\n\t}\n\tport def EngineWeightPort {\n\t\tout engineWeight : EngineWeight;\n\t}\n\tport def TransmissionWeightPort {\n\t\tout transmissionWeight : TransmissionWeight;\n\t}\n\tport def TotalWeightPort {\n\t\tout totalWeight : TotalWeight;\n\t}\n\tport def WeightLimitPort {\n\t\tout weightLimit : WeightLimit;\n\t}\n\tpart context {\n\t\tpart vehicleWeightSystem {\n\t\t\tport chassisWeightPort: ChassisWeightPort;",
    "package 'VehicleDesign' {\n\tattribute def Mass;\n\tattribute def Velocity;\n\tattribute def Force;\n\tattribute def Time;\n\tattribute def ChassisMass;\n\tattribute def EngineMass;\n\tattribute def TransmissionMass;\n\tattribute def TotalMass;\n\tattribute def DynamicConstraints;\n\t\n\tport def ChassisPort {\n\t\tout chassisMass: ChassisMass;\n\t}\n\tport def EnginePort {\n\t\tout engineMass: EngineMass;\n\t}\n\tport def TransmissionPort {\n\t\tout transmissionMass: TransmissionMass;\n\t}\n\tport def TotalMassPort {\n\t\tout total",
    "package 'VehicleMaintenance' {\n\tattribute def Time;\n\tattribute def Interval;\n\tattribute def Temperature;\n\tattribute def Status;\n\tattribute def MaintenanceTime;\n\tattribute def HealthStatus;\n\tport def TimePort {\n\t\tout time: Time;\n\t}\n\tport def IntervalPort {\n\t\tout interval: Interval;\n\t}\n\tport def TemperaturePort {\n\t\tout temperature: Temperature;\n\t}\n\tport def StatusPort {\n\t\tout status: Status;\n\t}\n\tport def MaintenanceTimePort {\n\t\tout maintenanceTime: MaintenanceTime;\n\t}\n\tport def HealthStatusPort {\n\t\tout healthStatus:",
    "package 'Vehicle' {\n\tattribute def Mass;\n\tattribute def FuelMass;\n\tattribute def Speed;\n\tattribute def Torque;\n\tattribute def CurbWeight;\n\tattribute def MaxMassLimit;\n\tport def MassPort {\n\t\tout mass: Mass;\n\t}\n\tport def FuelMassPort {\n\t\tout fuelMass: FuelMass;\n\t}\n\tport def SpeedPort {\n\t\tout speed: Speed;\n\t}\n\tport def TorquePort {\n\t\tout torque: Torque;\n\t}\n\tport def CurbWeightPort {\n\t\tout curbWeight: CurbWeight;\n\t}\n\tport def MaxMassLimitPort {\n\t\tout maxMassLimit: MaxMassLimit;\n\t}\n\tpart context {\n\t\tpart vehicle {\n\t\t\tport massPort: MassPort;\n\t\t\tport fuelMassPort: FuelMassPort;\n\t\t\tport speedPort: SpeedPort;\n\t",
    "package 'Vehicle' {\n\tattribute def Mass;\n\tattribute def FuelTank;\n\tattribute def EngineTorque;\n\tattribute def TransmissionTorque;\n\tattribute def Speed;\n\tattribute def TorqueCurve;\n\tport def FuelTankPort {\n\t\tout fuelTank: FuelTank;\n\t}\n\tport def EnginePort {\n\t\tout engineTorque: EngineTorque;\n\t}\n\tport def TransmissionPort {\n\t\tout transmissionTorque: TransmissionTorque;\n\t}\n\tport def SpeedPort {\n\t\tout speed: Speed;\n\t}\n\tport def Torque",
    "package 'Vehicle' {\n\tattribute def Mass;\n\tattribute def FuelCapacity;\n\tattribute def EngineTorque;\n\tattribute def TransmissionTorque;\n\tattribute def Speed;\n\tattribute def Clutch;\n\tport def MassPort {\n\t\tout mass: Mass;\n\t}\n\tport def FuelCapacityPort {\n\t\tout fuelCapacity: FuelCapacity;\n\t}\n\tport def EngineTorquePort {\n\t\tout engineTorque: EngineTorque;\n\t}\n\tport def TransmissionTorquePort {\n\t\tout transmissionTorque: TransmissionTorque;\n\t}\n\tport def SpeedPort {\n\t\tout speed: Speed;\n\t}\n\tport def ClutchPort {\n\t\tout clutch: Clutch;\n\t}\n\tpart context {\n\t",
    "package 'VehicleMassControl' {\n\tattribute def MassLimit;\n\tattribute def FuelTankStatus;\n\tattribute def TorqueCharacteristics;\n\tattribute def CurbMass;\n\tattribute def FuelMass;\n\tattribute def TotalVehicleMass;\n\tattribute def EngineTorque;\n\tattribute def ClutchInterface;\n\tattribute def Gearbox;\n\tport def MassLimitPort {\n\t\tout massLimit: MassLimit;\n\t}\n\tport def FuelTankStatusPort {\n\t\tout fuelTankStatus: FuelTankStatus;\n\t}\n\tport def TorqueCharacteristicsPort {\n\t\tout torqueCharacteristics: TorqueCharacteristics;\n\t",
    "package 'VehiclePerformanceAnalysis' {\n\tattribute def VehicleAttributes;\n\tattribute def DrivingCycle;\n\tattribute def EnginePower;\n\tattribute def Acceleration;\n\tattribute def Speed;\n\tattribute def Position;\n\tattribute def FuelEconomy;\n\tattribute def EnergyConsumptionTarget;\n\tport def VehicleAttributesPort {\n\t\tout vehicle",
    "package 'VehicleFuelEconomySimulation' {\n\tattribute def Scenario;\n\tattribute def VehicleParam;\n\tattribute def DrivingTrajectory;\n\tattribute def SpeedVariation;\n\tattribute def WheelPower;\n\tattribute def VehicleDynamics;\n\tattribute def EnginePowerDemand;\n\tattribute def FuelConsumption;\n\tattribute def FuelEconomy;\n\tport def ScenarioPort {\n\t\tout scenario: Scenario;\n\t}\n\tport def VehicleParamPort {\n\t\tout vehicleParam: VehicleParam;\n\t}\n\tport def DrivingTrajectoryPort {\n\t\tout drivingTrajectory",
    "package 'EngineSelection' {\n\tattribute def EngineType;\n\tattribute def KPIs;\n\tattribute def Evaluation;\n\tattribute def Recommendation;\n\tport def EngineTypePort {\n\t\tout engineType : EngineType;\n\t}\n\tport def KPIsPort {\n\t\tout kPIs : KPIs;\n\t}\n\tport def EvaluationPort {\n\t\tout evaluation : Evaluation;\n\t}\n\tport def RecommendationPort {\n\t\tout recommendation : Recommendation;\n\t}\n\tpart context {\n\t\tpart engineType {\n\t\t\tport engineTypePort: EngineTypePort;\n\t\t\tperform analyzeEngine.aggregateKPIs {\n\t\t\t\tout engineType = engineTypePort.engineType;\n\t\t\t}\n\t\t}\n\t\tpart kPIs {\n\t\t\tport kPIsPort: KPIsPort;",
    "package 'VehicleQualityCheck' {\n\tattribute def WeightData;\n\tattribute def ProcessedData;\n\tattribute def EvaluationResult;\n\tport def WeightDataPort {\n\t\tout weightData: WeightData;\n\t}\n\tport def ProcessedDataPort {\n\t\tout processedData: ProcessedData;\n\t}\n\tport def EvaluationResultPort {\n\t\tout evaluationResult: EvaluationResult;\n\t}\n\tpart context {\n\t\tpart vehicle {\n\t\t\tport weightDataPort: WeightDataPort;\n\t\t\tperform checkQuality.collectWeightData {\n\t\t\t\tout weightData = weightDataPort.weightData;\n\t\t\t}\n\t\t}\n\t\tpart testSystem {\n\t\t\tport weightDataPort: ~WeightDataPort;\n\t\t\tport processedDataPort: ProcessedDataPort;\n\t\t",
    "package 'VehicleMassVerification' {\n\tattribute def Mass;\n\tattribute def Qualified;\n\tattribute def Unqualified;\n\tport def MassPort {\n\t\tout mass: Mass;\n\t}\n\tport def QualificationPort {\n\t\tout qualified: Qualified;\n\t\tout unqualified: Unqualified;\n\t}\n\tpart context {\n\t\tpart vehicle {\n\t\t\tport massPort: MassPort;\n\t\t}\n\t\tpart weighingEquipment {\n\t\t\tport massPort: ~MassPort;\n\t\t\tperform measureMass {\n\t\t\t\tout mass",
    "package 'TransportationSystem' {\n\tattribute def Passenger;\n\tattribute def Driver;\n\tattribute def Environment;\n\tattribute def Infrastructure;\n\tport def PassengerPort {\n\t\tout passenger: Passenger;\n\t}\n\tport def DriverPort {\n\t\tout driver: Driver;\n\t}\n\tport def EnvironmentPort {\n\t\tout environment: Environment;\n\t}\n\tport def InfrastructurePort {\n\t\tout infrastructure: Infrastructure;\n\t}\n\tpart context {\n\t\tpart user {\n\t\t\tport passengerPort: PassengerPort;\n\t\t\tport driverPort: DriverPort;\n\t\t\tperform transportationProcess.enterExitVehicle {\n\t\t\t\tout passenger = passengerPort.passenger;\n",
    "package 'TransportationSystem' {\n\tattribute def EnterVehicle;\n\tattribute def OperateVehicle;\n\tattribute def Refuel;\n\tattribute def ExitVehicle;\n\tport def EnterVehiclePort {\n\t\tout enterVehicle: EnterVehicle;\n\t}\n\tport def OperateVehiclePort {\n\t\tout operateVehicle: OperateVehicle;\n\t}\n\tport def RefuelPort {\n\t\tout refuel: Refuel;\n\t}\n\tport def ExitVehiclePort {\n\t\tout exitVehicle: ExitVehicle;\n\t}\n\tpart context {\n\t\tpart driver {\n\t\t\tport enterVehiclePort: EnterVehiclePort;\n\t\t\tport operateVehiclePort: OperateVehiclePort;\n\t\t\tport refuelPort: RefuelPort;\n\t\t\tport exitV",
    "package 'VehicleProductLine' {\n\tattribute def EngineType;\n\tattribute def TransmissionType;\n\tattribute def CylinderDiameter;\n\tattribute def Engine;\n\tattribute def Transmission;\n\tattribute def Vehicle;\n\tport def EngineTypePort {\n\t\tout engineType: EngineType;\n\t}\n\tport def TransmissionTypePort {\n\t\tout transmissionType: TransmissionType;\n\t}\n\tport def CylinderDiameterPort {\n\t\tout cylinderDiameter: CylinderD",
    "package 'ConfigurableEngine' {\n\tattribute def Cylinder;\n\tattribute def EngineVariant;\n\tattribute def CylinderCount;\n\tattribute def CylinderDiameter;\n\tport def CylinderPort {\n\t\tout cylinder: Cylinder;\n\t}\n\tport def EngineVariantPort {\n\t\tout engineVariant: EngineVariant;\n\t}\n\tport def CylinderCountPort {\n\t\tout cylinderCount: CylinderCount;\n\t}\n\tport def CylinderDiameterPort {\n\t\tout cylinderDiameter: CylinderDiameter;\n\t}\n\tpart context {\n\t\tpart user {\n\t\t\tport cylinderPort: CylinderPort;\n\t\t\tport engineVariantPort: EngineVariantPort;\n\t\t\tport cylinderCountPort: CylinderCount",
    "package 'AutomotiveConfigSpace' {\n\tattribute def EngineType;\n\tattribute def TransmissionType;\n\tattribute def CylinderDiameter;\n\tattribute def CylinderCount;\n\tattribute def Engine;\n\tattribute def Transmission;\n\tattribute def Vehicle;\n\tport def EngineTypePort {\n\t\tout engineType: EngineType;\n\t}\n\tport def TransmissionTypePort {\n\t\tout transmissionType: TransmissionType;\n\t}\n\tport def CylinderDiameterPort {\n\t\tout cylinderDiameter: CylinderDiameter",
    "package 'SystemAssembly' {\n\tattribute def MessageFormat;\n\tattribute def DataFormat;\n\tport def MessageFormatPort {\n\t\tout messageFormat : MessageFormat;\n\t}\n\tport def DataFormatPort {\n\t\tout dataFormat : DataFormat;\n\t}\n\tpart context {\n\t\tpart softwareDesign {\n\t\t\tperform defineFormats {\n\t\t\t\tout messageFormat = messageFormatPort.messageFormat;\n\t\t\t\tout dataFormat = dataFormatPort.dataFormat;\n\t\t\t}\n\t\t}\n\t\tpart computerSubsystem {\n\t\t\tport messageFormatPort: ~MessageFormatPort;\n\t\t\tport dataFormatPort: ~DataFormatPort;\n\t\t\tperform integrateFunctions {\n\t\t\t\tin messageFormat = messageFormatPort.messageFormat;\n\t\t\t\tin dataFormat = dataFormatPort.dataFormat",
    "package 'PowertrainSystem' {\n\tattribute def Power;\n\tattribute def Torque;\n\tattribute def LogicalComponent;\n\tattribute def PhysicalComponent;\n\tport def PowerPort {\n\t\tout power: Power;\n\t}\n\tport def TorquePort {\n\t\tout torque: Torque;\n\t}\n\tport def LogicalComponentPort {\n\t\tout logicalComponent: LogicalComponent;\n\t}\n\tport def PhysicalComponentPort {\n\t\tout physicalComponent: PhysicalComponent;\n\t}\n\tpart context {\n\t\tpart logicalLayer {\n\t\t\tpart torqueGenerator {\n\t\t\t\tperform",
    "package 'PowerTransmissionSystem' {\n\tattribute def Power;\n\tattribute def Torque;\n\tport def PowerPort {\n\t\tout power: Power;\n\t}\n\tport def TorquePort {\n\t\tout torque: Torque;\n\t}\n\tpart context {\n\t\tpart torqueGenerator {\n\t\t\tperform generateTorque {\n\t\t\t\tout torque: Torque;\n\t\t\t}\n\t\t}\n\t\tpart powertrain {\n\t\t\tpart engine {\n\t\t\t\tperform generateTorque {\n\t\t\t\t\tin torque: Torque;\n\t\t\t\t}\n\t\t\t}\n\t",
    "package 'VehicleFeatureAnnotationSystem' {\n\tattribute def SeatBelt;\n\tattribute def DriverAirbag;\n\tattribute def Bumper;\n\tattribute def AlarmSystem;\n\tattribute def KeylessEntrySystem;\n\tattribute def InteriorComponent;\n\tattribute def BodyAssemblyComponent;\n\t\n\tport def SeatBeltPort {\n\t\tout seatBelt: SeatBelt;\n\t}\n\tport def DriverAirbagPort {\n\t\tout driverAirbag: DriverAirbag;\n\t}\n\tport def BumperPort {\n\t\tout bumper: Bumper;",
    "package 'VehicleDynamicSimulation' {\n\tattribute def InitialVelocity;\n\tattribute def InitialPosition;\n\tattribute def Acceleration;\n\tattribute def TimeStep;\n\tattribute def Velocity;\n\tattribute def Position;\n\tport def InputPort {\n\t\tin initialVelocity: InitialVelocity;\n\t\tin initialPosition: InitialPosition;\n\t\tin acceleration: Acceleration;\n\t\tin timeStep: TimeStep;\n\t}\n\tport def OutputPort {\n\t\tout velocity: Velocity;\n\t\tout position: Position;\n\t}\n\tpart context {\n\t\tpart user {\n\t\t\tport inputPort: InputPort;\n\t\t\tperform performSimulation {\n\t\t\t\tin initialVelocity = inputPort.initialVelocity;\n\t\t\t\tin initialPosition = inputPort.initialPosition;\n\t\t\t\tin acceleration = inputPort.acceleration;\n\t\t",
    "package 'Car Safety Compliance' {\n\tattribute def SeatBelt;\n\tattribute def Airbag;\n\tattribute def Bumper;\n\tattribute def KeylessEntry;\n\tattribute def Wheel;\n\tattribute def ABS;\n\tattribute def isMandatory;\n\tattribute def Safety;\n\tport def SeatBeltPort {\n\t\tout seatBelt : Se",
    "package 'VehicleSafetyComplianceSystem' {\n\tattribute def SeatBelt;\n\tattribute def DriverAirbag;\n\tattribute def Bumper;\n\tattribute def KeylessEntrySystem;\n\tattribute def Tire;\n\tattribute def AntiLockBrakingSystem;\n\tattribute def SafetyFeature;\n\tattribute def Mandatory;\n\tattribute def NonMandatory;\n\t\n\tport def SeatBeltPort {\n\t\tout seatBelt1: SeatBelt;\n\t\tout seatBelt2: SeatBelt;\n\t}\n\tport def DriverAirbagPort {\n",
    "package 'RiskManagementSystem' {\n\tattribute def Cause;\n\tattribute def Failure;\n\tattribute def Probability;\n\tattribute def Severity;\n\tattribute def CausalRelationship;\n\tattribute def RiskScenario;\n\tport def CausePort {\n\t\tout cause: Cause;\n\t}\n\tport def FailurePort {\n\t\tout failure: Failure;\n\t}\n\tport def ProbabilityPort {\n\t\tout probability: Probability;\n\t}\n\tport def SeverityPort {\n\t\tout severity: Severity;\n\t}\n\tport def CausalRelationshipPort {\n\t\tout causalRelationship: CausalRelationship;\n\t}\n\tport def RiskScenarioPort {\n\t\tout riskScenario: RiskScenario;\n\t}",
    "package 'RiskMetadataManagement' {\n\tattribute def Scenario;\n\tattribute def Cause;\n\tattribute def Failure;\n\tattribute def Probability;\n\tattribute def Severity;\n\tattribute def CausalRelationship;\n\tattribute def RiskScenario;\n\tport def ScenarioPort {\n\t\tout scenario: Scenario;\n\t}\n\tport def CausePort {\n\t\tout cause: Cause;\n\t\tout probability: Probability;\n\t}\n\tport def FailurePort {\n\t\tout failure: Failure;\n\t\tout severity: Severity;\n\t}\n\tport def CausalRelationshipPort {\n\t\tout caus",
    "package 'RiskAnalysisSystem' {\n\tattribute def BatteryLevel;\n\tattribute def RiskLevel;\n\tattribute def SystemState;\n\tport def BatteryLevelPort {\n\t\tout batteryLevel : BatteryLevel;\n\t}\n\tport def RiskLevelPort {\n\t\tout riskLevel : RiskLevel;\n\t}\n\tport def SystemStatePort {\n\t\tout systemState : SystemState;\n\t}\n\tpart context {\n\t\tpart equipment {\n",
    "package 'System' {\n\tattribute def TopDownHierarchy;\n\tattribute def Interface;\n\tport def TopDownHierarchyPort {\n\t\tout topDownHierarchy : TopDownHierarchy;\n\t}\n\tport def InterfacePort {\n\t\tout interface: Interface;\n\t}\n\tpart context {\n\t\tpart systemEngineer {\n\t\t\tport topDownHierarchyPort: TopDownHierarchyPort;\n\t\t\tperform structuralDecomposition.analyzeSystem {\n\t\t\t\tout topDownHierarchy = topDownHierarchyPort.topDownHierarchy;\n\t\t\t}\n\t\t}\n\t\tinterface systemEngineerToSystem connect systemEngineer.topDownHierarchyPort to system.topDownHierarchyPort {\n\t\t\t",
    "package 'AutomotiveSystem' {\n\tattribute def SafetyAttribute;\n\tattribute def ComponentType;\n\tattribute def Hierarchy;\n\tattribute def Mandatory;\n\tattribute def Optional;\n\tattribute def SeatBelt;\n",
    "package 'Automotive_Domain' {\n\talias Car = Automobile;\n\tclass Automobile {\n\t\tattribute def Torque;\n\t\tattribute def Speed;\n\t\tattribute def Acceleration;\n\t\tattribute def Weight;\n\t\tattribute def Dimensions;\n\t\tattribute def Color;\n\t\tattribute def Brand;\n\t\tattribute def Model;\n\t\tattribute def Year;\n\t\tattribute def FuelType;\n\t\tattribute def EngineSize;\n\t\tattribute def TransmissionType;\n\t\tattribute def DriveTrainType;\n\t\tattribute def NumberOfDoors;\n\t\tattribute def NumberOfSeats;\n\t\tattribute def SafetyRating;\n\t\tattribute def AirbagCount;\n\t\tattribute def AntiLockBrakingSystem;\n\t\tattribute def Stability",
    "package 'AutomobileDocumentManagement' {\n\tclass def Automobile {\n\t\tattribute def name;\n\t\tattribute def info;\n\t\tattribute def alias;\n\t\tattribute def TorqueValue;\n\t\tattribute def explanatoryDocument;\n\t}\n\tclass def Car {\n\t\tattribute def name;\n\t\tattribute def info;\n\t\tattribute def alias;\n\t\tattribute def TorqueValue;\n\t\tattribute def explanatoryDocument;\n\t}\n\tport def AutomobilePort {\n\t\tout automobile: Automobile;\n\t}\n\tport def CarPort {\n\t\t",
    "package 'Automobile' {\n\tattribute def Car;\n\tattribute def TorqueValue;\n\tattribute def Torque;\n\tport def CarPort {\n\t\tout car: Car;\n\t}\n\tport def TorqueValuePort {\n\t\tout torqueValue: TorqueValue;\n\t}\n\tport def TorquePort {\n\t\tout torque: Torque;\n\t}\n\tpart context {\n\t\tpart user {\n\t\t\tport carPort: CarPort;\n\t\t\tperform automobileDataManagement.sendCar {\n\t\t\t\tout car = carPort.car;\n\t\t\t}\n\t\t}\n\t\tinterface userToAutomobile connect user.carPort to automobile.carPort {\n\t\t\tref flow references automobileDataManagement.carFlow\n\t\t\t\tfrom source.car to target.car; \n\t\t",
    "package 'Vehicle' {\n\tattribute def Engine;\n\tattribute def Cylinder;\n\tattribute def VehicleSize;\n\tport def EnginePort {\n\t\tout engine: Engine;\n\t}\n\tport def CylinderPort {\n\t\tout cylinder: Cylinder;\n\t}\n\tport def VehicleSizePort {\n\t\tout vehicleSize: VehicleSize;\n\t}\n\tpart context {\n\t\tpart user {\n\t\t\tport enginePort: EnginePort;\n\t\t\tport vehicleSizePort: VehicleSizePort;\n\t\t\tperform configureEngine.sendVehicleSize {\n\t\t\t\tout vehicleSize = vehicleSizePort.vehicleSize;\n\t\t\t}\n\t\t}\n\t\tinterface userToEngine connect user.enginePort to engine.enginePort {\n\t\t\tref flow references configureEngine.engineFlow\n\t\t\t\tfrom source.engine to target.engine; \n\t\t}\n\t",
    "package 'FuelManagementSystem' {\n\tattribute def FuelFlow;\n\tattribute def FuelTemp;\n\tattribute def FuelInterface;\n\tport def FuelFlowPort {\n\t\tout fuelFlow: FuelFlow;\n\t}\n\tport def FuelTempPort {\n\t\tout fuelTemp: FuelTemp;\n\t}\n\tport def FuelInterfacePort {\n\t\tout fuelInterface: FuelInterface;\n\t}\n\tpart context {\n\t\tpart fuelTank {\n\t\t\tport fuelFlowPort: FuelFlowPort;\n\t\t\tperform manageFuelFlow {\n\t\t\t\tout fuelFlow = fuelFlowPort.fuelFlow;\n\t\t\t}\n\t\t}\n\t\tpart engine {\n\t\t\tport fuelFlowPort: ~FuelFlowPort;\n\t\t\tperform receiveFuel {\n\t\t\t\tin fuelFlow = fuelFlowPort.fuelFlow;\n\t\t\t}\n\t\t}\n\t\tpart fuelInterface {\n\t\t\tport fuelFlowPort: ~FuelFlowPort;\n\t\t\tperform manageFuelFlow {",
    "package 'Vehicle' {\n\tattribute def Mass;\n\tattribute def AxleAssembly;\n\tattribute def FrontAxle;\n\tattribute def RearAxle;\n\tattribute def Wheel;\n\tattribute def SteeringAngle;\n\tattribute def AxleType;\n\tattribute def AxleName;\n\tport def MassPort {\n\t\tout mass : Mass;\n\t}\n\tport def AxleAssemblyPort {\n\t\tout axleAssembly : AxleAssembly;\n\t}\n\tport def FrontAxlePort {\n\t\t"
]