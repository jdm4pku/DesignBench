[
    "package 'Vehicle' {\n\tattribute def VehicleMass;\n\tattribute def VehicleStatus;\n\tattribute def Engine;\n\tattribute def Driver;\n\tport def VehicleStatusPort {\n\t\tout vehicleStatus: VehicleStatus;\n\t}\n\tport def EnginePort {\n\t\tout engine: Engine;\n\t}\n\tport def DriverPort {\n\t\tout driver: Driver;\n\t}\n\tpart context {\n\t\tpart vehicle {\n\t\t\tport vehicleStatusPort: VehicleStatusPort;\n\t\t\tport enginePort: EnginePort;\n\t\t\tport driverPort: DriverPort;\n\t\t\tperform vehicle.setVehicleStatus {\n\t\t\t\tin vehicleStatus = vehicleStatusPort.vehicleStatus;\n\t\t\t}\n\t\t\tperform vehicle.setEngine {\n\t\t\t\tin engine = enginePort.engine;\n\t\t\t}\n\t\t\tperform vehicle.setDriver {\n\t\t",
    "package 'Vehicle' {\n\tattribute def Personnel;\n\tattribute def Engine;\n\tattribute def Vehicle;\n\tport def PersonnelPort {\n\t\tout personnel: Personnel;\n\t}\n\tport def EnginePort {\n\t\tout engine: Engine;\n\t}\n\tport def VehiclePort {\n\t\tout vehicle: Vehicle;\n\t}\n\tpart context {\n\t\tpart personnel {\n\t\t\tport personnelPort: PersonnelPort;\n\t\t}\n\t\tpart engine {\n\t\t\tport enginePort: EnginePort;\n\t\t}\n\t\tpart vehicle {\n\t\t\tport vehiclePort: VehiclePort;\n\t\t}\n\t\tinterface personnelToVehicle connect personnel.personnelPort to vehicle.personnelPort {\n\t\t\tref flow references driveVehicle.person",
    "package 'Vehicle' {\n\tattribute def VehicleComponent;\n\tattribute def Engine;\n\tattribute def Transmission;\n\tattribute def Wheel;\n\tport def VehicleComponentPort {\n\t\tout vehicleComponent: VehicleComponent;\n\t}\n\tport def EnginePort {\n\t\tout engine: Engine;\n\t}\n\tport def TransmissionPort {\n\t\tout transmission: Transmission;\n\t}\n\tport def WheelPort {\n\t\tout wheel: Wheel;\n\t}\n\tpart context {\n\t\tpart vehicle {\n\t\t\tport vehicleComponentPort: VehicleComponentPort;\n\t\t\tperform vehicle.addVehicleComponent {\n\t\t\t\tin vehicleComponent = vehicleComponentPort.vehicleComponent;\n\t\t\t}\n\t\t\tperform vehicle.removeVehicleComponent {\n\t\t\t",
    "package 'Vehicle' {\n\tattribute def VehicleType;\n\tattribute def EngineType;\n\tport def VehicleTypePort {\n\t\tout vehicleType: VehicleType;\n\t}\n\tport def EngineTypePort {\n\t\tout engineType: EngineType;\n\t}\n\tpart context {\n\t\tpart user {\n\t\t\tport vehicleTypePort: VehicleTypePort;\n\t\t\tperform vehicle.sendVehicleType {\n\t\t\t\tout vehicleType = vehicleTypePort.vehicleType;\n\t\t\t}\n\t\t\tport engineTypePort: EngineTypePort;\n\t\t\tperform vehicle.sendEngineType {\n\t\t\t\tout engineType = engineTypePort.engineType;\n\t\t\t}\n\t\t}\n\t",
    "package 'TrafficSignalSystem' {\n\tattribute def Color;\n\tattribute def Green;\n\tport def ColorPort;\n\tport def GreenPort;\n\tpart context {\n\t\tpart trafficSignal {\n\t\t\tport colorPort: ColorPort;\n\t\t\tport greenPort: GreenPort;\n\t\t\tperform trafficSignal.setColor {\n\t\t\t\tin color = colorPort.color;\n\t\t\t}\n\t\t\tperform trafficSignal.setGreen {\n\t\t\t\tin green = greenPort.green;\n\t\t\t}\n\t\t}\n\t\tpart trafficLight {\n\t\t\tport colorPort: ~ColorPort;\n\t\t\tport greenPort: ~GreenPort;\n\t\t\tperform trafficLight.setColor {\n\t\t\t\tin color = colorPort.color;\n\t\t\t}\n\t\t\tperform trafficLight.setGreen {\n\t\t\t\tin green = greenPort.green;\n\t\t\t}\n\t\t}\n\t}\n\taction trafficSignal {\n\t\taction setColor {",
    "package 'Information Classification Management' {\n\tattribute def Classification;\n\tattribute def Grade;\n\tport def ClassificationPort {\n\t\tout classification: Classification;\n\t}\n\tport def GradePort {\n\t\tout grade: Grade;\n\t}\n\tpart context {\n\t\tpart user {\n\t\t\tport classificationPort: ClassificationPort;\n\t\t\tperform classifyInformation.sendClassification {\n\t\t\t\tout classification = classificationPort.classification;\n\t\t\t}\n\t\t\tport gradePort: GradePort;\n\t\t\tperform classify",
    "package 'Vehicle' {\n\tattribute def Engine;\n\tattribute def Cylinder;\n\tport def EnginePort {\n\t\tout engine: Engine;\n\t}\n\tport def CylinderPort {\n\t\tout cylinder: Cylinder;\n\t}\n\tpart context {\n\t\tpart vehicle {\n\t\t\tport enginePort: EnginePort;\n\t\t\tperform vehicle.produceEngine {\n\t\t\t\tout engine = enginePort.engine;\n\t\t\t}\n\t\t\tport cylinderPort: CylinderPort;\n\t\t\tperform vehicle.produceCylinder {\n\t\t\t\tout cylinder = cylinderPort.cylinder;\n\t\t\t}\n\t\t}\n\t\tpart engine {\n\t\t\tport cylinderPort: ~CylinderPort;\n\t\t\tperform engine.produceCylinder {\n\t\t\t\tout cylinder = cylinderPort.cyl",
    "package 'VehicleModeling' {\n\tattribute def Vehicle;\n\tattribute def Driver;\n\tattribute def Fuel;\n\tattribute def Personnel;\n\tport def VehiclePort {\n\t\tout vehicle: Vehicle;\n\t}\n\tport def DriverPort {\n\t\tout driver: Driver;\n\t}\n\tport def FuelPort {\n\t\tout fuel: Fuel;\n\t}\n\tport def PersonnelPort {\n\t\tout personnel: Personnel;\n\t}\n\tpart context {\n\t\tpart vehicle {\n\t\t\tport vehiclePort: VehiclePort;\n\t\t\tperform vehicleModeling.produceVehicle {\n\t\t\t\tout vehicle = vehiclePort.vehicle;\n\t\t\t}\n\t\t\tport driverPort: DriverPort;\n\t\t\tperform vehicleModeling.produceDriver {\n\t\t\t\tout driver = driverPort.driver;\n\t\t\t}\n\t\t\tport fuelPort",
    "package 'Wheel Assembly' {\n\tattribute def Bead;\n\tattribute def Hub;\n\tattribute def Rim;\n\tattribute def Bolt;\n\tattribute def ThreadedHole;\n\tattribute def BoltMountingHole;\n\tattribute def Tire;\n\tport def BeadPort {\n\t\tout bead: Bead;\n\t}\n\tport def HubPort {\n\t\tout hub: Hub;\n\t}\n\tport def RimPort {\n\t\tout rim: Rim;\n\t}\n\tport def BoltPort {\n\t\tout bolt: Bolt;\n\t}\n\tport def ThreadedHolePort {\n\t\tout threadedHole: ThreadedH",
    "package 'FuelFlowManagement' {\n\tattribute def Fuel;\n\tattribute def Temperature;\n\tport def FuelTankPort {\n\t\tin fuel: Fuel;\n\t\tout fuel: Fuel;\n\t}\n\tport def EnginePort {\n\t\tin fuel: Fuel;\n\t\tout fuel: Fuel;\n\t}\n\tport def TemperaturePort {\n\t\tin temperature: Temperature;\n\t\tout temperature: Temperature;\n\t}\n\tpart context {\n\t\tpart user {\n\t\t\tport fuelTankPort: FuelTankPort;\n\t\t\tport temperaturePort: TemperaturePort;\n\t\t\tperform fuelFlowManagement.obtainFuelFlowData {\n\t\t\t\tin fuel = fuelTankPort.fuel;\n\t\t\t\tin temperature = temperaturePort.temperature;\n\t\t\t}",
    "package 'Vehicle' {\n\tattribute def Mass;\n\tattribute def SteeringAngle;\n\tattribute def Tire;\n\tport def MassPort;\n\tport def SteeringAnglePort;\n\tport def TirePort;\n\tpart context {\n\t\tpart vehicle {\n\t\t\tport massPort: MassPort;\n\t\t\tport steeringAnglePort: SteeringAnglePort;\n\t\t\tport tirePort: TirePort;\n\t\t",
    "package 'CouplingSystem' {\n\tattribute def Vehicle;\n\tattribute def Trailer;\n\tattribute def Hitch;\n\tport def VehiclePort {\n\t\tout vehicle: Vehicle;\n\t}\n\tport def TrailerPort {\n\t\tout trailer: Trailer;\n\t}\n\tport def HitchPort {\n\t\tout hitch: Hitch;\n\t}\n\tpart context {\n\t\tpart vehicle {\n\t\t\tport vehiclePort: VehiclePort;\n\t\t\tperform connectVehicle.connectVehicle {\n",
    "package 'VehiclePowerTransmissionSystem' {\n\tattribute def FuelCmd;\n\tattribute def Power;\n\tattribute def ClutchCmd;\n\tattribute def Driv",
    "package 'Multi-Architecture System' {\n\tattribute def Signal;\n\tport def SignalPort {\n\t\tout signal: Signal;\n\t}\n\t",
    "package 'AutomotivePowertrain' {\n\tattribute def FuelCmd;\n\tattribute def EngineStartStopCmd;\n\tattribute def Torque;\n\tport def FuelCmdPort {\n\t\tout fuelCmd: FuelCmd;\n\t}\n\tport def EngineStartStopCmdPort {\n\t\tout engineStartStopCmd: EngineStartStopCmd;\n\t}\n\tport def TorquePort {\n\t\tout torque: Torque;\n\t}\n\tpart context {\n\t\tpart user {\n\t\t\tport fuelCmdPort: FuelCmdPort;\n\t\t\tport engineStartStopCmdPort: EngineStartStopCmdPort;\n\t\t\tperform controlP",
    "package 'Automotive Powertrain' {\n\tattribute def FuelCmd;\n\tattribute def Torque;\n\tport def FuelCmdPort {\n\t\tout fuelCmd : FuelCmd;\n\t}\n\tport def TorquePort {\n\t\tout torque: Torque;\n\t}\n\tpart context {\n\t\tpart user {\n\t\t\tport fuelCmdPort: FuelCmdPort;\n\t\t\tperform powertrain.sendFuelCmd {\n\t\t\t\tout fuelCmd = fuelCmdPort.fuelCmd;\n\t\t\t}\n\t\t}\n\t\tinterface userToPowertrain connect user.fuelCmdPort to powertrain.fuelCmdPort {\n\t\t\tref flow references powertrain.fuel",
    "package 'Vehicle Powertrain System' {\n\tattribute def EngineStartSignal;\n\tattribute def EngineShutdownSignal;\n\tattribute def FuelCommand;\n\tattribute def EngineOutputTorque;\n\tattribute def TransmissionOutputTorque;\n\tattribute def WheelOutputTorque;\n\tport def EngineStartSignalPort {\n\t\tin engineStartSignal : EngineStartSignal;\n\t}\n\tport def EngineShutdownSignalPort {\n\t\tin engineShutdownSignal : EngineShutdownSignal;\n\t}\n\tport def FuelCommandPort {\n\t\tin fuelCommand : FuelCommand;\n\t}\n\tport def EngineOutputTorquePort {\n\t\tout engineOutputTorque : EngineOutputTorque;\n",
    "package 'PowerConnectionAndDisconnectionMechanism' {\n\tattribute def Vehicle;\n\tattribute def Trailer;\n\tattribute def HitchBall;\n\tattribute def TrailerCoupler;\n\tport def VehiclePort {\n\t\tout vehicle: Vehicle;\n\t}\n\tport def TrailerPort {\n\t\tout trailer: Trailer;\n\t}\n\tport def HitchBallPort {\n\t\tout hitchBall: HitchBall;\n\t}\n\tport def TrailerCouplerPort {\n\t\tout trailerCoupler: TrailerCoupler;\n\t}\n\tpart context {\n\t\tpart user {\n\t\t\tport vehiclePort: VehiclePort;\n\t\t\tport trailerPort: TrailerPort;\n\t\t\tport hitchBallPort: HitchBall",
    "package 'VehicleTrailerConnectionSystem' {\n\tattribute def ConnectionStatus;\n\tport def VehicleChassisPort {\n\t\tout towBall: TowBall;\n\t}\n\tport def TrailerCouplerPort {\n\t\tout coupler: Coupler;\n\t}\n\tport def TrailerFramePort {\n\t\tout trailerFrame: TrailerFrame;\n\t}\n\tpart context {\n\t\tpart vehicle {\n\t\t\tport chassisPort: ~VehicleChassisPort;\n\t\t\tport towBallPort: ~TowBallPort;\n\t\t\tperform vehicle.connect",
    "package 'TowingSystem' {\n\tattribute def TowBall;\n\tattribute def TrailerChassis;\n\tattribute def Coupler;\n\tport def TowBallPort {\n\t\tout towBall: TowBall;\n\t}\n\tport def TrailerChassisPort {\n\t\tout trailerChassis: TrailerChassis;\n\t}\n\tport def CouplerPort {\n\t\tout coupler: Coupler;\n\t}\n\tpart context {\n\t\tpart vehicle {\n\t\t\tport towBallPort: TowBallPort;\n\t\t\tport couplerPort: CouplerPort;\n\t\t\tperform hitching.connectTowBall {\n\t\t\t\tout to",
    "package 'FuelSystem' {\n\tattribute def Fuel;\n\tattribute def Temperature;\n\tport def FuelSupplyPort {\n\t\tout fuel: Fuel;\n\t}\n\tport def FuelReturnPort {\n\t\tin fuel: Fuel;\n\t}\n\tport def TemperaturePort {\n\t\tin temperature: Temperature;\n\t}\n\tpart context {\n\t\tpart fuelTank {\n\t\t\tport fuelSupplyPort: FuelSupplyPort;\n\t\t\tport fuelReturnPort: FuelReturnPort;\n\t\t\tperform fuelFlow.provideFuel {\n\t\t\t\tout fuel = fuelSupplyPort.fuel;\n\t\t\t}\n\t\t\tperform fuelFlow.returnFuel {\n\t\t\t\tin fuel = fuelReturnPort.fuel",
    "package 'FuelDeliverySystem' {\n\tattribute def Fuel;\n\tattribute def FuelLevel;\n\tport def FuelPumpPort {\n\t\tout fuel: Fuel;\n\t}\n\tport def FuelTankPort {\n\t\tin fuel: Fuel;\n\t\tout fuelLevel: FuelLevel;\n\t}\n\tpart context {\n\t\tpart storageTank {\n\t\t\tport fuelPumpPort: FuelPumpPort;\n\t\t\tperform fuelDelivery.extractFuel {\n\t\t\t\tout fuel = fuelPumpPort.fuel;\n\t\t\t}\n\t\t}\n\t\tinterface storageTank",
    "package 'AutomobileAssembly' {\n\tattribute def VehicleAssembly;\n\tattribute def Gearbox;\n\tattribute def Engine;\n\tport def VehicleAssemblyPort {\n\t\tout vehicleAssembly: VehicleAssembly;\n\t}\n\tport def GearboxPort {\n\t\tout gearbox: Gearbox;\n\t}\n\tport def EnginePort {\n\t\tout engine: Engine;\n\t}\n\tpart context {\n\t\tpart assemblyLine {\n\t\t\tport vehicleAssemblyPort: VehicleAssemblyPort;\n\t\t\tport gearboxPort: Gearbox",
    "package 'VehicleA' {\n\tattribute def StartSignal;\n\tattribute def VehicleOnSignal;\n\t",
    "package 'VehicleSystem' {\n\tattribute def Vehicle;\n\tattribute def VehicleController;\n\tport def VehiclePort {\n\t\tout vehicle: Vehicle;\n\t}\n\tport def VehicleControllerPort {\n\t\tout vehicleController: VehicleController;\n\t}\n\tpart context {\n\t\tpart vehicle {\n\t\t\tport vehiclePort: VehiclePort;\n\t\t\tperform vehicle",
    "package 'VehicleDynamics' {\n\tattribute def Vehicle;\n\tattribute def Road;\n\tport def VehiclePort {\n\t\tout vehicle: Vehicle;\n\t}\n\tport def RoadPort {\n\t\tout road: Road;\n\t}\n\tpart context {\n\t\tpart user {\n\t\t\tport vehiclePort: VehiclePort;\n\t\t\tperform vehicleDynamics.setVehicle {\n\t\t\t\tout vehicle = vehiclePort.vehicle;\n\t\t\t}\n\t\t\tport roadPort: RoadPort;\n\t\t\tperform vehicleDynamics.setRoad {\n\t\t\t\tout road = roadPort.road;\n\t\t\t}\n\t\t}\n\t\tinterface userToVehicle",
    "package 'Configuration Management System' {\n\tattribute def Configuration;\n\tport def ConfigurationPort {\n\t\tout configuration: Configuration",
    "package 'VehicleSystem' {\n\tattribute def VehicleConfig;\n\tattribute def Subsystem;\n\tattribute def Component;\n\tport def SubsystemPort {\n\t\tout subsystem: Subsystem;\n\t}\n\tport def ComponentPort {\n\t\tout component: Component;\n\t}\n\tpart context {\n\t",
    "package 'Vehicle Product Line Configuration' {\n\tattribute def Engine;\n\tattribute def Transmission;\n\tattribute def Wheel;\n\tport def EnginePort {\n\t\tout engine: Engine;\n\t}\n\tport def TransmissionPort {\n\t\tout transmission: Transmission;\n\t}\n\tport def WheelPort {\n\t\tout wheel: Wheel;\n\t}\n\tpart context {\n\t\tpart user {\n\t\t\tport enginePort: EnginePort;\n\t\t\tport transmissionPort: TransmissionPort;\n\t\t\tport wheelPort: WheelPort;\n\t\t\tperform configureVehicle.",
    "package 'Automobile' {\n\tattribute def Mass;\n\tattribute def FuelStatus;\n\tattribute def Torque;\n\tattribute def Power;\n\tattribute def Reliability;\n\tport def MassPort;\n\tport def FuelStatusPort;\n\tport def TorquePort;\n\tport def PowerPort",
    "package 'Vehicle Mass Compliance' {\n\tattribute def Vehicle;\n\tattribute def Mass;\n\tport def VehiclePort {\n\t\tout vehicle: Vehicle;\n\t}\n\tport def MassPort {\n\t\tout mass: Mass;\n\t}\n\tpart context {\n\t\tpart testOperator {\n\t\t\tport vehiclePort: VehiclePort;\n\t\t\tport massPort: MassPort;\n\t\t\tperform verifyMassCompliance.measureMass {\n\t\t\t\tin vehicle = vehiclePort.vehicle;\n\t\t\t\tout mass = massPort.mass;\n\t\t\t}\n\t\t}\n\t\tinterface testOperatorToVehicle connect testOperator.vehiclePort to vehicle.",
    "package 'WaterSupplyNetwork' {\n\tattribute def HotWater;\n\tattribute def ColdWater;\n\tport def SpigotBankPort {\n\t\tout hotWater: HotWater;\n\t\tout coldWater: ColdWater;\n\t}\n\tport def SpigotPort {\n\t\tin hotWater: HotWater;\n\t\tin coldWater: ColdWater;\n\t}\n\tport def FaucetInletPort {\n\t\tin hotWater: HotWater;\n\t\tin coldWater: ColdWater;\n\t}\n\tpart context {\n\t\tpart SpigotBank {\n\t\t\tport spigotBankPort: SpigotBankPort;\n\t\t\tperform waterSupply",
    "package 'Vehicle Quality Analysis' {\n\tattribute def Vehicle;\n\tattribute def Component;\n\tattribute def QualityAttribute;\n\tattribute def QualityRequirement;\n\tattribute def AnalysisObjective;\n\tattribute def AnalysisTask;\n\tport def VehiclePort {\n\t\tout vehicle: Vehicle;\n\t}\n\tport def ComponentPort {\n\t\tout component: Component;\n\t}\n\tport def QualityAttributePort {\n\t\tout qualityAttribute: QualityAttribute;\n\t}\n\tport def QualityRequirementPort {\n\t\tout qualityRequirement: QualityRequirement;\n\t}\n\tport def AnalysisObjectivePort {\n\t\tout analysisObjective: AnalysisObjective;\n\t}\n\tport def AnalysisTaskPort {\n\t",
    "package 'Vehicle Powertrain Configuration' {\n\tattribute def EngineType;\n\tattribute def EngineStructure;\n\tattribute def Cylinder;\n\tattribute def Piston;\n\tattribute def ConnectingRod;\n\tattribute def Crankshaft;\n\tport def EngineTypePort {\n\t\tout engineType: EngineType;\n\t}\n\tport def EngineStructurePort {\n\t\tout engineStructure: EngineStructure;\n\t}\n\tport def CylinderPort {\n\t\tout cylinder: Cylinder",
    "package 'FuelEconomy' {\n\tattribute def Range;\n\tattribute def MilesPerGallon;\n\tport def RangePort {\n\t\tout range: Range;\n\t}\n\tport def MilesPerGallonPort {\n\t\tout milesPerGallon: MilesPerGallon;\n\t}\n\tpart context {\n\t\tpart vehicle {\n\t\t\tport rangePort: RangePort;\n\t\t\tport milesPerGallonPort: MilesPerGallonPort;\n\t\t\tperform fuelEconomy.calculateRange {\n\t\t\t\tin range = rangePort.range;\n\t\t\t\tin milesPer",
    "package 'LongitudinalMotion' {\n\tattribute def Mass;\n\tattribute def Position;\n\tattribute def Velocity;\n\tattribute def Acceleration;\n\tport def PowerPort {\n\t\tout power: Power;\n\t}\n\tport def PositionPort {\n\t\tout position: Position;\n\t}\n\tport def VelocityPort {\n\t\tout velocity: Velocity;\n\t}\n\tport def AccelerationPort {\n\t\tout acceleration: Acceleration;\n\t}\n\tpart context {\n\t\tpart user {\n\t\t\tport powerPort: PowerPort;\n\t\t\tport positionPort: PositionPort;\n\t\t\tport velocityPort: VelocityPort;\n\t\t\tport accelerationPort: AccelerationPort;\n\t\t\tperform longitudinalMotion.sendPower {\n\t\t\t\tout power = powerPort.power",
    "package 'VehicleSystem' {\n\tattribute def Mass;\n\tattribute def SteeringAngle;\n\tport def MassPort;\n\tport def SteeringAnglePort;\n\tpart context {\n\t\tpart frontAxleAssembly {\n\t\t\tport massPort: ~MassPort;\n\t\t\tport steeringAnglePort: ~SteeringAnglePort;\n\t\t\tperform vehicleSystem.massDistribution {\n\t\t\t\tin mass = massPort.mass;\n\t\t\t\tin steeringAngle = steeringAnglePort.steeringAngle;\n\t\t\t}\n\t\t\tpart frontWheel {\n\t\t\t\tport massPort: ~Mass",
    "package 'VehicleSafetySystem' {\n\tattribute def VehicleComponent;\n\tattribute def SafetyFeature;\n\tattribute def SecurityFeature;\n\tport def VehicleComponentPort {\n\t\tout vehicleComponent: VehicleComponent;\n\t}\n\tport def SafetyFeaturePort {\n\t\tout safetyFeature: SafetyFeature;\n\t}\n\tport def SecurityFeaturePort {\n\t\tout securityFeature: SecurityFeature;\n\t}\n\tpart context {\n\t\tpart user {\n\t\t\tport vehicleComponentPort: VehicleComponentPort;",
    "package 'LayeredSystem' {\n\tattribute def x;\n\tattribute def y;\n\tattribute def z;\n\tport def ApplicationLayerPort {\n\t\tout x: x;\n\t\tout y: y;\n\t\tout z: z;\n\t}\n\tport def ServiceLayerPort {\n\t\tin x: x;\n\t\tin y: y;\n\t\tout z: z;\n\t}\n\tport def DataLayerPort {\n\t\tin x: x;\n\t\tin y: y;\n\t\tout z: z;\n\t}\n\tpart context {\n\t\tpart applicationLayer {\n\t\t\tport applicationLayerPort: ApplicationLayerPort;\n\t\t\tperform applicationLayer.useServiceLayer {\n\t\t\t\tin x = applicationLayerPort.x;\n\t\t\t\tin y = applicationLayerPort.y;\n\t\t\t\tout z = applicationLayerPort.z;\n\t\t\t}\n\t\t}\n\t\tinterface applicationLayerToServiceLayer connect application",
    "package 'TorqueGenerator' {\n\tattribute def Torque;\n\tport def TorquePort {\n\t\tout torque: Torque;\n\t}\n\tpart context {\n\t\tpart logic {\n\t\t\tport torquePort: TorquePort;\n\t\t\tperform torqueGenerator.produceTorque {\n\t\t\t\tout torque = torquePort.torque;\n\t\t\t}\n\t\t}\n\t\tinterface logicToPhysical connect logic.torquePort to physical.torquePort {\n\t\t\tref flow references torqueGenerator.torqueFlow\n\t\t\t\tfrom source.torque to target.torque; \n\t\t}\n\t\tpart physical {\n\t\t\tport torquePort: ~TorquePort;\n\t\t\tperform torqueGenerator.transmitTorque {\n\t\t\t\tin torque = torquePort.torque;\n\t\t\t}\n",
    "package 'PowerTransmissionSystem' {\n\tattribute def Power;\n\tattribute def Torque;\n\tport def PowerPort {\n\t\tout power: Power;\n\t}\n\tport def TorquePort {\n\t\tout torque: Torque;\n\t}\n\tpart context {\n\t\tpart engine {\n\t\t\tport powerPort: ~PowerPort;\n\t\t\tport torquePort: ~TorquePort;\n\t\t\tperform powertrain.producePower {\n\t\t\t\tin power = powerPort.power;\n\t\t\t\tout torque = torquePort.torque;\n\t\t\t}\n\t\t}\n\t\tpart powertrain {\n\t\t\tport powerPort: PowerPort;\n\t\t\tport torquePort: TorquePort;\n\t\t\tperform powertrain.producePower {\n\t\t\t\tin power = powerPort.power;\n\t\t\t\tout torque =",
    "package 'Vehicle Safety and Anti-theft Function Catalogue' {\n\tattribute def SafetyComponent;\n\tattribute def AntiTheftComponent;\n\tattribute def MandatorySafetyComponent;\n\tport def SafetyComponentPort {\n\t\tout safetyComponent : SafetyComponent;\n\t}\n\tport def AntiTheftComponentPort {\n\t\tout antiTheftComponent : AntiTheftComponent;\n\t}\n\tport def Mandatory",
    "package 'FuelSystem' {\n\tattribute def FuelTemperature;\n\tport def FuelTankPort {\n\t\tout fuel: Fuel;\n\t}\n\tport def FuelPumpPort {\n\t\tout fuel: Fuel;\n\t}\n\tport def FuelConsumerPort {\n\t\tin fuel: Fuel;\n\t}\n\tport def FuelReturnPort {\n\t\tin fuel: Fuel;\n\t}\n\tpart context {\n\t\tpart fuelTank {\n\t\t\tport fuelTankPort: FuelTankPort;\n\t\t\tperform fuelTank.storeFuel {\n\t\t\t\tout fuel = fuelTankPort.fuel;\n\t\t\t}\n\t\t}\n\t\tpart fuelPump {\n\t",
    "package 'Vehicle' {\n\tattribute def SeatBelt;\n\tattribute def Airbag;\n\tattribute def AntiTheftAlarm;\n\tattribute def Bumper;\n\tattribute def KeylessEntrySystem;\n\tattribute def AntiLockBrakingSystem;\n\tport def SeatBeltPort {\n\t\tout seatBelt: SeatBelt;\n\t}\n\tport def AirbagPort {\n\t\tout airbag: Airbag;\n\t}\n\tport def AntiTheftAlarmPort {\n\t\tout anti",
    "package 'VehicleSafetyAndSecurityComponentSystem' {\n\tattribute def Alarm;\n\tattribute def SeatBelt;\n\tattribute def Airbag;\n\tattribute def Bumper;\n\tattribute def KeylessEntry;\n\tport def AlarmPort;\n\tport def SeatBeltPort;\n\tport def AirbagPort;\n\tport def BumperPort;\n\tport def KeylessEntryPort;\n\tpart context {\n\t\tpart vehicle {\n\t\t\tport alarmPort: AlarmPort;\n\t\t\tport seatBeltPort: SeatBeltPort;\n\t\t\tport airbagPort: AirbagPort;\n\t\t\tport bumperPort: BumperPort;\n\t\t\tport keylessEntryPort",
    "package 'Information Security Management' {\n\tattribute def Classification;\n\tport def ClassificationPort {\n\t\tout classification: Classification;\n\t}\n\tpart context {\n\t\tpart component {\n\t\t\tport classificationPort: ClassificationPort;\n\t\t\tperform classifyComponent.assignClassification {\n\t\t\t\tout classification = classificationPort.classification;\n\t\t\t}\n\t\t}\n\t\tinterface componentToSystem connect component.classificationPort to system.classificationPort {\n\t\t\tref flow references classifyComponent.classificationFlow\n\t\t\t\tfrom source.classification to target.classification;\n\t\t}\n\t\tpart system {\n\t\t\tport classificationPort: ~ClassificationPort;\n\t\t\tperform classifyComponent.displayClassification {\n\t\t\t\tin classification = classificationPort.classification;\n\t\t\t}\n\t\t}\n\t}\n\taction classifyComponent {\n\t\taction assignClassification { out classification: Classification; }\n\t\tsuccession flow classificationFlow from assignClassification.classification to displayClassification.",
    "package 'AutomotiveECU' {\n\tattribute def CANBus;\n\tattribute def BusIF;\n\tattribute def VCU;\n\tattribute def ECU;\n\tattribute def SensorData;\n\tport def CANBusPort {\n\t\tout canBus: CANBus;\n\t}\n\tport def BusIFPort {\n\t\tout busIF: BusIF;\n\t}\n\tport def VCUPort {\n\t\tout vcu: VCU;\n\t}\n\tport def ECUPort {\n\t\tout ecu: ECU;\n\t}\n\tport def SensorDataPort {\n\t\tout sensorData: SensorData;\n\t",
    "package 'BloodGlucoseMeter' {\n\tattribute def BatteryStatus;\n\tattribute def BloodGlucoseLevel;\n\tport def BatteryStatusPort {\n\t\tout batteryStatus: BatteryStatus;\n\t}\n\tport def BloodGlucoseLevelPort {\n\t\tout bloodGlucoseLevel: BloodGlucoseLevel;\n\t}\n\tpart context {\n\t\tpart user {\n\t\t\tport batteryStatusPort: BatteryStatusPort;\n\t\t\tport bloodGlucoseLevelPort: BloodGlucoseLevelPort;\n\t\t\tperform measureBloodGlucoseLevel.sendB",
    "package 'ScientificConstants' {\n\tattribute def EulerNumber;\n\tattribute def Pi;\n\tattribute def SpeedOfLight;\n\tattribute def FineStructureConstant;\n\tattribute def ElectronToProtonMassRatio;\n\tattribute def GravitationalAcceleration;\n\tattribute def AmplifierGainCoefficient;\n\tport def EulerNumberPort {\n\t\tout eulerNumber : EulerNumber;\n\t}\n\tport def PiPort {\n\t\tout pi : Pi;\n\t}\n\tport def SpeedOfLightPort {\n\t\tout speedOfLight : SpeedOfLight;\n\t}\n\tport def FineStr",
    "package 'Tire' {\n\tattribute def Manufacturer;\n\tattribute def RimDiameter;\n\tattribute def Width;\n\tport def ManufacturerPort;\n\tport def RimDiameterPort;\n\tport def WidthPort;\n\tpart context {\n\t\tpart tire {\n\t\t\tport manufacturerPort: ManufacturerPort;\n\t\t\tport rimDiameterPort: RimDiameterPort;\n\t\t\tport widthPort: WidthPort;\n\t\t\tperform tire.setManufacturer {\n\t\t\t\tin manufacturer = manufacturerPort.manufacturer;\n\t\t\t}\n\t\t\tperform tire.setRimDiameter {\n\t\t",
    "package 'AutomotiveComponent' {\n\tattribute def Mass;\n\tattribute def Length;\n\tattribute def Diameter;\n\tattribute def Width;\n\tattribute def TireHeight;\n\tattribute def TireWidth;\n\tattribute def TireRimDiameter;\n\tattribute def TireRimWidth;\n\tattribute def TireSidewallWidth;\n\tattribute def TireSidewallHeight;\n\tattribute def TireSidewallGauge;\n\tattribute def TireSidewallProfile;\n\tattribute def TireSidewallTread;\n\tattribute def TireSidewallTreadDepth;\n\tattribute def TireSidewallTreadAngle;\n\tattribute def TireSidewall",
    "package 'Powertrain' {\n\tattribute def Engine;\n\tattribute def Transmission;\n\tport def EnginePort {\n\t\tout engine: Engine;\n\t}\n\tport def TransmissionPort {\n\t\tout transmission: Transmission;\n\t}\n\tpart context {\n\t\tpart vehicle {\n\t\t\tport enginePort: EnginePort;\n\t\t\tport transmissionPort: TransmissionPort;\n\t\t\tperform configurePowertrain.selectEngine {\n\t\t\t\tout engine = enginePort.engine;\n\t\t\t}\n\t\t\tperform configurePowertrain.selectTransmission {\n\t\t\t\tout transmission = transmissionPort.transmission;\n\t\t\t}\n\t\t}\n\t\tinterface vehicleToEngine connect vehicle.enginePort",
    "package 'Automotive' {\n\tattribute def Mass;\n\tattribute def Length;\n\tattribute def Diameter;\n\tattribute def Radius;\n\tattribute def TreadDepth;\n\tattribute def Tire",
    "package 'FuelSystem' {\n\tattribute def Fuel;\n\tattribute def FuelTemp;\n\tport def FuelTankAssemblyPort {\n\t\tout fuel: Fuel;\n\t\tin returnFuel: Fuel;\n\t}\n\tport def FuelPumpPort {\n\t\tout fuel: Fuel;\n\t\tin returnFuel: Fuel;\n\t}\n\tport def FuelTempPort {\n\t\tout fuelTemp: FuelTemp;\n\t}\n\tpart context {\n\t\tpart fuelTankAssembly {\n\t\t\tport fuelTankAssemblyPort: FuelTankAssemblyPort;\n\t\t\tport returnFuelPort: ~FuelTankAssemblyPort;\n\t\t\tperform fuelTankAssembly.",
    "package 'PhysicalQuantitySystem' {\n\tattribute def PhysicalQuantity;\n\tattribute def Unit;\n\tport def PhysicalQuantityPort {\n\t\tout physicalQuantity : PhysicalQuantity;\n\t}\n\tport def UnitPort {\n\t\tout unit : Unit;\n\t}\n\tpart context {\n\t\tpart user {\n\t\t\tport physicalQuantityPort: PhysicalQuantityPort;\n\t\t\tperform physicalQuantitySystem.importPhysicalQuantity {\n\t\t\t\tout physicalQuantity = physicalQuantityPort.physicalQuantity;\n\t\t\t}\n\t\t\tperform physicalQuantitySystem.importUnit {\n\t\t\t\tout unit = unitPort.unit;\n\t\t\t}\n\t\t\tperform physicalQuantitySystem.convertUnit {\n\t\t\t\tin physicalQuantity = physicalQuantityPort.physicalQuantity;\n\t\t\t\tin unit = unitPort",
    "package 'UnitSystem' {\n\tattribute def Unit;\n\tport def UnitPort {\n\t\tout unit: Unit;\n\t}\n\tpart context {\n\t\tpart user {\n\t\t\tport unitPort: UnitPort;\n\t\t\tperform convertUnit.sendUnit {\n\t\t\t\tout unit = unitPort.unit;\n\t\t\t}\n\t\t}\n\t\tinterface userToUnitSystem connect user.unitPort to unitSystem.unitPort {\n\t\t\tref flow references convertUnit.unitFlow\n\t\t\t\tfrom source.unit to target.unit; \n\t\t}\n\t\tpart unitSystem {\n\t\t\tport unitPort: ~UnitPort;\n\t\t\tperform convertUnit.convert {\n\t\t\t\tin unit = unitPort.unit;\n\t\t\t\tout unit = unitPort.unit;\n\t\t\t}\n\t\t}\n\t}\n\t",
    "package 'HeadlampTiltAdjustmentKnob' {\n\tattribute def TiltAngle;\n\tport def TiltAnglePort {\n\t\tout tiltAngle: TiltAngle;\n\t}\n\tpart context {\n\t\tpart user {\n\t\t\tport tiltAnglePort: TiltAnglePort;\n\t\t\tperform verifyTiltAngle.sendTiltAngle {\n\t\t\t\tout tiltAngle = tiltAnglePort.tiltAngle;\n\t\t\t}\n\t\t}\n\t\tinterface userToHeadlampTiltAdjustmentKnob connect user.tiltAnglePort to headlampTiltAdjustmentKnob.tiltAnglePort {\n\t\t\tref flow references verifyTiltAngle.tiltAngleFlow\n\t\t\t\tfrom source.tiltAngle to target",
    "package 'DataTypes' {\n\tattribute def UnsignedInteger;\n\tattribute def UnsignedFloat;\n\tattribute def DateTime;\n\tattribute def String;\n\tattribute def Boolean;\n\tattribute def Color;\n\tattribute def Diameter;\n\tport def UnsignedIntegerPort {\n\t\tout unsignedInteger: UnsignedInteger;\n\t}\n\tport def UnsignedFloatPort {\n\t\tout unsignedFloat: UnsignedFloat;\n\t}\n\tport def DateTimePort {\n\t\tout dateTime: DateTime;\n\t}\n",
    "package 'SpareParts' {\n\tattribute def Bag;\n\tattribute def List;\n\tattribute def Set;\n\tattribute def OrderedSet;\n\tattribute def Real;\n\tport def BagPort {\n\t\tout bag: Bag;\n\t}\n\tport def ListPort {\n\t\tout list: List;\n\t}\n\tport def SetPort {\n\t\tout set: Set;\n\t}\n\tport def OrderedSetPort {\n\t\tout orderedSet: OrderedSet;\n\t}\n\tport def RealPort {\n\t\tout real: Real;\n\t}\n\tpart context {\n\t",
    "package 'Tire' {\n\tattribute def Manufacturer;\n\tattribute def RimDiameter;\n\tattribute def TireWidth;\n\tattribute def InstallationPosition;\n\tport def ManufacturerPort;\n\tport def RimDiameterPort;\n\tport def TireWidthPort;\n\tport def InstallationPositionPort;\n\tpart context {\n\t\tpart tire {\n\t\t\tport manufacturerPort: ManufacturerPort;\n\t\t\tport rimDiameterPort: RimDiameterPort;\n\t\t\tport tireWidthPort: TireWidthPort;\n\t\t\tport installationPositionPort: InstallationPositionPort;\n\t\t}\n\t\tpart manufacturer {\n\t\t\t",
    "package 'TrajectorySampler' {\n\tattribute def Time;\n\tattribute def Position;\n\tattribute def Velocity;\n\tport def TimePort {\n\t\tout time: Time;\n\t}\n\tport def PositionPort {\n\t\tout position: Position;\n\t}\n\tport def VelocityPort {\n\t\tout velocity: Velocity;\n\t}\n\tpart context {\n\t\tpart spacecraft {\n\t\t\tport timePort: TimePort;\n\t\t\tport positionPort: PositionPort;\n\t\t\tport velocityPort:",
    "package 'MaterialsScience' {\n\tattribute def AtomicMass;\n\tattribute def TensileStrength;\n\tport def MaterialPort {\n\t\tout material: Material;\n\t}\n\tport def MassFractionPort {\n\t\tout massFraction: MassFraction;\n\t}\n\tport def Tensile",
    "package 'EngineeringMaterialsDatabaseSystem' {\n\tattribute def Material;\n\tattribute def CompositionalInformation;\n\tattribute def MechanicalProperty;\n\tport def MaterialPort {\n\t\tout material: Material;\n\t}\n\tport def CompositionalInformationPort {\n\t\tout compositionalInformation: CompositionalInformation;\n\t}\n\tport def Mechanical",
    "package 'PubSub' {\n\tattribute def Topic;\n\tattribute def Message;\n\tport def PublishPort {\n\t\tout publish: Publish;\n\t}\n\tport def SubscribePort {\n\t\tout subscribe: Subscribe;\n\t}\n\tport def MessagePort {\n\t\tout message: Message;\n\t}\n\tpart context {\n\t\tpart user {\n\t\t\tport subscribePort: SubscribePort;\n\t\t\tperform subscribeTopic.sendSubscribe {\n\t\t\t\tout subscribe = subscribePort.subscribe;\n\t\t\t}\n\t\t}\n\t\tinterface userToServer connect user.subscribePort to server.subscribePort {\n\t\t\tref flow references subscribeTopic.",
    "package 'VehicleFuelSystem' {\n\tattribute def Fuel;\n\tattribute def FuelTemperature;\n\tport def FuelTankPort {\n\t\tout fuel: Fuel;\n\t}\n\tport def EnginePort {\n\t\tin fuel: Fuel;\n\t}\n\tport def FuelTemperaturePort {\n\t\tout fuelTemperature: FuelTemperature;\n\t}\n\tpart context {\n\t\tpart fuelTank {\n\t\t\tport fuelTankPort: FuelTankPort;\n\t\t\tperform fuelTank.supplyFuel {\n\t\t\t\tout fuel = fuelTankPort.fuel;\n\t\t\t}\n\t\t}\n\t\tpart engine {\n\t\t\tport enginePort: EnginePort;\n\t\t\t",
    "package 'PubSub' {\n\tattribute def Topic;\n\tattribute def Message;\n\tport def ProducerPort {\n\t\tout publishTopic: Topic;\n\t\tout publishMessage: Message;\n\t}\n\tport def ConsumerPort {\n\t\tout subscribeTopic: Topic;\n\t\tout subscribeMessage: Message;\n\t}\n\tport def ServerPort {\n\t\tout publishTopic: Topic;\n\t\tout publishMessage: Message;\n\t\tin subscribeTopic: Topic;\n\t\tin subscribeMessage: Message;\n\t}\n\tpart context {\n\t\tpart producer {\n\t\t\tport producerPort: ProducerPort;\n\t\t\tperform publishMessage {\n\t\t\t\tin publishTopic = producerPort.publishTopic;",
    "package 'Transportation' {\n\tattribute def FuelLevel;\n\tattribute def User;\n\tport def UserPort {\n\t\tout user: User;\n\t}\n\tport def FuelLevelPort {\n\t\tout fuelLevel: FuelLevel;\n\t}\n\tpart context {\n\t\tpart driver {\n\t\t\tport userPort: UserPort;\n\t\t\tperform transportation.boardUser {\n\t\t\t\tout user = userPort.user;\n\t\t\t}\n\t\t}\n\t\tinterface driverToVehicle connect driver.userPort to vehicle.userPort {\n\t\t\tref flow references transportation.userFlow\n\t\t\t\tfrom source.user to target.user; \n\t\t}\n\t\tpart vehicle {\n\t",
    "package 'Fuel Management System' {\n\tattribute def FuelTemperature;\n\tport def FuelOutletPort {\n\t\tout fuel: Fuel;\n\t}\n\tport def FuelInletPort {\n\t\tin fuel: Fuel;\n\t}\n\tpart context {\n\t\tpart engine {\n\t\t\tport fuelInletPort: FuelInletPort;\n\t\t\tport fuelOutletPort: FuelOutletPort;\n\t\t}\n\t\tpart fuelTank {\n\t\t\tport fuelInletPort: ~FuelInletPort;\n\t\t\tport fuelOutletPort: ~FuelOutletPort;\n",
    "package 'FuelSystem' {\n\tattribute def Fuel;\n\tattribute def Temperature;\n\tport def FuelSupplyPort {\n\t\tout fuel: Fuel;\n\t}\n\tport def FuelReturnPort {\n\t\tout fuel: Fuel;\n\t}\n\tport def TemperaturePort {\n\t\tout temperature: Temperature;\n\t}\n\tpart context {\n\t\tpart fuelTankAssembly {\n\t\t\tport fuelSupplyPort: FuelSupplyPort;\n\t\t\tport fuelReturnPort: FuelReturnPort;\n\t\t\tport temperaturePort: TemperaturePort;\n\t\t\tperform fuelSystem.fuelSupply {\n\t\t\t\tin fuel = fuelSupplyPort.fuel;\n\t\t\t\tout fuel = fuelReturnPort.fuel;\n\t\t\t\tout temperature = temperaturePort.temperature;\n",
    "package 'PhotoCapture' {\n\tattribute def Scene;\n\tattribute def Image;\n\tport def ScenePort {\n\t\tout scene: Scene;\n\t}\n\tport def ImagePort {\n\t\tout image: Image;\n\t}\n\tpart context {\n\t\tpart user {\n\t\t\tport scenePort: ScenePort;\n\t\t\tperform capturePhoto.selectScene {\n\t\t\t\tout scene = scenePort.scene;\n\t\t\t}\n\t\t}\n\t\tinterface userToPhotoCapture connect user.scenePort to photoCapture.scenePort {\n\t\t\tref flow references capturePhoto.sceneFlow\n\t\t\t\tfrom source.scene to target.scene; \n\t\t}\n\t\tpart photoCapture {\n\t\t\tport scenePort: ~ScenePort;\n\t\t\tperform capturePhoto.performFocusing {\n\t\t\t\tin scene = scenePort.scene;\n\t\t\t}\n\t\t\tport imagePort:",
    "package 'Photography' {\n\tattribute def Scene;\n\tattribute def Image;\n\tport def ScenePort {\n\t\tout scene: Scene;\n\t}\n\tport def ImagePort {\n\t\tout image: Image;\n\t}\n\tpart context {\n\t\tpart user {\n\t\t\tport scenePort: ScenePort;\n\t\t\tperform photography.selectScene {\n\t\t\t\tout scene = scenePort.scene;\n\t\t\t}\n\t\t}\n\t\tinterface userToPhotography connect user.scenePort to photography.scenePort {\n\t\t\tref flow references photography.sceneFlow\n\t\t\t\tfrom source.scene to target.scene; \n\t\t}\n\t\tpart photography {\n\t\t\tport scenePort: ~Scene",
    "package 'Photography' {\n\tattribute def Scene;\n\tattribute def Image;\n\tattribute def Photograph;\n\tport def ScenePort {\n\t\tout scene: Scene;\n\t}\n\tport def ImagePort {\n\t\tout image: Image;\n\t}\n\tport def PhotographPort {\n\t\tout photograph: Photograph;\n\t}\n\tpart context {\n\t\tpart user {\n\t\t\tport scenePort: ScenePort;\n\t\t\tperform photographyWorkflow.selectScene {\n\t\t\t\tout scene = scenePort.scene;\n\t\t\t}\n\t\t}\n\t\tinterface userToPhotographyWorkflow connect user.scenePort to photographyWorkflow.scenePort {\n\t\t\tref flow references photographyWorkflow.sceneFlow\n\t\t\t\tfrom source.scene to target.scene; \n\t\t}\n\t\tpart photographyWorkflow {\n\t\t\tport scenePort: ~ScenePort;\n",
    "package 'Photography' {\n\tattribute def Scene;\n\tattribute def Image;\n\tport def ScenePort {\n\t\tout scene: Scene;\n\t}\n\tport def ImagePort {\n\t\tout image: Image;\n\t}\n\tpart context {\n\t\tpart user {\n\t\t\tport scenePort: ScenePort;\n\t\t\tperform photography.sendScene {\n\t\t\t\tout scene = scenePort.scene;\n\t\t\t}\n\t\t}\n\t\tinterface userToPhotography connect user.scenePort to photography.scenePort {\n\t\t\tref flow references photography.sceneFlow\n\t\t\t\tfrom source.scene to target.scene; \n\t\t}\n\t\tpart photography {\n\t\t\tport scenePort: ~ScenePort;\n\t\t\tperform photography.focusScene {\n\t\t\t\tin scene = scenePort.scene;\n\t\t\t\tout image = imagePort.image;\n\t\t\t}\n\t\t\tport imagePort:",
    "package 'PhotographyWorkflow' {\n\tattribute def Scene;\n\tattribute def Image;\n\tattribute def Picture;\n\tport def ScenePort {\n\t\tout scene: Scene;\n\t}\n\tport def ImagePort {\n\t\tout image: Image;\n\t}\n\tport def PicturePort {\n\t\tout picture: Picture;\n\t}\n\tpart context {\n\t\tpart user {\n\t\t\tport scenePort: ScenePort;\n\t\t\tperform photographyWorkflow.focusScene {\n\t\t\t\tout scene = scenePort.scene;\n\t\t\t}\n\t\t}\n\t\tinterface userToPhotographyWorkflow connect user.scenePort to photographyWorkflow.scenePort {\n\t\t\tref flow references photographyWorkflow.sceneFlow\n\t\t\t\tfrom source.scene to target.scene;",
    "package 'Photography' {\n\tattribute def Scene;\n\tattribute def Focus;\n\tattribute def Photo;\n\tport def ScenePort {\n\t\tout scene: Scene;\n\t}\n\tport def FocusPort {\n\t\tout focus: Focus;\n\t}\n\tport def PhotoPort {\n\t\tout photo: Photo;\n\t}\n\tpart context {\n\t\tpart user {\n\t\t\tport scenePort: ScenePort;\n\t\t\tport focusPort: FocusPort;\n\t\t\tport photoPort: PhotoPort;\n\t\t\tperform photography.selectScene {\n\t\t\t\tout scene = scenePort.scene;\n\t\t\t}\n\t\t\tperform photography.focusScene {\n\t\t\t\tout focus = focusPort.focus;\n\t\t\t}\n\t\t\tperform photography.takePhoto {\n\t\t\t\tout photo = photoPort.photo;\n\t\t\t}\n\t\t}\n\t\tinterface",
    "package 'Photography' {\n\tattribute def Scene;\n\tattribute def Image;\n\tattribute def Photo;\n\tport def ScenePort {\n\t\tout scene: Scene;\n\t}\n\tport def ImagePort {\n\t\tout image: Image;\n\t}\n\tport def PhotoPort {\n\t\tout photo: Photo;\n\t}\n\tpart context {\n\t\tpart user {\n\t\t\tport scenePort: ScenePort;\n\t\t\tperform capturePhoto.selectScene {\n\t\t\t\tout scene = scenePort.scene;\n\t\t\t}\n\t\t}\n\t\tinterface userToPhotography connect user.scenePort to photography.scenePort {\n\t\t\tref flow references capturePhoto.sceneFlow\n\t\t\t\tfrom source.scene to target.scene; \n\t\t}\n\t\tpart photography {\n\t",
    "package 'PhotographyWorkflow' {\n\tattribute def TakePhotoCmd;\n\tattribute def Image;\n\tport def TakePhotoCmdPort {\n\t\tout takePhotoCmd : TakePhotoCmd;\n\t}\n\tport def ImagePort {\n\t\tout image: Image;\n\t}\n\tpart context {\n\t\tpart user {\n\t\t\tport takePhotoCmdPort: TakePhotoCmdPort;\n\t\t\tperform photographyWorkflow.takePhoto {\n\t\t\t\tout takePhotoCmd = takePhotoCmdPort.takePhotoCmd;\n\t\t\t}\n\t\t}\n\t\tinterface userToPhotographyWorkflow connect user.takePhotoCmdPort to photographyWorkflow.takePhotoCmdPort {\n\t\t\tref flow references photographyWorkflow.takePhotoFlow\n\t\t\t\tfrom source.",
    "package 'Automatic Braking Control System' {\n\tattribute def VehicleKey;\n\tattribute def BrakePedal;\n\tattribute def RoadAdhesion;\n\tport def VehicleKeyPort {\n\t\tout vehicleKey: VehicleKey;\n\t}\n\tport def BrakePedalPort {\n\t\tout brakePedal: BrakePedal;\n\t}\n\tport def RoadAdhesionPort {\n\t\tout roadAdhesion: RoadAdhesion;\n\t}\n\tpart context {\n\t\tpart user {\n\t\t\tport vehicleKeyPort: VehicleKeyPort;\n\t\t\tperform automaticBrakingControlSystem.sendVehicleKey {",
    "package 'BatteryChargingControlSystem' {\n\tattribute def BatteryLevel;\n\tport def BatteryLevelPort {\n\t\tout batteryLevel: BatteryLevel;\n\t}\n\tport def ChargePort {\n\t\tout charge: Charge;\n\t}\n\tpart context {\n\t\tpart battery {\n\t\t\tport batteryLevelPort: BatteryLevelPort;\n\t\t\tperform batteryChargingControlSystem.monitorBatteryLevel {\n\t\t\t\tout batteryLevel = batteryLevelPort.batteryLevel;\n\t\t\t}\n\t\t}\n\t\tinterface batteryToBatteryChargingControlSystem connect battery.batteryLevelPort to batteryChargingControlSystem.batteryLevelPort {\n\t\t\tref flow references batteryChargingControlSystem.batteryLevelFlow\n\t\t\t\tfrom source.b",
    "package 'BatteryChargingSystem' {\n\tattribute def BatteryLevel;\n\tport def BatteryLevelPort {\n\t\tout batteryLevel: BatteryLevel;\n\t}\n\tport def ChargingPort {\n\t\tout charging: Charging;\n\t}\n\tpart context {\n\t\tpart battery {\n\t\t\tport batteryLevelPort: BatteryLevelPort;\n\t\t\tperform batteryCharging.monitorBatteryLevel {\n\t\t\t\tout batteryLevel = batteryLevelPort.batteryLevel;\n\t\t\t}\n\t\t}\n\t\tinterface batteryToCharging connect battery.batteryLevelPort to charging.batteryLevelPort {\n\t\t\tref flow references batteryCharging.batteryLevelFlow\n\t\t\t\tfrom source.batteryLevel to target.batteryLevel; \n\t\t",
    "package 'Camera' {\n\tattribute def Scene;\n\tport def ScenePort {\n\t\tout scene: Scene;\n\t}\n\tport def PhotoPort {\n\t\tout photo: Photo;\n\t}\n\tpart context {\n\t\tpart user {\n\t\t\tport scenePort: ScenePort;\n\t\t\tperform selectScene.sendScene {\n\t\t\t\tout scene = scenePort.scene;\n\t\t\t}\n\t\t\tperform confirmScene.sendScene {\n\t\t\t\tout scene = scenePort.scene;\n\t\t\t}\n\t\t}\n\t\tinterface userToCamera connect user.scenePort to camera.scenePort {\n\t\t\tref flow references selectScene.sceneFlow\n\t\t\t\tfrom source.scene to target.scene;\n\t\t\tref flow references confirmScene.sceneFlow\n",
    "package 'DigitalCamera' {\n\tattribute def Scene;\n\tattribute def Image;\n\tport def ScenePort {\n\t\tout scene: Scene;\n\t}\n\tport def ImagePort {\n\t\tout image: Image;\n\t}\n\tpart context {\n\t\tpart user {\n\t\t\tport scenePort: ScenePort;\n\t\t\tperform shoot.selectScene {\n\t\t\t\tout scene = scenePort.scene;\n\t\t\t}\n\t\t}\n\t\tinterface userToCamera connect user.scenePort to camera.scenePort {\n\t\t\tref flow references shoot.sceneFlow\n\t\t\t\tfrom source.scene to target.scene;\n\t\t}\n\t\tpart camera {\n\t\t\tport scenePort: ~ScenePort;\n\t\t\tport imagePort: ImagePort;\n\t\t\tperform",
    "package 'VehicleMotion' {\n\tattribute def Mass;\n\tattribute def Position;\n\tattribute def Velocity;\n\tattribute def TimeInterval;\n\tattribute def PowerInput;\n\tport def MassPort {\n\t\tout mass: Mass;\n\t}\n\tport def PositionPort {\n\t\tout position: Position;\n\t}\n\tport def VelocityPort {\n\t\tout velocity: Velocity;\n\t}\n\tport def TimeIntervalPort {\n\t\tout timeInterval: TimeInterval;\n\t}\n\tport def PowerInputPort {\n\t\tout powerInput: PowerInput;\n\t}\n\tpart context {\n\t\tpart user {\n\t\t\tport massPort: MassPort;\n\t\t\tport positionPort: PositionPort;\n\t\t\tport velocityPort: VelocityPort;\n\t\t\tport timeIntervalPort: TimeIntervalPort;\n\t\t\t",
    "package 'Camera' {\n\tattribute def Scene;\n\tattribute def Image;\n\tport def ScenePort {\n\t\tin scene: Scene;\n\t}\n\tport def ImagePort {\n\t\tout image: Image;\n\t}\n\tpart context {\n\t\tpart user {\n\t\t\tport scenePort: ScenePort;\n\t\t\tperform captureScene.sendScene {\n\t\t\t\tin scene = scenePort.scene;\n\t\t\t}\n\t\t}\n\t\tinterface userToCamera connect user.scenePort to camera.scenePort {\n\t\t\tref flow references captureScene.sceneFlow\n\t\t\t\tfrom source.scene to target.scene; \n\t\t}\n\t\tpart camera {\n\t\t\tport scenePort: ~ScenePort;\n\t\t\tperform captureScene.focusScene {\n\t\t\t\tin scene = scenePort.scene;\n",
    "package 'Camera' {\n\tattribute def Image;\n\tattribute def Picture;\n\tport def viewPort;\n\tport def displayPort;\n\tpart context {\n\t\tpart user {\n\t\t\tport viewPort;\n\t\t\tperform selectScene {\n\t\t\t\tin viewPort;\n\t\t\t}\n\t\t}\n\t\tinterface userToCamera connect user.viewPort to camera.viewPort {\n\t\t\tref flow references selectScene.viewFlow\n\t\t\t\tfrom source.viewPort to target.viewPort; \n\t\t}\n\t\tpart camera {\n\t\t\tport viewPort;\n\t\t\tperform focusScene {\n\t\t\t\tin viewPort;\n\t\t\t}\n\t\t\tperform captureImage {\n\t\t\t\tout image: Image;\n\t\t\t}\n\t\t\tport capturePort: ~Image;\n\t\t\tperform generatePicture {\n\t\t\t\t",
    "package 'SensorManager' {\n\tattribute def Sensor;\n\tport def SensorPort {\n\t\tout sensor: Sensor;\n\t}\n\tport def UpdatePort {\n\t\tout update: Update;\n\t}\n\tpart context {\n\t\tpart sensorManager {\n\t\t\tport sensorPort: SensorPort;\n\t\t\tport updatePort: UpdatePort;\n\t\t\tperform sensorManager.updateSensor {\n\t\t\t\tin sensor = sensorPort.sensor;\n\t\t\t\tout update = updatePort.update;\n\t\t\t}\n\t\t}\n\t\tinterface sensorManagerToSensor connect sensorManager.sensorPort to sensor.sensorPort {\n\t\t\tref flow references sensorManager.updateSensor.sensorFlow\n\t\t\t\tfrom source.sensor to target.sensor;\n\t\t}\n\t\tinterface sensorManagerToUpdate connect sensorManager.updatePort to update.updatePort {\n\t\t\tref flow references sensorManager.",
    "package 'VehicleStateManager' {\n\tattribute def VehicleState;\n\tport def VehicleStartSignalPort;\n\tport def VehiclePowerOnSignalPort;\n\tport def VehicleShutdownSignalPort;\n\tport def VehicleStatePort;\n\tpart context {\n\t\tpart vehicle {\n\t\t\tport vehicleStartSignalPort: ~VehicleStartSignalPort;\n\t\t\tport vehiclePowerOnSignalPort: ~VehiclePowerOnSignalPort;\n\t\t\tport vehicleShutdownSignalPort: ~VehicleShutdownSignalPort;\n\t\t\tport vehicleStatePort: VehicleStatePort;\n\t\t\tperform vehicleStateManager.manageVehicleState {\n\t\t\t\tin vehicleStartSignal =",
    "package 'VehicleStatusManagement' {\n\tattribute def VehicleStartSignal;\n\tattribute def VehicleOnSignal;\n\tattribute def VehicleOffSignal;\n\tport def VehicleStartSignalPort {\n\t\tin vehicleStartSignal : VehicleStartSignal;\n\t}\n\tport def VehicleOnSignalPort {\n\t\tin vehicleOnSignal : VehicleOnSignal;\n\t}\n\tport def VehicleOffSignalPort {\n\t\tin vehicleOffSignal : VehicleOffSignal;\n\t}\n\tpart context {\n\t\tpart vehicle {\n\t\t\tport vehicleStartSignalPort: VehicleStart",
    "package 'VehiclePowerManagementSystem' {\n\tattribute def VehicleStartCmd;\n\tattribute def VehicleStarted;\n\tattribute def VehicleShutdownCmd;\n\tport def VehicleStartCmdPort {\n\t\tout vehicleStartCmd: VehicleStartCmd;\n\t}\n\tport def VehicleStartedPort {\n\t\tin vehicleStarted: VehicleStarted;\n\t}\n\tport def VehicleShutdownCmdPort {\n\t\tout vehicleShutdownCmd: VehicleShutdownCmd;\n\t}\n\tpart context {\n\t\tpart user {\n\t\t\tport vehicleStartCmdPort: VehicleStart",
    "package 'Vehicle' {\n\tattribute def VehicleStatus;\n\tport def VehicleStartPort {\n\t\tout vehicleStart: VehicleStatus;\n\t}\n\tport def VehicleShutdownPort {\n\t\tout vehicleShutdown: VehicleStatus;\n\t}\n\tport def VehicleStartedPort {\n\t\tout vehicleStarted: VehicleStatus;\n\t}\n\tpart context {\n\t\tpart user {\n\t\t\tport vehicleStartPort: VehicleStartPort;\n\t\t\tport vehicleShutdownPort: VehicleShutdownPort;\n\t\t\tport vehicleStartedPort: VehicleStartedPort;\n\t\t\tperform vehicle.sendVehicleStart {\n\t\t\t\tout vehicleStart = vehicleStartPort.vehicleStart;\n",
    "package 'PowerManagement' {\n\tattribute def VehicleState;\n\tport def StartSignalPort;\n\tport def OffSignalPort;\n\tport def OnSignalPort;\n\tport def HealthSignalPort;\n\tport def VehicleStatePort;\n\tpart context {\n\t\tpart user {\n\t\t\tport startSignalPort: StartSignalPort;\n\t\t\tport offSignalPort: OffSignalPort;\n\t\t\tport onSignalPort: OnSignalPort;\n\t\t\tport healthSignalPort: HealthSignalPort;\n\t\t\tport vehicleStatePort: VehicleStatePort;\n\t\t\tperform vehicleState.sendStartSignal {\n\t",
    "package 'VehicleHealthSystem' {\n\tattribute def Temperature;\n\tattribute def MaintenanceTime;\n\tport def TemperaturePort {\n\t\tout temperature: Temperature;\n\t}\n\tport def MaintenanceTimePort {\n\t\tout maintenanceTime: MaintenanceTime;\n\t}\n\tpart context {\n\t\tpart vehicle {\n\t\t\tport temperaturePort: TemperaturePort;\n\t\t\tport maintenanceTimePort: MaintenanceTimePort;\n\t\t\tperform vehicleHealth",
    "package 'TimedClock' {\n\tattribute def StartCmd;\n\tattribute def Request;\n\tattribute def Response;\n\tport def RequestPort {\n\t\tin request: Request;\n\t}\n\tport def ResponsePort {\n\t\tout response: Response;\n\t}\n\tpart context {\n\t\tpart server {\n\t\t\tport requestPort: RequestPort;\n\t\t\tport responsePort: ResponsePort;\n\t\t\tperform server.start {\n\t\t\t\tin startCmd = startCmdPort.startCmd;\n\t\t\t}\n\t\t\tperform server.wait {\n\t\t\t\tin request = requestPort.request;\n\t\t\t\tout response = responsePort.response;\n",
    "package 'VehicleStartStop' {\n\tattribute def StartSignal;\n\tattribute def PowerOnSignal;\n\tattribute def StopSignal;\n\tport def StartSignalPort {\n\t\tin startSignal : StartSignal;\n\t}\n\tport def PowerOnSignalPort {\n\t\tin powerOnSignal : PowerOnSignal;\n\t}\n\tport def StopSignalPort {\n\t\tin stopSignal : StopSignal;\n\t}\n\tpart context {\n\t\tpart vehicle {\n\t\t\tport startSignalPort: StartSignalPort;\n\t\t\tport powerOnSignalPort: PowerOnSignalPort;\n\t\t\t",
    "package 'Vehicle Control System' {\n\tattribute def VehicleState;\n\tattribute def VehicleSignal;\n\tport def VehicleStatePort {\n\t\tout vehicleState: VehicleState;\n\t}\n\tport def VehicleSignalPort {\n\t\tout vehicleSignal: VehicleSignal;\n\t}\n\tpart context {\n\t\tpart driver {\n\t\t\tport vehicleStatePort: VehicleStatePort;\n\t\t\tperform",
    "package 'CruiseControl' {\n\tattribute def SetSpeedCmd;\n\tattribute def ActualSpeed;\n\tattribute def FuelControlCmd;\n\tport def SetSpeedCmdPort {\n\t\tout setSpeedCmd : SetSpeedCmd;\n\t}\n\tport def ActualSpeedPort {\n\t\tout actualSpeed : ActualSpeed;\n\t}\n\tport def FuelControlCmdPort {\n\t\tout fuelControlCmd : FuelControlCmd;\n\t}\n\tpart context {\n\t\tpart driver {\n\t\t\tport setSpeedCmdPort: SetSpeedCmdPort;\n\t\t\tperform cruiseControl.sendSetSpeedCmd {\n\t\t\t\tout setSpeedCmd = setSpeedCmdPort.setSpeed",
    "package 'CruiseControl' {\n\tattribute def SetSpeedCmd;\n\tattribute def RealTimeSpeed;\n\tattribute def ThrottleCmd;\n\tport def SetSpeedCmdPort {\n\t\tout setSpeedCmd: SetSpeedCmd;\n\t}\n\tport def RealTimeSpeedPort {\n\t\tout realTimeSpeed: RealTimeSpeed;\n\t}\n\tport def ThrottleCmdPort {\n\t\tout throttleCmd: ThrottleCmd;\n\t}\n\tpart context {\n\t\tpart driver {\n\t\t\tport setSpeedCmdPort: SetSpeedCmdPort;\n\t\t\tperform cruiseControl.sendSetSpeedCmd {\n\t\t\t\tout setSpeedCmd = setSpeedCmdPort.setSpeedCmd;\n\t\t\t}\n\t\t}\n\t\tinterface driverToCruiseControl connect driver.setSpeedCmdPort to cruiseControl.set",
    "package 'CruiseControl' {\n\tattribute def SetSpeedCmd;\n\tattribute def CurrentSpeed;\n\tattribute def ThrottleCmd;\n\tport def SetSpeedCmdPort {\n\t\tout setSpeedCmd : SetSpeedCmd;\n\t}\n\tport def CurrentSpeedPort {\n\t\tout currentSpeed : CurrentSpeed;\n\t}\n\tport def ThrottleCmdPort {\n\t\tout throttleCmd : ThrottleCmd;\n\t}\n\tpart context {\n\t\tpart driver {\n\t\t\tport setSpeedCmdPort: SetSpeedCmdPort;\n\t\t\tperform cruiseControl.sendSetSpeedCmd {\n\t\t\t\tout setSpeedCmd = set",
    "package 'CruiseControl' {\n\tattribute def SpeedSetting;\n\tattribute def VehicleSpeed;\n\tport def SpeedSettingPort {\n\t\tout speedSetting: SpeedSetting;\n\t}\n\tport def VehicleSpeedPort {\n\t\tout vehicleSpeed: VehicleSpeed;\n\t}\n\tpart context {\n\t\tpart driver {\n\t\t\tport speedSettingPort: SpeedSettingPort;\n\t\t\tperform setCruiseSpeed.sendSpeedSetting {\n\t\t\t\tout speedSetting = speedSettingPort.speedSetting;\n\t\t\t}\n\t\t}\n\t\tinterface driverToCruiseControl connect driver.speedSettingPort to cruiseControl",
    "package 'CruiseControl' {\n\tattribute def SetSpeedCmd;\n\tattribute def ActualSpeed;\n\tattribute def FuelControlCmd;\n\tport def SetSpeedCmdPort {\n\t\tout setSpeedCmd : SetSpeedCmd;\n\t}\n\tport def ActualSpeedPort {\n\t\tout actualSpeed : ActualSpeed;\n\t}\n\tport def FuelControlCmdPort {\n\t\tout fuelControlCmd : FuelControlCmd;\n\t}\n\tpart context",
    "package 'CruiseControl' {\n\tattribute def SetSpeedCmd;\n\tattribute def ActualSpeed;\n\tattribute def FuelControlCmd;\n\tport def SetSpeedCmdPort {\n\t\tout setSpeedCmd : SetSpeedCmd;\n\t}\n\tport def ActualSpeedPort {\n\t\tout actualSpeed : ActualSpeed;\n\t}\n\tport def FuelControlCmdPort {\n\t\tout fuelControlCmd : FuelControlCmd;\n\t}\n\tpart context {\n\t\tpart driver {\n\t\t\tport setSpeedCmdPort: SetSpeedCmdPort;\n\t\t\tperform sendSetSpeedCmd {\n\t\t\t\tout setSpeedCmd = setSpeedCmdPort.setSpeedCmd;\n\t\t\t}",
    "package 'VehicleLifecycleManagement' {\n\tattribute def Vehicle;\n\tattribute def Owner;\n\tattribute def Driver;\n\tattribute def DeliveryDate;\n\tattribute def ScrappingDate;\n\tport def VehiclePort {\n\t\tout vehicle: Vehicle;\n\t}\n\tport def OwnerPort {\n\t\tout owner: Owner;\n\t}\n\tport def DriverPort {\n\t\tout driver: Driver;\n\t}\n\tport def DeliveryDatePort {\n\t\tout deliveryDate: DeliveryDate;\n\t}\n\tport def ScrappingDatePort {\n\t\tout scrapping",
    "package 'Vehicle' {\n\tattribute def Mass;\n\tattribute def OperationalStatus;\n\tattribute def GearSetting;\n\tattribute def AcceleratorPedalPosition;\n\tport def EnginePort;\n\tport def DriverPort;\n\tport def WheelPort;\n\tpart context {\n\t\tpart vehicle_1 {\n\t\t\tattribute mass: Mass;\n\t\t\tattribute operationalStatus: OperationalStatus;\n\t\t\tattribute gearSetting: GearSetting;\n\t\t\tattribute acceleratorPedalPosition: AcceleratorPedalPosition;\n\t\t\tport enginePort: EnginePort;\n\t\t\tport driverPort: DriverPort;\n\t\t\tport wheelPort: WheelPort;\n\t\t",
    "package 'VehicleSystem' {\n\tattribute def Mass;\n\tattribute def Gear;\n\tattribute def Accelerator;\n\tport def MassPort;\n\tport def GearPort;\n\tport def AcceleratorPort;\n\tpart vehicle {\n\t\tattribute def Mass;\n\t\tattribute def Gear;\n\t\tattribute def Accelerator;\n\t\tport def MassPort;\n\t\tport def GearPort;\n\t\tport def AcceleratorPort;\n\t}\n\tpart engine {\n\t\tattribute def Mass;\n\t\tattribute def Gear;\n\t\tattribute def Accelerator;\n\t\tport",
    "package 'Vehicle' {\n\tattribute def Mass;\n\tattribute def Gear;\n\tattribute def Throttle;\n\tport def DriverPort;\n\tport def EnginePort;\n\tpart context {\n\t\tpart vehicle {\n\t\t\tport driverPort: DriverPort;\n\t\t\tport enginePort: EnginePort;\n\t\t\tattribute mass: Mass;\n\t\t\tattribute gear: Gear;\n\t\t\tattribute throttle: Throttle;\n\t\t\tperform drive.drive {\n\t\t\t\tin driver = driverPort.driver;\n\t\t",
    "package 'VehicleMass' {\n\tattribute def Mass;\n\tport def MassPort {\n\t\tout mass: Mass;\n\t}\n\tpart context {\n\t\tpart vehicle {\n\t\t\tport massPort: MassPort;\n\t\t\tperform vehicleMass.aggregateMass {\n\t\t\t\tout mass = massPort.mass;\n\t\t\t}\n\t\t\tpart engine {\n\t\t\t\tport massPort: ~MassPort;\n\t\t\t\tperform vehicleMass.aggregateMass {\n\t\t\t\t\tin mass = massPort.mass;",
    "package 'VehicleMassManagement' {\n\tattribute def Mass;\n\tattribute def SerialNumber;\n\tattribute def VIN;\n\tport def MassPort;\n\tport def SerialNumberPort;\n\tport def VINPort;\n\tpart context {\n\t\tpart user {\n\t\t\tport massPort: MassPort;\n\t\t\tport serialNumberPort: SerialNumberPort;\n\t\t\tport vinPort: VINPort;\n\t\t\tperform vehicleMassManagement.setMass {\n\t\t\t\tin mass = massPort.mass;\n\t\t\t\tin serial",
    "package 'MassAggregation' {\n\tattribute def simpleMass;\n\tattribute def totalMass;\n\tport def simpleThingPort {\n\t\tout simpleMass: simpleMass;\n\t\tout totalMass: totalMass;\n\t}\n\tport def compositeThingPort {\n\t\tout simpleMass: simpleMass;\n\t\tout totalMass: totalMass;\n\t}\n\tpart context {\n\t\tpart simpleThing {\n\t\t\tport simpleThingPort: simpleThingPort;\n\t\t\tperform massAggregation.produceSimpleMass {\n\t\t\t\tout simpleMass = simpleThingPort.simpleMass;\n\t\t\t\tout totalMass = simpleThingPort.totalMass;\n\t\t\t}\n\t\t}\n\t\tpart compositeThing {",
    "package 'MassAggregation' {\n\tattribute def Mass;\n\tattribute def MinMass;\n\tport def MassPort;\n\tport def MinMassPort;\n\tpart context {\n\t\tpart object {\n\t\t\tport massPort: MassPort;\n\t\t\tport minMassPort: MinMassPort;\n\t\t\tperform calculateTotalMass {\n\t\t\t\tin mass = massPort.mass;\n\t\t\t\tin minMass = minMassPort.minMass;\n\t\t\t\tout totalMass = totalMassPort.totalMass;\n\t\t\t}\n\t",
    "package 'Vehicle Dynamics' {\n\tattribute def PowerOutput;\n\tattribute def Acceleration;\n\tattribute def Speed;\n\tattribute def Position;\n\tport def PowerOutputPort {\n\t\tout powerOutput: PowerOutput;\n\t}\n\tport def AccelerationPort {\n\t\tout acceleration: Acceleration;\n\t}\n\tport def SpeedPort {\n\t\tout speed: Speed;\n\t}\n\tport def PositionPort {\n\t\tout position: Position;\n\t}\n\tpart context {\n\t\tpart user {\n\t\t\tport powerOutputPort: PowerOutputPort;\n\t\t\tport",
    "package 'VehicleDynamics' {\n\tattribute def VehicleMass;\n\tattribute def WheelEndOutputPower;\n\tattribute def TimeStep;\n\tattribute def InitialSpeed;\n\tattribute def InitialPosition;\n\tattribute def AerodynamicDragCoefficient;\n\tattribute def RollingResistanceCoefficient;\n\tport def VehicleMassPort {\n\t\tout vehicleMass: VehicleMass;\n\t}\n\tport def WheelEndOutputPowerPort {\n\t\tout wheelEndOutputPower: WheelEndOutputPower;\n\t}\n\tport def TimeStepPort {\n\t\tout timeStep",
    "package 'VehicleDynamics' {\n\tattribute def VehicleMass;\n\tattribute def WheelPower;\n\tattribute def AerodynamicDragCoefficient;\n\tattribute def RollingResistanceCoefficient;\n\tattribute def InitialSpeed;\n\tattribute def InitialPosition;\n\tport def VehicleMassPort {\n\t\tout vehicleMass : VehicleMass;\n\t}\n\tport def WheelPowerPort {\n\t\tout wheelPower : WheelPower;\n\t}\n\tport def AerodynamicDragCoefficientPort {\n\t\tout aerodynamicDragCoefficient : AerodynamicDragCoefficient;\n\t}\n\tport def RollingResistanceCoefficientPort {\n\t\tout rollingResistanceCoefficient : RollingResistanceCoefficient;\n\t}\n\tport def Initial",
    "package 'LongitudinalDynamic' {\n\tattribute def Position;\n\tattribute def Velocity;\n\tattribute def Acceleration;\n\tattribute def Mass;\n\tattribute def Power;\n\tattribute def Time;\n\tport def InputPort {\n\t\tin position: Position;\n\t\tin velocity: Velocity;\n\t\tin mass: Mass;\n\t\tin power: Power;\n\t\tin time: Time;\n\t}\n\tport def OutputPort {\n\t\tout acceleration: Acceleration;\n\t\tout velocity: Velocity;\n\t\tout position: Position;\n\t}\n\tpart context {\n\t\tpart user {\n\t",
    "package 'Vehicle' {\n\tattribute def ChassisMass;\n\tattribute def EngineMass;\n\tattribute def GearboxMass;\n\tport def ChassisMassPort {\n\t\tout chassisMass : ChassisMass;\n\t}\n\tport def EngineMassPort {\n\t\tout engineMass : EngineMass;\n\t}\n\tport def GearboxMassPort {\n\t\tout gearboxMass : GearboxMass;\n\t}\n\tport def OverweightWarningPort {\n\t\tout overweightWarning : OverweightWarning;\n\t}\n\tpart context {\n\t\tpart vehicle {\n\t\t\tport chassisMassPort: ChassisMassPort;\n\t\t\t",
    "package 'VehicleMassBudgeting' {\n\tattribute def Mass;\n\tport def MassPort {\n\t\tout mass: Mass;\n\t}\n\tpart context {\n\t\tpart user {\n\t\t\tport massPort: MassPort;\n\t\t\tperform vehicleMassBudgeting.recordMass {\n\t\t\t\tout mass = massPort.mass;\n\t\t\t}\n\t\t}\n\t\tinterface userToVehicleMassBudgeting connect user.massPort to vehicleMassBudgeting.massPort {\n\t\t\tref flow references vehicleMassBudgeting.massFlow\n\t\t\t\tfrom source.",
    "package 'VehicleMassManagementSystem' {\n\tattribute def ChassisMass;\n\tattribute def EngineMass;\n\tattribute def TransmissionMass;\n\tattribute def TotalMass;\n\tport def ChassisMassPort {\n\t\tout chassisMass : ChassisMass;\n\t}\n\tport def EngineMassPort {\n\t\tout engineMass : EngineMass;\n\t}\n\tport def TransmissionMassPort {\n\t\tout transmissionMass : TransmissionMass;\n\t}\n\tport def TotalMassPort {\n\t\tout totalMass : TotalMass;\n\t}\n\tpart context {\n\t\tpart vehicle {\n\t\t\t",
    "package 'Vehicle Weight Management System' {\n\tattribute def ChassisWeight;\n\tattribute def EngineWeight;\n\tattribute def TransmissionWeight;\n\tattribute def TotalWeight;\n\tport def ChassisWeightPort {\n\t\tout chassisWeight: ChassisWeight;\n\t}\n\tport def EngineWeightPort {\n\t\tout engineWeight: EngineWeight;\n\t}\n\tport def TransmissionWeightPort {\n\t\tout transmissionWeight: TransmissionWeight;\n\t}\n\tport def TotalWeightPort {\n\t\tout totalWeight: TotalWeight;\n\t}\n\tpart context {\n\t\tpart user {\n\t\t\tport chassisWeightPort: ChassisWeightPort;\n\t\t\tport engineWeightPort: EngineWeightPort;\n\t\t\tport transmissionWeightPort: TransmissionWeightPort;\n\t\t\t",
    "package 'Vehicle' {\n\tattribute def Mass;\n\tattribute def Force;\n\tattribute def Time;\n\tattribute def Velocity;\n\tport def MassPort {\n\t\tout mass: Mass;\n\t}\n\tport def ForcePort {\n\t\tout force: Force;\n\t}\n\tport def TimePort {\n\t\tout time: Time;\n\t}\n\tport def VelocityPort {\n\t\tout velocity: Velocity;\n\t}\n\tpart context {\n\t\tpart chassis {\n\t\t\tport massPort: MassPort;\n\t\t\tport velocityPort: VelocityPort;\n\t\t\tperform vehicle.calculateMass {\n\t\t\t\tin mass = massPort.mass",
    "package 'VehicleMaintenanceSystem' {\n\tattribute def Vehicle;\n\tattribute def MaintenanceTime;\n\tattribute def MaintenanceInterval;\n\tattribute def Temperature;\n\tport def VehiclePort {\n\t\tout vehicle: Vehicle;\n\t}\n\tport def MaintenanceTimePort {\n\t\tout maintenanceTime: MaintenanceTime;\n\t}\n\tport def MaintenanceIntervalPort {\n\t\tout maintenanceInterval: MaintenanceInterval;\n\t}\n\tport def TemperaturePort {\n\t\tout temperature: Temperature;\n\t}\n\tpart context {\n\t\tpart vehicle {\n\t\t\tport vehiclePort: VehiclePort;\n\t\t\tport maintenanceTimePort",
    "package 'Vehicle' {\n\tattribute def MaxMass;\n\tattribute def FuelMass;\n\tport def EnginePort {\n\t\tout torque: Torque;\n\t}\n\tport def TransmissionPort {\n\t\tin torque: Torque;\n\t}\n\tport def ClutchPort {\n\t\tin torque: Torque;\n\t}\n\tpart context {\n\t\tpart vehicle {\n\t\t\tport enginePort: EnginePort;\n\t\t\tport transmissionPort: TransmissionPort;\n\t\t\tport clutchPort: ClutchPort;\n\t\t\tperform vehicle.checkMass {\n\t\t\t\tin mass = vehicle.mass;\n\t\t\t}\n\t\t\tperform vehicle.checkFuelMass {\n\t\t\t\tin fuelMass = vehicle.fuelMass;\n\t\t\t}\n\t\t\tperform vehicle.checkTorque {\n\t\t\t\tin torque = enginePort.torque;\n\t\t\t}\n\t\t}\n\t\tinterface vehicle",
    "package 'Vehicle' {\n\tattribute def Mass;\n\tattribute def Torque;\n\tport def EnginePort {\n\t\tout torque: Torque;\n\t}\n\tport def TransmissionPort {\n\t\tin torque: Torque;\n\t}\n\tport def ClutchPort {\n\t\tin torque: Torque;\n\t}\n\tpart context {\n\t\tpart engine {\n\t\t\tport enginePort: EnginePort;\n\t\t\tperform vehicle.produceTorque {\n\t\t\t\tout torque = enginePort.torque;\n\t\t\t}\n\t\t}\n\t\tpart transmission {\n\t\t\tport transmissionPort: Trans",
    "package 'Vehicle' {\n\tattribute def Mass;\n\tattribute def Torque;\n\tport def ClutchPort {\n\t\tout torque: Torque;\n\t}\n\tport def TransmissionPort {\n\t\tin torque: Torque;\n\t}\n\tpart context {\n\t\tpart engine {\n\t\t\tport clutchPort: ClutchPort;\n\t\t\tport transmissionPort: ~TransmissionPort;\n\t\t\tperform engine.produceTorque {\n\t\t\t\tin speed = engine.speed;\n\t\t\t\tout torque = clutchPort.torque;\n\t\t\t}\n\t\t\tperform engine.transmitTorque {\n\t\t\t\tin torque = clutchPort.torque;\n\t\t\t\tout torque = transmissionPort.torque;\n\t\t\t}\n\t\t}\n\t",
    "package 'Vehicle' {\n\tattribute def Mass;\n\tattribute def Torque;\n\tport def MassPort {\n\t\tout mass: Mass;\n\t}\n\tport def TorquePort {\n\t\tout torque: Torque;\n\t}\n\tpart context {\n\t\tpart vehicle {\n\t\t\tport massPort: MassPort;\n\t\t\tport torquePort: TorquePort;\n\t\t\tperform vehicleMassControl.checkMass {\n\t\t\t\tin mass = massPort.mass;\n\t\t\t}\n\t\t\tperform powerTransmission.checkTorque {\n\t\t\t\tin torque = torquePort.torque;\n\t\t\t}\n\t\t}\n",
    "package 'Vehicle Performance Analysis' {\n\tattribute def Vehicle;\n\tattribute def DriveCycle;\n\tattribute def EnergyConsumptionTarget;\n\tport def VehiclePort {\n\t\tout vehicle: Vehicle;\n\t}\n\tport def DriveCyclePort {\n\t\tout driveCycle: DriveCycle;\n\t}\n\tport def EnergyConsumptionTargetPort {\n",
    "package 'VehicleFuelEconomy' {\n\tattribute def Vehicle;\n\tattribute def Trajectory;\n\tattribute def Speed;\n\tattribute def WheelPower;\n\tattribute def EnginePower;\n\tattribute def FuelConsumption;\n\tattribute def FuelEconomy;\n\tport def VehiclePort {\n\t\tout vehicle: Vehicle;\n\t}\n\tport def TrajectoryPort {\n\t\tout trajectory: Trajectory;\n\t}\n\tport def SpeedPort {\n\t\tout speed: Speed;\n\t}\n\tport def WheelPowerPort {\n\t\tout wheelPower: WheelPower;\n\t}\n\tport def EnginePowerPort {",
    "package 'EngineSelection' {\n\tattribute def EngineType;\n\tattribute def Power;\n\tattribute def Mass;\n\tattribute def Efficiency;\n\tattribute def Cost;\n\tport def EngineTypePort {\n\t\tout engineType: EngineType;\n\t}\n\tport def PowerPort {\n\t\tout power: Power;\n\t}\n\tport def MassPort {\n\t\tout mass: Mass;\n\t}\n\tport def EfficiencyPort {\n\t\tout efficiency: Efficiency;\n\t}\n\tport def CostPort {\n\t\tout cost: Cost;\n\t}\n\tpart context {\n\t\tpart user {\n\t\t\tport engineTypePort: EngineTypePort;\n\t\t\tport powerPort: PowerPort;\n\t\t\tport massPort: MassPort;\n\t\t\tport efficiencyPort: EfficiencyPort;\n\t\t\tport costPort: CostPort;\n\t\t\tperform engineSelection.sendEngine",
    "package 'VehicleQualityCheck' {\n\tattribute def CurbWeight;\n\tport def CurbWeightPort {\n\t\tout curbWeight: CurbWeight;\n\t}\n\tport def EvaluationResultPort {\n\t\tout evaluationResult: EvaluationResult;\n\t}\n\tpart context {\n\t\tpart dataCollector {\n\t\t\tport curbWeightPort: CurbWeightPort;\n\t\t\tperform vehicleQualityCheck.collectCurbWeight {\n\t\t\t\tout curbWeight = curbWeightPort.curbWeight;\n\t\t\t}\n\t\t}\n\t\tinterface dataCollectorToVehicleQualityCheck connect dataCollector.curbWeightPort to vehicleQualityCheck.curbWeightPort {\n\t\t\tref flow references vehicleQualityCheck.curbWeightFlow\n\t\t\t\tfrom source.curbWeight to target.curbWeight; ",
    "package 'MassVerificationSystem' {\n\tattribute def Vehicle;\n\tattribute def WeighingEquipment;\n\tattribute def MassVerificationUnit;\n\tport def VehiclePort {\n\t\tout vehicle: Vehicle;\n\t}\n\tport def WeighingEquipmentPort {\n\t\tout weighingEquipment: WeighingEquipment;\n\t}\n\tport def MassVerificationUnitPort {\n\t\tout massVerificationUnit: MassVerificationUnit;\n\t}\n\tpart context {\n\t\tpart vehicle {\n\t\t\tport vehiclePort: VehiclePort;\n\t\t\tperform",
    "package 'Transportation System' {\n\tattribute def Driver;\n\tattribute def Passenger;\n\tattribute def Vehicle;\n\tattribute def GasStation;\n\tport def DriverPort {\n\t\tout driver: Driver;\n\t}\n\tport def PassengerPort {\n\t\tout passenger: Passenger;\n\t}\n\tport def VehiclePort {\n\t\tout vehicle: Vehicle;\n\t}\n\tport def GasStationPort {\n\t\tout gasStation: GasStation;\n\t}\n\tpart context {\n\t\tpart driver {\n\t\t\tport driverPort: DriverPort;\n\t\t\tperform transportationSystem.driveVehicle {\n\t\t\t\tout vehicle = vehiclePort.vehicle;\n\t\t\t}\n\t\t}\n",
    "package 'Transportation System' {\n\tattribute def Driver;\n\tattribute def Passenger;\n\tattribute def Vehicle;\n\tattribute def GasStation;\n\tport def DriverPort {\n\t\tout driver: Driver;\n\t}\n\tport def PassengerPort {\n\t\tout passenger: Passenger;\n\t}\n\tport def VehiclePort {\n\t\tout vehicle: Vehicle;\n\t}\n\tport def GasStationPort {\n\t\tout gasStation: GasStation;\n\t}\n\tpart context {\n\t\tpart driver {\n\t\t\tport driverPort: DriverPort;\n\t\t\tperform transportationSystem.operateVehicle {\n\t\t\t\tout vehicle = vehiclePort.vehicle;\n\t\t\t}\n\t\t}\n\t\tinterface driverToVehicle connect driver.driverPort to vehicle.driverPort {\n\t\t\tref flow references transportationSystem.driverToVeh",
    "package 'Vehicle' {\n\tattribute def Engine;\n\tattribute def Transmission;\n\tport def EnginePort {\n\t\tout engine: Engine;\n\t}\n\tport def TransmissionPort {\n\t\tout transmission: Transmission;\n\t}\n\tpart context {\n\t\tpart user {\n\t\t\tport enginePort: EnginePort;\n\t\t\tport transmissionPort: TransmissionPort;\n\t\t\tperform vehicle.sendEngine {\n\t\t\t\tout engine = enginePort.engine;\n\t\t\t}\n\t\t\tperform vehicle",
    "package 'Engine' {\n\tattribute def CylinderQuantity;\n\tattribute def CylinderDiameter;\n\tport def CylinderQuantityPort {\n\t\tout cylinderQuantity: CylinderQuantity;\n\t}\n\tport def CylinderDiameterPort {\n\t\tout cylinderDiameter: CylinderDiameter;\n\t}\n\tpart context {\n\t\tpart user {\n\t\t\tport cylinderQuantityPort: CylinderQuantityPort;\n\t\t\tport cylinderDiameterPort: CylinderDiameterPort;\n\t\t\tperform engine.sendCylinderQuantity {\n\t\t\t\tout cylinderQuantity = cylinderQuantityPort.cylinderQuantity;\n\t\t\t}\n\t\t\tperform engine.sendCylinderDiameter {\n\t\t\t\tout cylinderD",
    "package 'AutomotiveConfigurationSpace' {\n\tattribute def Engine;\n\tattribute def Transmission;\n\tport def EnginePort {\n\t\tout engine: Engine;\n\t}\n\tport def TransmissionPort {\n\t\tout transmission: Transmission;\n\t}\n\tpart context {\n\t\tpart user {\n\t\t\tport enginePort: EnginePort;\n\t\t\tport transmissionPort: TransmissionPort;\n\t\t\tperform selectEngine.sendEngine {\n\t\t\t\tout engine = enginePort.engine;\n\t\t\t}\n\t\t\tperform selectTransmission.sendTransmission {\n",
    "package 'System' {\n\tattribute def Message;\n\tattribute def Data;\n\tport def MessagePort;\n\tport def DataPort;\n\tpart systemAssembly {\n\t\tpart computerSubsystem {\n\t\t\tport messagePort: ~MessagePort;\n\t\t\tport dataPort: ~DataPort;\n\t\t\tperform system.integrateFunctions {\n\t\t\t\tin message = messagePort.message;\n\t\t\t\tin data = dataPort.data;\n\t\t\t}\n\t\t}\n\t\tpart storageSubsystem {\n\t\t\tport messagePort: ~MessagePort;\n\t\t\tport dataPort: ~DataPort;\n\t\t\tperform system.accessData {\n\t\t\t\tin message = messagePort.message;\n\t\t\t\tin data = dataPort.data;\n\t\t\t}\n\t\t}\n\t}\n\taction integrateFunction",
    "package 'PowertrainSystem' {\n\tattribute def Torque;\n\tattribute def Power;\n\tport def TorqueGeneratorPort {\n\t\tout torque: Torque;\n\t}\n\tport def PowerUnitPort {\n\t\tout power: Power;\n\t}\n\tpart context {\n\t\tpart logicalLayer {\n\t\t\tpart torqueGenerator {\n\t\t\t\tport torqueGeneratorPort: TorqueGeneratorPort;\n\t\t\t\tperform powertrainSystem.produceTorque {\n\t\t\t\t\tout torque = torqueGeneratorPort.torque;\n\t\t\t\t}\n\t\t\t}\n\t\t\t",
    "package 'PowerTransmissionSystem' {\n\tattribute def Power;\n\tattribute def Torque;\n\tport def PowerPort {\n\t\tout power: Power;\n\t}\n\tport def TorquePort {\n\t\tout torque: Torque;\n\t}\n\tpart context {\n\t\tpart system {\n\t\t\tport powerPort: PowerPort;\n\t\t\tport torquePort: TorquePort;\n\t\t\tperform powerTransmissionSystem.deliverPower {\n\t\t\t\tout power = powerPort.power;\n\t\t\t\tout torque = torquePort.torque;\n\t\t\t}\n\t\t}\n\t\tpart powertrain {\n",
    "package 'Vehicle Feature Annotation System' {\n\tattribute def Vehicle;\n\tattribute def Part;\n\tattribute def Function;\n\tport def VehiclePort {\n\t\tout vehicle: Vehicle;\n\t}\n\tport def PartPort {\n\t\tout part: Part;\n\t}\n\tport def FunctionPort {\n\t\tout function: Function;\n\t}\n\tpart context {\n\t\tpart user {\n\t\t\tport vehiclePort: VehiclePort;\n\t\t\tport partPort: PartPort;\n\t\t\tport functionPort: FunctionPort;\n\t\t\tperform annotateVeh",
    "package 'VehicleDynamicAnalysis' {\n\tattribute def InitialVelocity;\n\tattribute def InitialPosition;\n\tattribute def Acceleration;\n\tattribute def TimeStep;\n\tport def InputPort {\n\t\tin initialVelocity : InitialVelocity;\n\t\tin initialPosition : InitialPosition;\n\t\tin acceleration : Acceleration;\n\t\tin timeStep : TimeStep;\n\t}\n\tport def OutputPort {\n\t\tout velocity : Velocity;\n\t\tout position : Position;\n\t}\n\tpart context {\n\t\tpart user {\n\t\t\tport inputPort: InputPort;\n\t\t\tperform vehicleDynamicAnalysis.inputVehicleData {\n\t\t\t\tin initialVelocity = inputPort.initialVelocity;\n\t\t\t\tin initialPosition = inputPort.initialPosition;\n\t\t\t\tin acceleration = inputPort.acceleration;\n\t\t\t\tin timeStep =",
    "package 'Safety Features' {\n\tattribute def isMandatory;\n\tattribute def isSafety;\n\tattribute def isOptional;\n\tattribute def isNotMandatory;\n\tattribute def isNotSafety;\n\tattribute def isNotOptional;\n\tattribute def isNotNotMandatory;\n\tattribute def isNotNotSafety;\n\tattribute def isNot",
    "package 'VehicleSafetyComplianceSystem' {\n\tattribute def SafetyFeature;\n\tattribute def Mandatory;\n\tattribute def Optional;\n\tport def SafetyFeaturePort {\n\t\tout safetyFeature : SafetyFeature;\n\t}\n\tport def MandatoryPort {\n\t\tout mandatory : Mandatory;\n\t}\n\tport def OptionalPort {\n\t\tout optional : Optional;\n\t}\n\tpart context {\n\t\tpart vehicle {\n\t\t\tport safetyFeaturePort: SafetyFeaturePort;\n\t\t\tperform vehicleSafetyComplianceSystem.identifySafetyFeature {\n\t\t",
    "package 'RiskManagement' {\n\tattribute def Cause;\n\tattribute def Failure;\n\tattribute def Probability;\n\tattribute def Severity;\n\tport def CausePort {\n\t\tout cause: Cause;\n\t}\n\tport def FailurePort {\n\t\tout failure: Failure;\n\t}\n\tport def ProbabilityPort {\n\t\tout probability: Probability;\n\t}\n\tport def SeverityPort {\n\t\tout severity: Severity;\n\t}\n\tpart context {\n\t\tpart user {\n\t\t\tport causePort: CausePort;\n\t\t\tport failurePort: FailurePort;\n\t\t\tport probabilityPort: ProbabilityPort;\n\t\t\tport severityPort: SeverityPort;\n\t\t\tperform riskManagement.recordRisk {\n\t\t\t\tin",
    "package 'Risk Management System' {\n\tattribute def Scenario;\n\tattribute def Cause;\n\tattribute def Failure;\n\tport def ScenarioPort {\n\t\tout scenario: Scenario;\n\t}\n\tport def CausePort {\n\t\tout cause: Cause;\n\t}\n\tport def FailurePort {\n\t\tout failure: Failure;\n\t}\n\tpart context {\n\t\tpart user {\n\t\t\tport scenarioPort: ScenarioPort;\n\t\t\tport causePort: CausePort;\n\t\t\tport failurePort: FailurePort;\n\t\t\tperform riskManagementSystem.identifyScenario {\n\t\t\t\tout scenario = scenarioPort.",
    "package 'Battery Monitoring System' {\n\tattribute def BatteryLevel;\n\tattribute def BatteryHealth;\n\tattribute def BatterySeverity;\n\tport def BatteryLevelPort {\n\t\tout batteryLevel: BatteryLevel;\n\t}\n\tport def BatteryHealthPort {\n\t\tout batteryHealth: BatteryHealth;\n\t}\n\tport def BatterySeverityPort {\n\t\tout batterySeverity",
    "package 'Structural Decomposition' {\n\tattribute def Component;\n\tattribute def Subsystem;\n\tport def ComponentPort {\n\t\tout component: Component;\n\t}\n\tport def SubsystemPort {\n\t\tout subsystem: Subsystem;\n\t}\n\tpart context {\n\t\tpart system {\n\t\t\tport componentPort: ComponentPort;\n\t\t\tport subsystemPort: SubsystemPort;\n\t\t\tperform structuralDecomposition.decomposeSystem {\n\t\t\t\tin component = componentPort.component;\n\t\t\t\tin subsystem = subsystemPort.subsystem;\n\t\t\t}\n\t\t}\n\t\tinterface systemToComponent connect system.componentPort to component.componentPort {\n\t\t\tref flow references structuralDecomposition.componentFlow\n\t",
    "package 'AutomotiveSystem' {\n\tattribute def Safety;\n\tattribute def Functional;\n\tport def SafetyPort;\n\tport def FunctionalPort;\n\tpart context {\n\t\tpart root {\n\t\t\t",
    "package 'Automotive' {\n\tattribute def Torque;\n\tattribute def Speed;\n\tattribute def Acceleration;\n\tattribute def FuelEfficiency;\n\tattribute def Power;\n\tattribute def Weight;\n\tattribute def Dimension;\n\tattribute def Color;\n\tattribute def Material;\n\tattribute def Brand;\n\tattribute def Model;\n\tattribute def Year;\n\tattribute def Price;\n\tattribute def Description;\n\tattribute def Image;\n\tattribute def Vehicle;\n\tattribute def Engine;\n\tattribute def Transmission;\n\tattribute def Battery;\n\tattribute def Body;\n\tattribute def Chassis;\n\tattribute def Suspension;\n\tattribute def Steering;\n\tattribute",
    "package 'AutomobileDocumentManagement' {\n\tattribute def Automobile;\n\tattribute def Car;\n\tattribute def TorqueValue;\n\tport def AutomobilePort {\n\t\tout automobile: Automobile;\n\t}\n\tport def CarPort {\n\t\tout car: Car;\n\t}\n\tport def TorqueValuePort {\n\t\tout torqueValue: TorqueValue;\n\t}\n\tpart context {\n\t\tpart user {\n\t\t\tport automobilePort: AutomobilePort;\n\t\t\tport carPort: CarPort;\n\t\t\tport torqueValuePort",
    "package 'Automobile' {\n\tattribute def TorqueValue;\n\tport def TorqueValuePort {\n\t\tout torqueValue : TorqueValue;\n\t}\n\tport def CarPort {\n\t\tout car : Car;\n\t}\n\tpart context {\n\t\tpart user {\n\t\t\tport torqueValuePort: TorqueValuePort;\n\t\t\tperform automobile.sendTorqueValue {\n\t\t\t\tout torqueValue = torqueValuePort.torqueValue;\n\t\t\t}\n\t\t}\n\t\tinterface userToAutomobile connect user.torqueValuePort to automobile.torqueValuePort {\n\t\t\tref flow references automobile.torqueValueFlow\n\t\t\t\tfrom source.torqueValue to target.torqueValue; \n\t\t}\n\t\tpart automobile {\n\t\t\tport torque",
    "package 'Vehicle' {\n\tattribute def VehicleSize;\n\tattribute def Engine;\n\tattribute def Cylinder;\n\tport def EnginePort {\n\t\tout engine: Engine;\n\t}\n\tport def CylinderPort {\n\t\tout cylinder: Cylinder;\n\t}\n\tpart context {\n\t\tpart vehicle {\n\t\t\tport enginePort: EnginePort;\n\t\t\tport cylinderPort: CylinderPort;\n\t\t\tperform vehicle.selectEngine {\n\t\t\t\tin vehicleSize = vehicleSizePort.vehicleSize;\n\t\t\t\tout engine = enginePort.engine;\n\t\t\t\tout cylinder = cylinderPort.cylinder;\n\t\t\t}\n\t\t\tport vehicleSizePort: VehicleSizePort;\n\t\t}\n\t\tpart engine {\n\t\t\tport enginePort: ~EnginePort;\n\t\t\tperform engine.selectCylinder {\n\t\t\t\tin",
    "package 'FuelManagementSystem' {\n\tattribute def Fuel;\n\tport def FuelTankPort {\n\t\tout fuel: Fuel;\n\t}\n\tport def EnginePort {\n\t\tin fuel: Fuel;\n\t}\n\tpart context {\n\t\tpart fuelTank {\n\t\t\tport fuelTankPort: FuelTankPort;\n\t\t\tperform fuelManagementSystem.deliverFuel {\n\t\t\t\tout fuel = fuelTankPort.fuel;\n\t\t\t}\n\t\t}\n\t\tinterface fuelTankToEngine connect fuelTank.fuelTankPort to engine.enginePort {\n\t\t\tref flow references fuelManagementSystem.fuelFlow\n\t\t\t\tfrom source.fuel to target.fuel; \n\t\t}\n\t\tpart engine {\n\t\t\tport enginePort: ~EnginePort;\n\t\t\tperform fuelManagementSystem.consumeFuel {\n\t\t\t\tin fuel = enginePort.fuel;\n\t\t\t}\n\t\t}\n\t\tpart fuelReturn {\n\t\t\tport fuel",
    "package 'Vehicle' {\n\tattribute def Mass;\n\tattribute def SteeringAngle;\n\tport def MassPort;\n\tport def SteeringAnglePort;\n\tpart vehicle {\n\t\tport massPort: MassPort;\n\t\tport steeringAnglePort: SteeringAnglePort;\n\t\tpart frontAxleAssembly {\n\t\t\tport massPort: ~MassPort;\n\t\t\tport steeringAnglePort: ~SteeringAnglePort;\n\t\t\tpart frontAxle {\n\t\t\t\tport massPort: ~M"
]