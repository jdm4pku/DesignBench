[
    "package 'Vehicle' {\n\tattribute def Mass;\n\tattribute def Status;\n\tattribute def Engine;\n\tattribute def Driver;\n\tport def MassPort {\n\t\tout mass: Mass;\n\t}\n\tport def StatusPort {\n\t\tout status: Status;\n\t}\n\tport def EnginePort {\n\t\tout engine: Engine;\n\t}\n\tport def DriverPort {\n\t\tout driver: Driver;\n\t}\n\tpart context {\n\t\tpart vehicle {\n\t\t\tport massPort: MassPort;\n\t\t\tport statusPort: StatusPort;\n\t\t\tport enginePort: EnginePort;\n\t\t\tport driverPort: DriverPort;\n\t\t\tperform vehicleStatus.updateStatus {\n\t\t\t\tin status = statusPort.status;\n\t\t\t\tin mass = massPort.mass;\n\t\t\t\tin engine = enginePort.engine;\n\t\t\t\tin driver = driverPort.driver;\n",
    "package 'VehicleModel' {\n\tattribute def VehicleType;\n\tattribute def Driver;\n\tattribute def Engine;\n\tport def DriverPort {\n\t\tin driver : Driver;\n\t}\n\tport def EnginePort {\n\t\tin engine : Engine;\n\t}\n\tpart context {\n\t\tpart personnel {\n\t\t\tport driverPort: DriverPort;\n\t\t\tperform assignDriverToVehicle {\n\t\t\t\tin driver = driverPort.driver;\n\t\t\t}\n\t\t}\n\t\tpart engine {\n\t\t\tport enginePort: EnginePort;\n\t\t\tperform attachEngineToVehicle {\n\t\t\t\tin engine = enginePort.engine;\n\t\t\t}\n\t\t}\n\t\tpart vehicle {\n\t\t\tport driverPort: DriverPort;\n\t\t\tport enginePort: EnginePort;\n",
    "package 'Vehicle' {\n\tabstract class component {\n\t\tabstract attribute def Quantity;\n\t}\n\tabstract class vehicleComponent extends component {\n\t\tabstract attribute def Type;\n\t}\n\tclass engine extends vehicleComponent {\n\t\tattribute def Quantity;\n\t\tattribute def Type;\n\t}\n\tclass transmission extends vehicleComponent {\n\t\tattribute def Quantity;\n\t\tattribute def Type;\n\t}\n\tclass wheel extends vehicleComponent {\n\t\tattribute def Quantity;\n\t\tattribute def Type;\n\t}\n\tclass vehicle extends component {\n\t\tattribute def Quantity;\n\t\tattribute def Type;\n\t\tport def EnginePort {\n\t\t\tout engine: Engine;\n\t\t}\n\t\tport def TransmissionPort {\n\t\t\tout transmission: Transmission;\n\t\t}\n\t\tport def WheelPort {\n\t\t\tout",
    "package 'Vehicle' {\n\tattribute def VehicleType;\n\tattribute def EngineType;\n\tport def EnginePort {\n\t\tout engine: EngineType;\n\t}\n\tpart context {\n\t\tpart smallVehicle {\n\t\t\tport enginePort: EnginePort;\n\t\t\tperform engineSpecification {\n\t\t\t\tout engine = smallEngine;\n\t\t\t}\n\t\t}\n\t\tpart largeVehicle {\n\t\t\tport enginePort: EnginePort;\n\t\t\tperform engineSpecification {\n\t\t\t\tout engine = largeEngine;\n\t\t\t}\n\t\t}\n\t\tpart smallEngine {\n\t\t\tattribute def CylinderCount;\n\t\t\tport cylinderPort: CylinderCount;\n\t\t\tperform engineSpecification {\n\t\t\t\tout engine",
    "package 'TrafficSignal' {\n\tattribute def ColorState;\n\tport def ColorStatePort {\n\t\tout colorState : ColorState;\n\t}\n\tpart context {\n\t\tpart trafficSignal {\n\t\t\tport colorStatePort: ColorStatePort;\n\t\t\tperform trafficSignal.indicateColor {\n\t\t\t\tout colorState = colorStatePort.colorState;\n\t\t\t}\n\t\t}\n\t\tpart trafficSignalGreen {\n\t\t\tport colorStatePort: ColorStatePort;\n\t\t\tperform trafficSignalGreen.indicateGo {\n\t\t\t\tout colorState = colorStatePort.colorState;\n\t\t\t}\n\t\t}\n\t}\n\taction trafficSignal {\n\t\taction indicateColor { out colorState: ColorState; }\n\t}\n\taction trafficSignalGreen {\n\t\taction indicateGo { out colorState: ColorState; }\n\t}\n}\n\nPlease note that the traffic signal system model is incomplete and requires further development to fully represent the requirements.",
    "package 'InformationClassificationManagement' {\n\tattribute def InformationType;\n\tattribute def InformationGrade;\n\tport def InformationTypePort {\n\t\tin informationType : InformationType;\n\t\tout informationTypeOut : InformationType;\n\t}\n\tport def InformationGradePort {\n\t\tin informationGrade : InformationGrade;\n\t\tout informationGradeOut : InformationGrade;\n\t}\n\tpart context {\n\t\tpart user {\n\t\t\tport informationTypePort: InformationTypePort;\n\t\t\tport informationGradePort: InformationGradePort;\n\t\t\tperform classify",
    "package 'VehicleEngine' {\n\tattribute def EngineType;\n\tattribute def CylinderCount;\n\tport def CylinderPort {\n\t\tin cylinder : Cylinder;\n\t\tout cylinder : Cylinder;\n\t}\n\tpart context {\n\t\tpart smallVehicle {\n\t\t\tport cylinderPort: CylinderPort;\n\t\t\tperform engineConfigure {\n\t\t\t\tin cylinder = cylinderPort.cylinder;\n\t\t\t\tout cylinder = cylinderPort.cylinder;\n\t\t\t}\n\t\t}\n\t\tpart largeVehicle {\n\t\t\tport cylinderPort: CylinderPort;\n\t\t\tperform engineConfigure {\n\t\t\t\tin cylinder = cylinderPort.cylinder;\n\t\t\t\tout cylinder = cylinderPort.cylinder;\n\t\t\t}\n\t\t}\n\t}\n\taction engineConfigure {\n\t\tin cylinder: Cylinder;\n\t\tout cylinder: Cylinder;",
    "package 'VehicleModel' {\n\tattribute def QualityAttribute;\n\tattribute def DriverInfo;\n\tattribute def FuelType;\n\tport def VehicleInfoPort {\n\t\tout vehicleInfo : VehicleInfo;\n\t}\n\tport def FuelPort {\n\t\tout fuel : Fuel;\n\t}\n\tpart context {\n\t\tpart vehicle {\n\t\t\tport vehicleInfoPort: VehicleInfoPort;\n\t\t\tport fuelPort: FuelPort;\n\t\t\tattribute qualityAttribute: QualityAttribute;\n\t\t\tattribute driverInfo: DriverInfo;\n\t\t\tattribute fuelType: FuelType;\n\t\t\tperform vehicleInfo.produceVehicleInfo {\n\t\t\t\tout vehicleInfo = vehicleInfoPort.vehicleInfo;\n\t\t\t}\n\t\t\tperform fuel.produceFuel {\n\t\t\t\tout fuel = fuelPort.fuel;\n\t\t\t}\n\t\t}\n\t\tpart fuel {\n\t\t\tport fuelPort: FuelPort;\n\t",
    "package 'WheelAssembly' {\n\tcomponent def WheelBearingUnit;\n\tcomponent def Tire;\n\tcomponent def Bead;\n\tcomponent def Hub;\n\tcomponent def Rim;\n\tcomponent def BoltMountingHole;\n\tcomponent def ThreadedHole;\n\tcomponent def Bolt;\n\tport def TirePort {\n\t\tin tire : Tire;\n\t\tout bead : Bead;\n\t\tout rim : Rim;\n\t}\n\tport def HubPort {\n\t\tin hub : Hub;\n\t\tout boltMountingHole : BoltMountingHole;\n\t\tout threadedHole : ThreadedHole;\n\t}\n\tport def BoltPort {\n\t\tin bolt : Bolt;\n\t\tout bolt : Bolt",
    "package 'FuelManagementSystem' {\n\tattribute def FuelTank;\n\tattribute def Engine;\n\tport def FuelPort {\n\t\tin out fuel : Fuel;\n\t}\n\tport def TemperaturePort {\n\t\tin temperature : Temperature;\n\t}\n\tpart context {\n\t\tpart fuelTank {\n\t\t\tport fuelPort: FuelPort;\n\t\t\tport temperaturePort: TemperaturePort;\n\t\t\tperform fuelTransfer.sendFuel {\n\t\t\t\tin fuel = fuelPort.fuel;\n\t\t\t\tout fuel = engine.fuel;\n\t\t\t}\n\t\t\taction fuelTransfer {\n\t\t\t\taction sendFuel { in fuel: Fuel; out fuel: Engine.Fuel; }\n\t\t\t\taction receiveFuel { in fuel: Engine.Fuel; out fuel: FuelPort.fuel; }\n\t\t",
    "package 'Vehicle' {\n\tattribute def Mass;\n\tattribute def FrontAxle;\n\tattribute def RearAxle;\n\tattribute def Tires;\n\tport def MassPort {\n\t\tout mass: Mass;\n\t}\n\tport def FrontAxlePort {\n\t\tout frontAxle: FrontAxle;\n\t}\n\tport def RearAxlePort {\n\t\tout rearAxle: RearAxle;\n\t}\n\tport def TiresPort {\n",
    "package 'CouplingSystem' {\n\tattribute def Vehicle;\n\tattribute def Trailer;\n\tattribute def CouplingMechanism;\n\tport def VehiclePort {\n\t\tout vehicle: Vehicle;\n\t}\n\tport def TrailerPort {\n\t\tout trailer: Trailer;\n\t}\n\tport def CouplingMechanismPort {\n\t\tout couplingMechanism: CouplingMechanism;\n\t}\n\tpart context {\n\t\tpart vehicle {\n\t\t\tport vehiclePort: VehiclePort;\n\t\t\tperform connectToTrailer.sendVehicleToCoupling {\n\t\t\t\tout vehicle =",
    "package 'VehiclePowerTransmission' {\n\tattribute def FuelCommandPort;\n\tattribute def PowerPort;\n\tattribute def ClutchPort;\n\tport def FuelCommandPortPort {\n\t\tin fuelCommand : FuelCommandPort;",
    "package 'System' {\n\tpackage 'b11' {\n\t\tcomponent 'c1' {\n\t\t\tport pb;\n\t\t\tport pe;\n",
    "package 'AutomotivePowertrain' {\n\tattribute def FuelCmd;\n\tattribute def EngineStartStop;\n\tattribute def EngineTorque;\n\tattribute def Transmission;\n\tattribute def Driveshaft;\n\tattribute def LeftWheel;\n\tattribute def RightWheel;\n\tport def FuelCmdPort {\n\t\tin fuelCmd : FuelCmd;\n\t}\n\tport def EngineStartStopPort {\n\t\tin engineStartStop : EngineStartStop;\n\t}\n\tport def EngineTorquePort {\n\t\tout engineTorque : EngineTorque;\n\t}\n\tport def TransmissionPort {\n\t\tout transmission : Transmission;\n\t}\n\tport def Driveshaft",
    "package 'PowertrainControl' {\n\tattribute def FuelControlCmd;\n\tattribute def Torque;\n\tport def FuelControlCmdPort {\n\t\tin fuelControlCmd : FuelControlCmd;\n\t}\n\tport def TorquePort {\n\t\tout torque : Torque;\n\t}\n\tpart context {\n\t\tpart engine {\n\t\t\tport fuelControlCmdPort: FuelControlCmdPort;\n\t\t\tperform startEngine.sendFuelControlCmd {\n\t\t\t\tin fuelControlCmd = fuelControlCmdPort.fuelControlCmd;\n\t\t\t}\n\t\t\tport torquePort: TorquePort;\n\t\t}\n\t\tpart amplifier {\n\t\t\tport torquePort: TorquePort;\n\t\t\tperform ampl",
    "package 'VehiclePowertrainSystem' {\n\tattribute def EngineStartSignal;\n\tattribute def EngineOutputTorque;\n\tattribute def Transmission;\n\tattribute def WheelTorqueDistribution;\n\tport def EngineStartSignalPort {\n\t\tin engineStartSignal : EngineStartSignal;\n\t}\n\tport def EngineOutputTorquePort {\n\t\tout engineOutputTorque : EngineOutputTorque;\n\t}\n\tport def TransmissionPort {\n\t\tout transmission : Transmission;\n\t}\n\tport def WheelTorqueDistributionPort {\n\t\tout wheelTorqueDistribution : WheelTorqueDistribution;\n\t}\n\tpart context {\n\t\tpart driver {\n\t\t\tport engineStartSignalPort: EngineStartSignalPort;\n\t\t\tperform powertrainSystem.startEngine {\n",
    "package 'VehicleTrailerCoupling' {\n\tattribute def VehicleFrame;\n\tattribute def TrailerFrame;\n\tattribute def HitchBall;\n\tattribute def TrailerCoupler;\n\tport def HitchBallPort {\n\t\tin hitchBall : HitchBall;\n\t\tout hitchBall : HitchBall;\n\t}\n\tport def TrailerCouplerPort {\n\t\tin trailerCoupler : TrailerCoupler;\n\t\tout trailerCoupler : TrailerCoupler;\n\t}\n\tpart context {\n\t\tpart vehicle {\n\t\t\tport hitchBallPort: HitchBallPort;\n\t\t\tport trailerCouplerPort: TrailerCouplerPort;\n\t\t\tperform connect {\n\t\t\t\tin hitchBall = hitchBallPort.hitchBall;\n\t\t\t\tin trailerCoupler = trailerCouplerPort.trailerCoupler;\n\t\t\t\tout hit",
    "package 'VehicleTrailerConnectionSystem' {\n\tattribute def Chassis;\n\tattribute def TowBall;\n\tattribute def Coupler;\n\tattribute def TrailerFrame;\n\tport def ConnectPort {\n\t\tin connect : Boolean;\n\t\tout connected : Boolean;\n\t}\n\tport def DisconnectPort {\n\t\tin disconnect : Boolean;\n\t\tout disconnected : Boolean;\n\t}\n\tpart context {\n\t\tpart vehicle {\n\t\t\tport connectPort: ConnectPort;\n\t\t\tport disconnectPort: DisconnectPort;\n\t\t\tperform connectTrailer.sendConnect {\n\t\t\t\tin connect = connectPort.connect;\n\t\t\t\tout connected = connectPort.connected;\n\t\t\t}\n\t\t\t",
    "package 'VehicleAndTrailer' {\n\tattribute def Chassis;\n\tattribute def TowBallDevice;\n\tattribute def CouplerMechanism;\n\tport def TowBallDevicePort {\n\t\tout towBallDevice : TowBallDevice;\n\t}\n\tport def CouplerMechanismPort {\n\t\tout couplerMechanism : CouplerMechanism;\n\t}\n\tpart context {\n\t\tpart vehicle {\n\t\t\tport towBallDevicePort: TowBallDevicePort;\n\t\t\tperform hitchOrUnhitch.sendTowBallDevice {\n\t\t\t\tout towBallDevice = towBallDevicePort.towBallDevice;\n\t\t\t}\n\t\t}\n\t\tpart trailer {\n\t\t\tport couplerMechanismPort: CouplerMechanismPort",
    "package 'FuelSystem' {\n\tattribute def FuelTank;\n\tattribute def Engine;\n\tport def FuelSupplyPort {\n\t\tin fuel : Fuel;\n\t}\n\tport def FuelReturnPort {\n\t\tout fuel : Fuel;\n\t}\n\tpart context {\n\t\tpart fuelTank {\n\t\t\tport fuelSupplyPort: FuelSupplyPort;\n\t\t\tperform supplyFuel.sendFuel {\n\t\t\t\tout fuel = fuelSupplyPort.fuel;\n\t\t\t}\n\t\t}\n\t\tpart engine {\n\t\t\tport fuelSupplyPort: FuelSupplyPort;\n\t\t\tport fuelReturnPort: FuelReturnPort;\n\t\t\tperform supplyFuel.receiveFuel {\n\t\t\t\tin fuel = fuelSupplyPort.fuel;",
    "package 'VehicleFuelDeliverySystem' {\n\tattribute def StorageTank;\n\tattribute def FuelPump;\n\tattribute def VehicleFuelTank;\n\tport def FuelInPort {\n\t\tin fuel : Fuel;\n\t}\n\tport def FuelOutPort {\n\t\tout fuel : Fuel;\n\t}\n\tport def FuelLevelMonitorPort {\n\t\tout fuelLevel : FuelLevel;\n\t}\n\tpart context {\n\t\tpart storageTank {\n\t\t\tport fuelInPort: FuelInPort;\n\t\t\tport fuelOutPort: FuelOutPort;\n\t\t\taction extractFuel {\n\t\t\t\tin fuel = fuelInPort",
    "package 'AutomobileAssembly' {\n\tpart context {\n\t\tpart vehicleAssembly {\n\t\t\tport gearboxPort: ~GearboxPort;\n\t\t\tport enginePort: ~EnginePort;\n\t\t\tperform assemblyProcess.installGearbox {\n\t\t\t\tin vehicle = vehicleAssembly.vehicle;\n\t\t\t\tout gearbox = gearboxPort.gearbox;\n\t\t\t}\n\t\t\tperform assemblyProcess.installEngine {\n\t\t\t\tin vehicle = vehicleAssembly.vehicle;\n\t\t\t\tin gearbox = gearboxPort.gearbox;\n\t\t\t\tout engine =",
    "package 'VehicleA' {\n\tattribute def State;\n\tattribute def Temperature;\n\tport def StatePort {\n\t\tout state : State;\n\t}\n\t",
    "package 'VehicleBehavior' {\n\tattribute def VehicleState;\n\tattribute def HealthStatus;\n\tattribute def StartupCmd;\n\tattribute def StartSignal;\n\tattribute def BrakePedal;\n\tattribute def SelfInspection;\n\tattribute def PowerSupply;\n\tattribute def Temperature;\n\tattribute def WarningSignal;\n\tattribute def DegradedMode;\n\tattribute def MaintenanceInterval;\n\tattribute def FaultRecovery;\n\tattribute def Fuel;\n\tattribute def TemperatureThreshold;",
    "package 'VehicleSimulation' {\n\tattribute def VehicleMass;\n\tattribute def VehiclePosition;\n\tattribute def VehicleVelocity;\n\tattribute def VehicleAcceleration;\n\tattribute def RoadSlope;\n\tattribute def RoadFrictionCoefficient;\n\tport def VehicleStatePort {\n\t\tout vehicleState : VehicleState;\n\t}\n\tport def RoadStatePort {\n\t\tout roadState : RoadState;\n\t}\n\tpart context {\n\t\tpart user {\n\t\t\tport vehicleStatePort: VehicleStatePort;\n\t\t\tport roadStatePort: RoadStatePort;\n\t\t\tperform simulateVehicleDynamics.sendVehicleState {\n\t\t\t\tout vehicleState = vehicleStatePort.vehicleState;\n\t\t\t}\n",
    "package 'VehicleConfiguration' {\n\tattribute def VehicleConfigurations;\n\tport def VehicleConfigurationsPort {\n\t\t",
    "package 'VehiclePlatform' {\n\tattribute def Part1;\n\tattribute def Part2;\n\tattribute def Part3;\n\tattribute def Part4;\n\tattribute def Part5;\n\tattribute def Part6;\n\tport def P1Port {\n\t\tout p1: Part1;\n\t}\n\tport def P2Port {\n\t\tout p2: Part2",
    "package 'VehicleProductLineConfiguration' {\n\tattribute def EngineType;\n\tattribute def TransmissionType;\n\tattribute def WheelType;\n\tport def EnginePort {\n\t\tin engine : EngineType;\n\t}\n\tport def TransmissionPort {\n\t\tin transmission : TransmissionType;\n\t}\n\tport def WheelPort {\n\t\tin wheel : WheelType;\n\t}\n\tpart context {\n\t\tpart user {\n\t\t\tport enginePort: EnginePort;\n\t\t\tport transmissionPort: TransmissionPort;\n\t\t\tport wheelPort: WheelPort;\n\t\t\tperform matchConfiguration.selectEngine {\n\t\t\t\tin engine = enginePort.engine;\n",
    "package 'AutomobileSpecification' {\n\tattribute def MassGrade;\n\tattribute def FuelStatus;\n\tattribute def Powertrain;\n\tattribute def Reliability;\n\tport def MassGradePort {\n\t\tout massGrade : MassGrade;\n\t}\n\tport def FuelStatusPort {\n\t\tout fuelStatus : FuelStatus;\n\t}\n\tport",
    "package 'VehicleMassComplianceSystem' {\n\tattribute def VehicleMass;\n\tattribute def MaxPermissibleMass;\n\tport def VehicleMassPort {\n\t\tin vehicleMass : VehicleMass;\n\t}\n\tport def MaxPermissibleMassPort {\n\t\tin maxPermissibleMass : MaxPermissibleMass;\n\t}\n\tport def TestResultPort {\n\t\tout testResult : TestResult;\n\t}\n\tpart context {\n\t\tpart operator {\n\t\t\tport vehicleMassPort: VehicleMassPort;\n\t\t\tport maxPermissibleMassPort: MaxPermissibleMassPort;\n\t\t\tperform measureVehicleMass.sendVehicleMass {\n\t\t\t\tin vehicleMass = vehicleMassPort.vehicleMass;\n\t\t\t}\n\t",
    "package 'WaterSupplyNetwork' {\n\tattribute def SpigotBank;\n\tattribute def Spigot;\n\tattribute def Faucet;\n\tattribute def FaucetInlet;\n\tport def SpigotBankPort {\n\t\tin spigot : SpigotBank;\n\t\tout spigot : SpigotBank;\n\t}\n\tport def SpigotPort {\n\t\tin spigot : Spigot;\n\t\tout spigot : Spigot;\n\t}\n\tport def FaucetPort {\n\t\tin faucet : Faucet;\n\t\tout faucet : Faucet;\n\t}\n\tport def FaucetInletPort {\n\t\tin faucetInlet : FaucetInlet;\n\t\tout faucetInlet : FaucetInlet",
    "package 'VehicleQualityAnalysisSystem' {\n\tattribute def QualityData;\n\tattribute def TotalMass;\n\tport def QualityDataPort {\n\t\tin qualityData : QualityData;\n\t}\n\tport def TotalMassPort {\n\t\tout totalMass : TotalMass;\n\t}\n\tpart context {\n\t\tpart user {\n\t\t\tport qualityDataPort: QualityDataPort;\n\t\t\tperform aggregateQualityData.aggregateQualityData {\n\t\t\t\tin qualityData = qualityDataPort.qualityData;\n\t\t\t\tout totalMass = TotalMassPort.totalMass;\n\t\t\t}\n\t\t}\n\t\tpart qualityAnalysis {\n\t\t\tport qualityDataPort: ~QualityDataPort;\n\t\t\tperform defineQualityAnalysisRequirements.defineQualityAnalysisRequirements",
    "package 'VehiclePowertrainConfiguration' {\n\tattribute def EngineType;\n\tattribute def PerformanceIndicators;\n\tport def EngineTypePort {\n\t\tin engineType : EngineType;\n\t}\n\tport def PerformanceIndicatorsPort {\n\t\tin performanceIndicators : PerformanceIndicators;\n\t}\n\tpart context {\n\t\tpart engineModel {\n\t\t\tport engineTypePort: EngineTypePort;\n\t\t\tport performanceIndicatorsPort: PerformanceIndicatorsPort;\n\t\t\tperform tradeOffAnalysis.evaluateEngineSchemes {\n\t\t\t\tin engineType = engineType",
    "package 'VehicleFuelEconomy' {\n\tattribute def FuelEconomy;\n\tattribute def RangePerGallonUrban;\n\tattribute def RangePerGallonHighway;\n\tattribute def Load;\n\tattribute def OperatingConditions;\n\tport def FuelEconomyPort {\n\t\tout fuelEconomy : FuelEconomy;\n\t}\n\tport def RangePerGallonUrbanPort {\n\t\tout rangePerGallonUrban : RangePerGallonUrban;\n\t}\n\tport def RangePerGallonHighwayPort {\n\t\tout rangePerGallonHighway : RangePerGallonHighway;\n\t}\n\tport def LoadPort {\n\t\tout load : Load;\n\t}",
    "package 'VehicleMotionSimulation' {\n\tattribute def VehicleMass;\n\tattribute def InitialPosition;\n\tattribute def InitialVelocity;\n\tattribute def PowerOutputData;\n\tport def MassInputPort {\n\t\tin vehicleMass : VehicleMass;\n\t}\n\tport def PositionInputPort {\n\t\tin initialPosition : InitialPosition;\n\t}\n\tport def VelocityInputPort {\n\t\tin initialVelocity : InitialVelocity;\n\t}\n\tport def PowerOutputDataInputPort {\n\t\tin powerOutputData : PowerOutputData;\n\t}\n\tport def PositionOutputPort {\n\t\tout position : Position;\n\t}\n\tport def VelocityOutputPort {\n\t\tout velocity : Velocity;\n\t}\n\tport def AccelerationOutputPort {\n\t\tout acceleration : Acceleration;\n\t}\n\t",
    "package 'VehicleSystem' {\n\tattribute def TotalMass;\n\tattribute def FrontAxleMass;\n\tattribute def RearAxleMass;\n\tattribute def FrontAxleSteeringAngle;\n\tattribute def RearAxleMass;\n\tport def TotalMassPort {\n\t\tout totalMass: TotalMass;\n\t}\n\tport def FrontAxlePort {\n\t\tout frontAxleMass: FrontAxleMass;\n\t\tout frontAxleSteeringAngle: FrontAxleSteeringAngle;\n\t}\n\tport def RearAxlePort {\n\t\tout rearAxleMass: RearAxleMass;\n\t}\n\tpart context {\n\t\tpart frontAxle {\n",
    "package 'VehicleSafetySecuritySystem' {\n\tattribute def SafetyFeature;\n\tattribute def SecurityFeature;\n\tport def SafetySecurityPort {\n\t\tout safetyFeature: SafetyFeature;\n\t\tout securityFeature: SecurityFeature;\n\t}\n\tpart context {\n\t\tpart user {\n\t\t\tport safetySecurityPort: SafetySecurityPort;\n\t\t\tperform filterAndOrganize.sendData {\n\t\t\t\tout safetyFeature = safetySecurityPort.safetyFeature;\n\t\t\t\tout securityFeature = safetySecurityPort.securityFeature;\n\t\t\t}\n\t\t}\n\t\tpart vehicle {",
    "package 'System' {\n\tattribute def X;\n\tattribute def Y;\n\tattribute def Z;\n\tport def XPort {\n\t\tin x : X;\n\t}\n\tport def YPort {\n\t\tin y : Y;\n\t}\n\tport def ZPort {\n\t\tin z : Z;\n\t}\n\tpart application {\n\t\tport xPort: XPort;\n\t\tport yPort: YPort;\n\t\tport zPort: ZPort;\n\t\tperform layerDependency.checkDependencies {\n\t\t\tin x = xPort.x;\n\t\t\tin y = yPort.y;\n\t\t\tout z = zPort.z;\n\t\t}\n\t}\n\tpart service {\n\t\tport xPort: XPort;\n\t\tport yPort: YPort;\n\t\tport zPort: ZPort;\n\t\tperform layerDependency.retrieveData {\n\t\t\tin x = xPort.",
    "package 'PowertrainTorqueGeneration' {\n\tattribute def Torque;\n\tport def TorquePort {\n\t\tout torque: Torque;\n\t}\n\tpart context {\n\t\tpart logicLayer {\n\t\t\tport torquePort: TorquePort;\n\t\t\tperform generateTorque {\n\t\t\t\tout torque = torquePort.torque;\n\t\t\t}\n\t\t}\n\t\tpart physicalLayer {\n\t\t\tport torquePort: TorquePort;\n\t\t\tperform mapToPhysicalLayer {\n\t\t\t\tin torque = logicLayer.torque;\n\t\t\t}\n\t\t}\n\t}\n\taction generateTorque { out torque: Torque; }\n\tsuccession flow torqueFlow from generateTorque.torque to mapToPhysicalLayer.torque;\n\taction mapToPhysicalLayer { in torque: Torque; }\n}\n\nNote: The above model is simplified and does",
    "package 'System' {\n\tattribute def Power;\n\tattribute def TorqueGenerator;\n\tport def PowerPort {\n\t\tin power : Power;\n\t\tout power : Power;\n\t}\n\tport def TorqueGeneratorPort {\n\t\tin torqueGenerator : TorqueGenerator;\n\t\tout torqueGenerator : TorqueGenerator;\n\t}\n\tpart context {\n\t\tpart powertrain {\n\t\t\tport powerPort: PowerPort;\n\t\t\tport torqueGeneratorPort: TorqueGeneratorPort;\n\t\t\tperform powertrain.mapTorqueGenerator {\n\t\t\t\tin power = powerPort.power;\n\t\t\t\tout torqueGenerator = torqueGeneratorPort.torqueGenerator;\n\t\t\t}\n\t\t\tpart engine {\n\t\t\t\tport torqueGeneratorPort: TorqueGeneratorPort;\n\t\t\t\tperform powertrain.implementTorque {\n\t\t\t\t\tin torqueGenerator = torqueGenerator",
    "package 'VehicleSafetyAndAntiTheft' {\n\tpackage 'Safety' {\n\t\tpackage 'BasicSafety' {\n\t\t\tattribute def SeatBelts;\n\t\t\tattribute def Bumpers;\n\t\t\tport def SeatBeltsPort {\n\t\t\t\tout seatBelts: SeatBelts;\n\t\t\t}\n\t\t\tport def BumpersPort {\n\t\t\t\tout bumpers: Bumpers;\n\t\t\t}\n\t\t\tpart context {",
    "package 'VehicleFuelSystem' {\n\tattribute def FuelTemperature;\n\tport def FuelTemperaturePort {\n\t\tout fuelTemperature : FuelTemperature;\n\t}\n\tport def FuelPumpPort {\n\t\tin fuel : Fuel;\n\t\tout fuelPressure : FuelPressure;\n\t}\n\tport def FuelTankPort {\n\t\tin fuel : Fuel;\n\t\tout fuelReturn : FuelReturn;\n\t}\n\tpart context {\n\t\tpart fuelPump {\n\t\t\tport fuelPumpPort: FuelPumpPort;\n\t\t\tport fuelTemperaturePort: FuelTemperaturePort;\n\t\t\tperform fuelPump.producePressure {\n\t\t\t\tin fuel = fuelPumpPort.fuel;\n\t\t\t\tout fuelPress",
    "package 'Vehicle' {\n\tattribute def SeatBelts;\n\tattribute def Airbag;\n\tattribute def AntiTheftAlarm;\n\tattribute def Bumper;\n\tattribute def KeylessEntry;\n\tattribute def Wheels;\n\tattribute def ABS;\n\tport def SafetySecurityPort {\n\t\tout safetySecurity : SafetySecurity;\n\t}\n\tport def VehiclePort {\n\t\tout vehicle : Vehicle;\n\t}\n\tpart context {\n\t\tpart vehicle {\n\t\t\tport safetySecurityPort: SafetySecurityPort;\n\t\t\tperform safetySecurity.identifyAndClassify {\n\t\t\t\tout safetySecurity =",
    "package 'VehicleSafetyAndSecurity' {\n\tattribute def SafetyFeatures;\n\tattribute def SecurityFeatures;\n\tport def SafetyFeaturesPort {\n\t\tout safetyFeatures : SafetyFeatures;\n\t}\n\tport def SecurityFeaturesPort {\n\t\tout securityFeatures : SecurityFeatures;\n\t}\n\tpart context {\n\t\tpart interior {\n\t\t\tport safetyFeaturesPort: SafetyFeaturesPort;\n\t\t\tport securityFeaturesPort: SecurityFeaturesPort;\n\t\t\tperform safetyAndSecurity.integrateFeatures {\n\t\t\t\tout safetyFeatures = safetyFeaturesPort.safetyFeatures;\n\t\t\t\tout securityFeatures = securityFeaturesPort.securityFeatures;\n\t\t\t}\n\t\t}\n\t\tpart bodyAssembly {\n\t\t\tport safetyFeaturesPort: SafetyFeaturesPort;\n\t\t",
    "package 'System' {\n\tattribute def SecurityClassification;\n\tport def SecurityClassificationPort {\n\t\tin securityClassification : SecurityClassification;\n\t\tout securityClassification : SecurityClassification;\n\t}\n\tpart context {\n\t\tpart component {\n\t\t\tattribute securityClassification: SecurityClassification;\n\t\t\tport securityClassificationPort: SecurityClassificationPort;\n\t\t}\n\t\tpart securityManagement {\n\t\t\tport securityClassificationPort: SecurityClassificationPort;\n\t\t\tperform classifyComponent {\n\t\t\t\tin securityClassification = securityClassificationPort.securityClassification;\n\t\t\t\tout securityClassification = securityClassificationPort.securityClassification;\n\t\t\t}\n\t\t}\n\t}\n\taction classifyComponent {\n\t\tin securityClassification: SecurityClassification;\n\t\tout securityClassification: SecurityClassification;\n\t}\n}\n\nPlease note that the above model is a simplified example and does not cover all aspects of the requirement. For example, the model does not include",
    "package 'VehicleECU' {\n\tattribute def VehicleState;\n\tattribute def EngineState;\n\tport def VehicleStatePort {\n\t\tin vehicleState : VehicleState;\n\t\tout vehicleState : VehicleState;\n\t}\n\tport def EngineStatePort {\n\t\tin engineState : EngineState;\n\t\tout engineState : EngineState;\n\t}\n\tport def SensorDataPort {\n\t\tin sensorData : SensorData;\n\t\tout sensorData : SensorData;\n\t}\n\tpart context {\n\t\tpart vcu {\n\t\t\tport busIf: ~BusIF;\n\t\t\tport vehicleStatePort: ~VehicleStatePort;\n\t\t\tport engineStatePort: ~EngineState",
    "package 'BloodGlucoseMeter' {\n\tattribute def BatteryStatus;\n\tattribute def Alarm;\n\tport def BatteryStatusPort {\n\t\tin batteryStatus : BatteryStatus;\n\t}\n\tport def AlarmPort {\n\t\tout alarm : Alarm;\n\t}\n\tpart context {\n\t\tpart user {\n\t\t\tport batteryStatusPort: BatteryStatusPort;\n\t\t\tperform batteryStatusCheck.sendBatteryStatus {\n\t\t\t\tin batteryStatus = batteryStatusPort.batteryStatus;\n\t\t\t}\n\t\t}\n\t\tpart meter {\n\t\t\tport batteryStatusPort: ~BatteryStatusPort;\n\t\t\tperform batteryStatusCheck.produceAlert {\n\t\t\t\tin batteryStatus = batteryStatusPort",
    "package 'ConstantSystem' {\n\timport 'MathConstant' {\n\t\tattribute def EulerNumber;\n\t\tattribute def Pi;\n\t\tattribute def Precision;\n\t}\n\timport 'PhysicalConstant' {\n\t\tattribute def SpeedOfLightInVacuum;\n\t\tattribute def FineStructureConstant;\n\t\tattribute def ElectronToProtonMassRatio;\n\t\tattribute def SIUnit;\n\t}\n\timport 'ScenarioBasedConstant' {\n\t\tattribute def StandardGravitationalAcceleration;\n\t\tattribute def AmplifierGainCoe",
    "package 'CarTire' {\n\tattribute def ManufacturerName;\n\tattribute def RimDiameter;\n\tattribute def Width;\n\tport def TirePort {\n\t\tout tire: CarTire;\n\t}\n\tpart context {\n\t\tpart tireFactory {\n\t\t\tport tirePort: TirePort;\n\t\t\tperform createTire {\n\t\t\t\tout tire = Tire(ManufacturerName, RimDiameter, Width);\n\t\t\t}\n\t\t}\n\t\tpart tire {\n\t\t\tport tirePort: ~TirePort;\n\t\t\tattribute manufacturerName: ManufacturerName;\n\t\t\tattribute rimDiameter: RimDiameter;\n\t\t\tattribute width: Width;\n\t\t}\n\t}\n",
    "package 'Vehicle' {\n\tattribute def Mass;\n\tattribute def Length;\n\tport def WheelPort {\n\t\tin leftWheel : Wheel;\n\t\tin rightWheel : Wheel;\n\t}\n\tpart context {\n\t\tpart vehicle {\n\t\t\tattribute mass: Mass;\n\t\t\tattribute length: Length;\n\t\t\tport wheelPort: WheelPort;\n\t\t}\n\t\tpart wheel {\n\t\t\tattribute hubDiameter: Diameter;\n\t\t\tattribute width: Width;\n\t\t\tattribute tireHeight: Height;\n\t\t\tport wheelPort: ~WheelPort;\n\t\t}\n\t\tpart tire {\n\t\t\tattribute height: Height;\n\t\t}\n\t",
    "package 'VehiclePowertrain' {\n\tattribute def EngineType;\n\tattribute def TransmissionType;\n\tport def EnginePort {\n\t\tin engine : EngineType;\n\t}\n\tport def TransmissionPort {\n\t\tin transmission : TransmissionType;\n\t}\n\tpart context {\n\t\tpart highPerformance {\n\t\t\tport enginePort: EnginePort;\n\t\t\tperform engineSelection {\n\t\t\t\tin engine = enginePort.engine;\n\t\t\t\tout engine = 'SixCylinder';\n\t\t\t}\n\t\t\tport transmissionPort: TransmissionPort;\n\t\t\tperform transmissionSelection {\n\t\t\t\tin transmission = transmissionPort.transmission;\n\t\t\t\tout transmission = 'Automatic';\n\t\t\t}\n\t\t}\n\t\tpart",
    "package 'Vehicle' {\n\tattribute def TotalMass;\n\tattribute def Length;\n\tattribute def WheelAssembly;\n\tattribute def TireWidth;\n\tattribute def TireHeight;\n\tattribute def RimDiameter;\n\tattribute def TireTreadDepth;\n\tattribute def BrakeDiscRadius;\n\tattribute def WheelOuter",
    "package 'FuelSystem' {\n\tattribute def FuelTankAssembly;\n\tattribute def FuelPump;\n\tattribute def FuelTank;\n\tport def FuelOutletInterface;\n\tport def FuelInletInterface;\n\tport def FuelReturnInterface;\n\tport def FuelTemperatureMonitor;\n\tpart context {\n\t\tpart fuelTankAssembly {\n\t\t\tport fuelOutletInterface: FuelOutletInterface;\n\t\t\tport fuelReturnInterface: FuelReturnInterface;\n\t\t\tperform fuelCirculation {\n\t\t\t\tin fuel = fuelOutletInterface.fuel;\n\t\t\t\tout fuel = fuelReturnInterface.fuel;\n\t\t\t}\n\t\t\tport fuelInletInterface: FuelInletInterface;\n\t\t\tport fuel",
    "package 'PhysicalQuantitySystem' {\n\timport 'Quantity' from 'QuantitySystem';\n\timport 'Unit' from 'UnitSystem';\n\timport 'QuantitySystem' from 'QuantitySystem';\n\timport 'UnitSystem' from 'UnitSystem';\n\t\n\tattribute def QuantitySystem;\n\tattribute def UnitSystem;\n\t\n\tport def QuantitySystemPort {\n\t\tin quantitySystem : QuantitySystem;\n\t\tout quantitySystem : QuantitySystem;\n\t}\n\tport def UnitSystemPort {\n\t\tin unitSystem : UnitSystem;\n\t\tout unitSystem : UnitSystem;\n\t}\n\t\n\tpart context {\n\t\tpart user {\n\t\t\tport quantitySystemPort: QuantitySystemPort;\n\t\t\tport unitSystemPort: UnitSystemPort;\n\t\t\tperform managePhysicalQuantitySystem {\n\t\t\t\tin quantitySystem = quantitySystemPort.quantitySystem;\n",
    "package 'UnitSystemLibrary' {\n\timport 'ISQ' {\n\t\tattribute def Quantity;\n\t\tattribute def Unit;\n\t\tport def QuantityPort {\n\t\t\tin quantity : Quantity;\n\t\t\tout unit : Unit;\n\t\t}\n\t\tport def UnitPort {\n\t\t\tin unit : Unit;\n\t\t\tout quantity : Quantity;\n\t\t}\n\t\tpart context {\n\t\t\tpart user {\n\t\t\t\tport quantityPort: QuantityPort;\n\t\t\t\tport unitPort: UnitPort;\n\t\t\t\tperform unitConversion.convert {\n\t\t\t\t\tin quantity = quantityPort.quantity;\n\t\t\t\t\tin unit = unitPort.unit;\n\t\t\t\t\tout quantity = unitConversion.quantity;\n\t\t\t\t\tout unit = unitConversion.unit",
    "package 'HeadlampTiltAdjustment' {\n\tattribute def TiltAngle;\n\tport def TiltAnglePort {\n\t\tin tiltAngle : TiltAngle;\n\t}\n\tport def ValidateCmdPort {\n\t\tout validateCmd : ValidateCmd;\n\t}\n\tpart context {\n\t\tpart headlamp {\n\t\t\tport tiltAnglePort: TiltAnglePort;\n\t\t\tperform validateRegion.validateTiltAngle {\n\t\t\t\tin tiltAngle = tiltAnglePort.tiltAngle;\n\t\t\t\tout validateCmd = validateCmdPort.validateCmd;\n\t\t\t}\n\t\t}\n\t\tpart validateRegion {\n\t\t\tport tiltAngle: ~TiltAngle;\n\t\t\taction",
    "package 'SystemDataTypes' {\n\tdataType def UnsignedInteger {\n\t\tconstraint minValue = 0;\n\t\tconstraint maxValue = 4294967295;\n\t}\n\tdataType def UnsignedFloat {\n\t\tconstraint minValue = 0;\n\t\tconstraint maxValue = 1.7976931348623158e+308;\n\t}\n\tdataType def DateTime {\n\t\tconst",
    "package 'SparePartsManagement' {\n\tattribute def SparePartsBag;\n\tattribute def IntegerLists;\n\tattribute def StringSets;\n\tattribute def OrderedSetsOfPerson;\n\tattribute def RealArrays;\n\tport def SparePartsBagPort {\n\t\tin out sparePartsBag : SparePartsBag;\n\t}\n\tport def IntegerListPort {\n\t\tin out integerList : List<Integer>;\n\t}\n\tport def StringSetPort {\n\t\tin out stringSet : Set<String>;\n\t}\n\tport def OrderedSetPort",
    "package 'TireInfo' {\n\tattribute def ManufacturerName;\n\tattribute def RimDiameter;\n\tattribute def TireWidth;\n\tattribute def InstallationPosition;\n\tport def ManufacturerPort {\n\t\tin manufacturerName : ManufacturerName;\n\t}\n\tport def RimDiameterPort {\n\t\tin rimDiameter : RimDiameter;\n\t}\n\tport def TireWidthPort {\n\t\tin tireWidth : TireWidth;\n\t}\n\tport def InstallationPositionPort {\n\t\tin installationPosition : InstallationPosition;\n\t}\n\tpart context {\n\t\tpart tire {\n\t\t\tport manufacturerPort: ManufacturerPort;\n\t\t\tport rimDiameterPort: RimDiameterPort;\n\t\t\tport tireWidthPort: TireWidthPort;\n\t\t\t",
    "package 'SpacecraftAscentSamplingSystem' {\n\tattribute def ReferenceTime;\n\tattribute def UTCLiftoffTime;\n\tattribute def Position;\n\tattribute def Velocity;\n\tport def TimePort {\n\t\tin time : ReferenceTime;\n\t}\n\tport def PositionPort {\n\t\tin position : Position;\n\t}\n\tport def VelocityPort {\n\t\tin velocity : Velocity;\n\t}\n\tpart context {\n\t\tpart spacecraft {\n\t\t\tport timePort: TimePort;\n\t\t",
    "package 'MaterialsSystem' {\n\tattribute def AtomicMass;\n\tattribute def MassFraction;\n\tattribute def TensileStrength;\n\tport def AtomicMassPort {\n\t\tin atomicMass : AtomicMass;\n\t}\n\tport def MassFractionPort {\n\t\tin massFraction : MassFraction;\n\t}\n\tport def Tens",
    "package 'EngineeringMaterialsDB' {\n\tpackage 'MetalAlloys' {\n\t\tattribute def AtomicMass;\n\t\tattribute def Composition;\n\t\tattribute def MechanicalProperties;\n\t\tpackage 'Steel_980' {\n\t\t\tattribute def AtomicMass;\n\t\t\tattribute def Composition;\n\t\t\tattribute def MechanicalProperties;\n\t\t\tattribute def Tens",
    "package 'PubSubSystem' {\n\tattribute def Topic;\n\tattribute def Message;\n\tport def PublishPort {\n\t\tin publish : Topic;\n\t\tout message : Message;\n\t}\n\tport def SubscribePort {\n\t\tin subscribe : Topic;\n\t\tout message : Message;\n\t}\n\tpart context {\n\t\tpart server {\n\t\t\tport publishPort: PublishPort;\n\t\t\tport subscribePort: SubscribePort;\n\t\t\tperform publishMessage.receivePublish {\n\t\t\t\tin publish = publishPort.publish;\n\t\t\t\tout message = messagePort.message;\n\t\t\t}\n\t\t\tperform subscribeMessage.receiveSubscribe {\n\t\t\t\tin subscribe = subscribePort.subscribe",
    "package 'VehicleFuelSystem' {\n\tattribute def FuelTankAssembly;\n\tattribute def Engine;\n\tattribute def FuelLines;\n\tattribute def FuelTemperature;\n\tport def FuelTankAssemblyPort {\n\t\tin fuelTankAssembly : FuelTankAssembly;\n\t\tout fuelToEngine : Fuel;\n\t}\n\tport def EngineFuelReturnPort {\n\t\tin engineFuelReturn : Fuel;\n\t\tout fuelReturnedToTank : Fuel;\n\t}\n\tport def FuelTemperaturePort {\n\t\tout fuelTemperature : FuelTemperature;\n\t}\n\tpart context {\n\t\tpart fuelTankAssembly {\n\t\t\tport fuelTankAssemblyPort: FuelTankAssemblyPort;\n\t\t\taction supplyFuelToEngine {\n\t\t\t\tin fuelTankAssembly ",
    "package 'PublishSubscribeSystem' {\n\tparticipant producer {\n\t\tport topicPublishPort {\n\t\t\tout topicMessage : TopicMessage;\n\t\t}\n\t\tport subscriptionRequestPort {\n\t\t\tin subscriptionRequest : SubscriptionRequest;\n\t\t}\n\t\tport messageDeliveryPort {\n\t\t\tin message : TopicMessage;\n\t\t}\n\t}\n\tparticipant server {\n\t\tport topicPublishPort {\n\t\t\tin topicMessage : TopicMessage;\n\t\t\tout topicMessage : TopicMessage;\n\t\t}\n\t\tport subscriptionRequestPort {\n\t\t\tin subscriptionRequest : SubscriptionRequest;\n\t\t\tout subscriptionResponse : SubscriptionResponse;\n\t\t}\n\t\tport messageDeliveryPort {\n\t\t\tin message : TopicMessage;\n\t\t\tout message :",
    "package 'Vehicle' {\n\tattribute def FuelLevel;\n\tattribute def Driver;\n\tattribute def Passengers;\n\tport def DriverPort {\n\t\tin driver : Driver;\n\t\tout driver : Driver;\n\t}\n\tport def PassengerPort {\n\t\tin passenger : Passengers;\n\t\tout passenger : Passengers;\n\t}\n\tport def FuelPort {\n\t\tin fuel : Fuel;\n\t\tout fuel : Fuel;\n\t}\n\tpart context {\n\t\tpart driver {\n\t\t\tport driverPort: DriverPort;\n\t\t\tperform checkFuelLevel.sendDriverToGasStation {\n\t\t\t\tin driver = driverPort.driver;\n\t\t\t\tout driver = driverPort.driver;\n\t\t\t}\n\t\t}",
    "package 'VehicleFuelManagementSystem' {\n\tattribute def FuelTank;\n\tattribute def Engine;\n\tport def FuelOutletPort;\n\tport def FuelInletPort;\n\tport def FuelTemperaturePort;\n\tport def FuelInterface;\n\tpart context {\n\t\tpart fuelTank {\n\t\t\tport fuelOutletPort: FuelOutletPort;\n\t\t\tport fuelTemperaturePort: FuelTemperaturePort;\n\t\t\tperform supplyEngine.sendFuel {\n\t\t\t\tout fuel = fuelOutletPort.fuel;\n\t\t\t\tout temperature = fuelTemperaturePort.fuelTemperature;\n\t\t\t",
    "package 'VehicleFuelSystem' {\n\tattribute def FuelTankAssembly;\n\tattribute def Engine;\n\tport def FuelSupplyPort {\n\t\tin out fuel : Fuel;\n\t\tout fuelTemp : FuelTemp;\n\t}\n\tport def FuelReturnPort {\n\t\tin out fuel : Fuel;\n\t\tout fuelTemp : FuelTemp;\n\t}\n\tpart context {\n\t\tpart fuelTankAssembly {\n\t\t\tport fuelSupplyPort: FuelSupplyPort;\n\t\t\tport fuelReturnPort: FuelReturnPort;\n\t\t\tperform fuelSupply.produceFuel {\n\t\t\t\tin fuel = fuelSupplyPort.fuel;\n\t\t\t\tout fuelTemp = fuelSupplyPort.fuelTemp;\n\t\t\t}\n\t\t\taction fuelSupply {\n\t\t\t\taction produceFuel { in fuel: Fuel; out",
    "package 'PhotoCaptureSystem' {\n\tattribute def SceneSelection;\n\tattribute def Focusing;\n\tattribute def IntermediateImage;\n\tattribute def FinalPhoto;\n\tport def SceneSelectionPort {\n\t\tin sceneSelection : SceneSelection;\n\t}\n\tport def FocusingPort {\n\t\tout focusing : Focusing;\n\t}\n\tport def IntermediateImagePort {\n\t\tout intermediateImage : IntermediateImage;\n\t}\n\tport def FinalPhotoPort {\n\t\tout finalPhoto : FinalPhoto;\n\t}\n\tpart context {\n\t\tpart user {\n\t\t\tport sceneSelectionPort: SceneSelectionPort;\n\t\t\tperform selectScene.sendSceneSelection {\n\t\t\t\tout sceneSelection = sceneSelectionPort.sceneSelection;\n\t\t\t}\n\t\t}\n\t\tpart camera {\n\t\t\tport sceneSelectionPort: SceneSelectionPort;\n\t\t\tport focusingPort: FocusingPort;\n\t\t\tport intermediateImagePort: IntermediateImagePort;\n",
    "package 'PhotographyWorkflow' {\n\tattribute def Scene;\n\tattribute def FocusedImage;\n\tattribute def FinalImage;\n\tport def ScenePort {\n\t\tin scene: Scene;\n\t}\n\tport def FocusedImagePort {\n\t\tout focusedImage: FocusedImage;\n\t}\n\tport def FinalImagePort {\n\t\tout finalImage: FinalImage;\n\t}\n\tpart context {\n\t\tpart user {\n\t\t\tport scenePort: ScenePort;\n\t\t\taction selectScene {\n\t\t\t\tin scene = scenePort.scene;\n\t\t\t}\n\t\t\taction setFocus {\n\t\t\t\tin scene = selectScene.scene;\n\t\t\t}\n\t\t\taction generateIntermediateImage {\n\t\t\t\tin scene = setFocus.scene;\n",
    "package 'PhotographySystem' {\n\tattribute def Scene;\n\tattribute def FocusedImage;\n\tattribute def ShotImage;\n\tport def ScenePort {\n\t\tin scene : Scene;\n\t}\n\tport def FocusedImagePort {\n\t\tout focusedImage : FocusedImage;\n\t}\n\tport def ShotImagePort {\n\t\tout shotImage : ShotImage;\n\t}\n\tpart context {\n\t\tpart user {\n\t\t\tport scenePort: ScenePort;\n\t\t\tperform selectScene.sendScene {\n\t\t\t\tin scene = scenePort.scene;\n\t\t\t}\n\t\t\tport focusedImagePort: FocusedImagePort;\n\t\t\tport shotImagePort: ShotImagePort;\n\t\t\tperform focusScene.receiveFocusedImage {\n\t\t\t\tout focusedImage = focusedImagePort.focusedImage;\n\t\t\t}\n\t\t\tperform shootScene.receiveFocusedImage {\n\t\t\t\tin focusedImage",
    "package 'PhotographySystem' {\n\tattribute def Scene;\n\tattribute def FocusedImage;\n\tattribute def Photograph;\n\tport def ScenePort {\n\t\tin scene : Scene;\n\t}\n\tport def FocusedImagePort {\n\t\tout focusedImage : FocusedImage;\n\t}\n\tport def PhotographPort {\n\t\tout photograph : Photograph;\n\t}\n\tpart context {\n\t\tpart user {\n\t\t\tport scenePort: ScenePort;\n\t\t\tperform focusProcessing.processScene {\n\t\t\t\tin scene = scenePort.scene;\n\t\t\t\tout focusedImage = focusedImagePort.focusedImage;\n\t\t\t}\n\t\t\tport focusedImagePort: ~FocusedImagePort;\n\t\t\taction shoot {\n\t\t\t\tin focusedImage = focusedImagePort.focusedImage;\n\t\t\t\tout photograph = photographPort.photograph;\n\t\t\t}\n\t\t}\n\t\tpart focusProcessing {\n\t\t\tport scenePort: ~Scene",
    "package 'PhotographyWorkflow' {\n\tattribute def Scene;\n\tattribute def FocusedImage;\n\tattribute def Image;\n\tattribute def Picture;\n\tport def ScenePort {\n\t\tin scene: Scene;\n\t}\n\tport def FocusPort {\n\t\tout focusedImage: FocusedImage;\n\t}\n\tport def ImagePort {\n\t\tout image: Image;\n\t}\n\tport def PicturePort {\n\t\tout picture: Picture;\n\t}\n\tpart context {\n\t\tpart user {\n\t\t\tport scenePort: ScenePort;\n\t\t\tperform focus.focusScene {\n\t\t\t\tin scene = scenePort.scene;\n\t\t\t\tout focusedImage = focusPort.focusedImage;\n\t\t\t}\n\t\t\tport focusPort: FocusPort;\n\t\t\tport imagePort: ImagePort;\n",
    "package 'CameraSystem' {\n\tattribute def SceneSelection;\n\tattribute def Focus;\n\tattribute def PhotoCapture;\n\tport def SceneSelectionPort {\n\t\tin sceneSelection : SceneSelection;\n\t}\n\tport def FocusPort {\n\t\tin focus : Focus;\n\t}\n\tport def PhotoCapturePort {\n\t\tout photoCapture : PhotoCapture;\n\t}\n\tpart context {\n\t\tpart user {\n\t\t\tport sceneSelectionPort: SceneSelectionPort;\n\t\t\tport focusPort: FocusPort;\n\t\t\tperform focusScene.focus {\n\t\t\t\tin focus = focusPort.focus;\n\t\t\t}\n\t\t\tperform focusScene.capturePhoto {\n\t\t\t\tin focus = focusPort.focus;\n\t\t\t}\n\t\t}\n\t\tpart focusScene {\n\t\t\tport sceneSelectionPort: SceneSelectionPort;\n\t\t\tport focusPort: FocusPort;\n\t\t\tperform focus {\n\t",
    "package 'PhotographySystem' {\n\tattribute def Scene;\n\tattribute def FocusQuality;\n\tport def ScenePort {\n\t\tin scene : Scene;\n\t}\n\tport def FocusQualityPort {\n\t\tout focusQuality : FocusQuality;\n\t}\n\tport def ShootingPort {\n\t\tout photo : Photo;\n\t}\n\tpart context {\n\t\tpart user {\n\t\t\tport scenePort: ScenePort;\n\t\t\tperform focusAndEvaluate {\n\t\t\t\tin scene = scenePort.scene;\n\t\t\t\tout focusQuality = focusQualityPort.focusQuality;\n\t\t\t}\n\t\t\tport focusQualityPort: FocusQualityPort;\n\t\t\tport shootingPort: ShootingPort;\n\t\t}\n\t\tpart camera {\n\t\t\tport scenePort: ScenePort;\n\t\t\tport focusQualityPort: FocusQualityPort;\n\t\t\t",
    "package 'PhotographyWorkflow' {\n\tattribute def Scene;\n\tattribute def FocusedImage;\n\tattribute def ShotImage;\n\tport def ScenePort {\n\t\tin scene: Scene;\n\t}\n\tport def FocusPort {\n\t\tout focusedImage: FocusedImage;\n\t}\n\tport def ShootPort {\n\t\tout shotImage: ShotImage;\n\t}\n\tport def DisplayPort {\n\t\tout display: ShotImage;\n\t}\n\tpart context {\n\t\tpart user {\n\t\t\tport scenePort: ScenePort;\n\t\t\taction acquireScene {\n\t\t\t\tin scene = scenePort.scene;\n\t\t\t}\n\t\t\taction focus {\n\t\t\t\tin scene: Scene;\n\t\t\t\tout focusedImage: FocusedImage;",
    "package 'VehicleBrakingControl' {\n\tattribute def BrakePressure;\n\tattribute def RoadAdhesion;\n\tport def BrakePedalMonitorPort {\n\t\tin brakePressure : BrakePressure;\n\t\tin roadAdhesion : RoadAdhesion;\n\t}\n\tport def BrakeControlPort {\n\t\tout brakePressure : BrakePressure;\n\t\tout modulationFrequency : RoadAdhesion;\n\t}\n\tpart context {\n\t\tpart vehicle {\n\t\t\tport brakePedalMonitorPort: BrakePedalMonitorPort;\n\t\t\tport brakeControlPort: BrakeControlPort;\n\t\t\tperform brakeMonitoring.monitorBrakePedal {\n\t\t\t\tin brakePressure = brakePedalMonitorPort.brakePressure;\n\t\t\t",
    "package 'BatteryChargingControlSystem' {\n\tattribute def BatteryLevel;\n\tport def BatteryLevelPort {\n\t\tin batteryLevel : BatteryLevel;\n\t}\n\tport def ChargePort {\n\t\tout charge : Charge;\n\t}\n\tpart context {\n\t\tpart battery {\n\t\t\tport batteryLevelPort: BatteryLevelPort;\n\t\t\tperform batteryMonitoring.monitorBatteryLevel {\n\t\t\t\tin batteryLevel = batteryLevelPort.batteryLevel;\n\t\t\t}\n\t\t\tport chargePort: ChargePort;\n\t\t}\n\t\tpart chargingDevice {\n\t\t\tport batteryLevelPort: BatteryLevelPort;\n\t\t\tperform batteryMonitoring.produceCharge {\n\t\t\t\tin batteryLevel = batteryLevelPort.batteryLevel;\n\t\t\t\tout charge = chargePort.charge;\n\t\t\t}\n\t\t\tport chargePort",
    "package 'BatteryChargingSystem' {\n\tattribute def BatteryLevel;\n\tport def BatteryLevelPort {\n\t\tin batteryLevel : BatteryLevel;\n\t\tout batteryLevel : BatteryLevel;\n\t}\n\tpart context {\n\t\tpart battery {\n\t\t\tport batteryLevelPort: BatteryLevelPort;\n\t\t\tperform monitorBatteryLevel {\n\t\t\t\tin batteryLevel = batteryLevelPort.batteryLevel;\n\t\t\t\tout batteryLevel = batteryLevelPort.batteryLevel;\n\t\t\t}\n\t\t\taction replenishBattery {\n\t\t\t\tif batteryLevel < 100 {\n\t\t\t\t\tout batteryLevel = batteryLevel + 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tpart chargingStation {\n\t\t\tport batteryLevelPort: BatteryLevelPort;\n\t\t\tperform chargeBattery {\n\t\t\t\tin",
    "package 'Camera' {\n\tattribute def SceneSelection;\n\tattribute def Focus;\n\tattribute def Image;\n\tport def SceneSelectionPort {\n\t\tin sceneSelection : SceneSelection;\n\t}\n\tport def FocusPort {\n\t\tout focus : Focus;\n\t}\n\tport def ImagePort {\n\t\tout image : Image;\n\t}\n\tpart context {\n\t\tpart user {\n\t\t\tport sceneSelectionPort: SceneSelectionPort;\n\t\t\tperform autofocus.obtainClearImage {\n\t\t\t\tin sceneSelection = sceneSelectionPort.sceneSelection;\n\t\t\t\tout focus = focusPort.focus;\n\t\t\t}\n\t\t\tport focusPort: FocusPort;\n\t\t}\n\t\tpart autofocus {\n\t\t\tport sceneSelectionPort: SceneSelectionPort;\n\t\t\taction obtain",
    "package 'DigitalCamera' {\n\tattribute def SceneSelection;\n\tattribute def Focus;\n\tattribute def ImageQuality;\n\tport def SceneSelectionPort {\n\t\tin sceneSelection : SceneSelection;\n\t}\n\tport def FocusPort {\n\t\tout focus : Focus;\n\t}\n\tport def ImagePort {\n\t\tout image : ImageQuality;\n\t}\n\tpart context {\n\t\tpart user {\n\t\t\tport sceneSelectionPort: SceneSelectionPort;\n\t\t\tperform shootingProcess.selectScene {\n\t\t\t\tin sceneSelection = sceneSelectionPort.sceneSelection;\n\t\t\t}\n\t\t\tport focusPort: FocusPort;\n\t\t\tport imagePort: ImagePort;\n\t\t}\n\t\tpart camera {\n\t\t\tport sceneSelectionPort: SceneSelectionPort;\n\t\t\tport focusPort: ~FocusPort;",
    "package 'VehicleMotionSimulation' {\n\tattribute def Mass;\n\tattribute def InitialPosition;\n\tattribute def InitialVelocity;\n\tattribute def TimeInterval;\n\tattribute def PowerInputSequence;\n\tport def MassPort {\n\t\tin mass : Mass;\n\t}\n\tport def InitialPositionPort {\n\t\tin initialPosition : InitialPosition;\n\t}\n\tport def InitialVelocityPort {\n\t\tin initialVelocity : InitialVelocity;\n\t}\n\tport def TimeIntervalPort {\n\t\tin timeInterval : TimeInterval;\n\t}\n\tport def PowerInputPort {\n\t\tin powerInput : PowerInputSequence;\n\t}\n\tpart context {\n\t\tpart user {\n\t\t\tport MassPort: MassPort;\n\t\t\tport InitialPositionPort: InitialPositionPort;\n\t\t\tport InitialVelocityPort: InitialVelocity",
    "package 'CameraSystem' {\n\tattribute def SceneInput;\n\tattribute def FocusingProcess;\n\tattribute def ImageCapture;\n\tattribute def PhotoDisplay;\n\tport def SceneInputPort {\n\t\tin sceneInput : SceneInput;\n\t}\n\tport def FocusingProcessPort {\n\t\tout focusingProcess : FocusingProcess;\n\t}\n\tport def ImageCapturePort {\n\t\tout imageCapture : ImageCapture;\n\t}\n\tport def PhotoDisplayPort {\n\t\tout photoDisplay : PhotoDisplay;\n\t}\n\tpart context {\n\t\tpart user {\n\t\t\tport sceneInputPort: SceneInputPort;\n\t\t\tperform frameScene.sendSceneInput {\n\t\t\t\tin sceneInput = sceneInputPort.sceneInput;\n\t\t\t}\n\t\t}\n\t\tpart sceneProcessor {\n\t\t\tport sceneInputPort: SceneInputPort",
    "package 'CameraInfoProcessing' {\n\tattribute def Scene;\n\tattribute def Image;\n\tattribute def Picture;\n\tport def ViewPort {\n\t\tin scene: Scene;\n\t}\n\tport def ImagePort {\n\t\tout image: Image;\n\t}\n\tport def PicturePort {\n\t\tout picture: Picture;\n\t}\n\tport def DisplayPort {\n\t\tout display: Display;\n\t}\n\tpart context {\n\t\tpart user {\n\t\t\tport viewPort: ViewPort;\n\t\t\tperform focusScene.sendScene {\n\t\t\t\tin scene = viewPort.scene;\n\t\t\t}\n\t\t\tport imagePort: ImagePort;\n\t\t\tport picturePort: PicturePort;\n\t\t\tport displayPort: DisplayPort;\n\t\t}\n\t\tpart camera {\n\t\t\tport viewPort: ~ViewPort;\n",
    "package 'SensorManagement' {\n\tattribute def SensorList;\n\tport def SensorListPort {\n\t\tin sensorList : SensorList;\n\t}\n\tpart context {\n\t\tpart sensorManager {\n\t\t\tport sensorListPort: SensorListPort;\n\t\t\tperform traverseSensorList {\n\t\t\t\tin sensorList = sensorListPort.sensorList;\n\t\t\t}\n\t\t\taction updateSensor {\n\t\t\t\tin sensor = sensorListPort.sensor;\n\t\t\t}\n\t\t}\n\t\tpart sensor {\n\t\t\tattribute def ReadyState;\n\t\t\tport sensorListPort: SensorListPort;\n\t\t\tperform isReady {\n\t\t\t\tout readyState = ReadyState;\n\t\t\t}\n\t\t}\n\t}\n\taction traverseSensorList {\n\t\tsuccession flow sensorListFlow from sensorList to isReady;\n\t\taction isReady { out ready",
    "package 'VehicleControl' {\n\tattribute def VehicleState;\n\tport def StartSignalPort {\n\t\tin startSignal : StartSignal;\n\t}\n\tport def PowerOnSignalPort {\n\t\tin powerOnSignal : PowerOnSignal;\n\t}\n\tport def ShutdownSignalPort {\n\t\tin shutdownSignal : ShutdownSignal;\n\t}\n\tpart context {\n\t\tpart vehicle {\n\t\t\tattribute state : VehicleState;\n\t\t\tport startSignalPort: StartSignalPort;\n\t\t\tport powerOnSignalPort: PowerOnSignalPort;\n\t\t\tport shutdownSignalPort: ShutdownSignalPort;\n\t\t\tperform vehicleStateTransition {\n\t\t\t\tin startSignal = startSignalPort.startSignal;\n\t\t\t\tin",
    "package 'VehicleControlSystem' {\n\tattribute def VehicleState;\n\tport def VehicleStartSignalPort {\n\t\tin vehicleStartSignal : VehicleStartSignal;\n\t}\n\tport def VehicleOnSignalPort {\n\t\tin vehicleOnSignal : VehicleOnSignal;\n\t}\n\tport def VehicleOffSignalPort {\n\t\tin vehicleOffSignal : VehicleOffSignal;\n\t}\n\tpart context {\n\t\tpart vehicle {\n\t\t\tattribute state : VehicleState;\n\t\t\tport startSignalPort: VehicleStartSignalPort;\n\t\t\tport onSignalPort: VehicleOnSignalPort;\n\t\t\tport offSignalPort: VehicleOffSignal",
    "package 'VehiclePowerManagement' {\n\tattribute def VehicleState;\n\tattribute def StartCommand;\n\tattribute def StartedSignal;\n\tattribute def SelfDiagnosis;\n\tattribute def ShutdownCommand;\n\tattribute def SafetyOperations;\n\tport def StartCommandPort {\n\t\tin startCommand : StartCommand;\n\t}\n\tport def StartedSignalPort {\n\t\tin startedSignal : StartedSignal;\n\t}\n\tport def SelfDiagnosisPort {\n\t\tout selfDiagnosis : SelfDiagnosis;\n\t}\n\tport def ShutdownCommandPort {\n\t\tin shutdownCommand : ShutdownCommand;\n\t}\n\tport def SafetyOperationsPort {\n\t\tout safetyOperations : SafetyOperations",
    "package 'VehicleControlSystem' {\n\tattribute def VehicleStatus;\n\tport def StartShutdownCmdPort {\n\t\tin startShutdownCmd : StartShutdownCmd;\n\t}\n\tport def VehicleStatusPort {\n\t\tout vehicleStatus : VehicleStatus;\n\t}\n\tpart context {\n\t\tpart user {\n\t\t\tport startShutdownCmdPort: StartShutdownCmdPort;\n\t\t\tperform startShutdownProcess.sendStartShutdownCmd {\n\t\t\t\tin startShutdownCmd = startShutdownCmdPort.startShutdownCmd;\n\t\t\t}\n\t\t}\n\t\tpart vehicle {\n\t\t\tport startShutdownCmdPort: ~StartShutdownCmdPort;\n\t\t\tport vehicleStatusPort",
    "package 'VehiclePowerManagement' {\n\tattribute def OperatingState;\n\tport def StartCmdPort {\n\t\tin startCmd : Start;\n\t}\n\tport def OnCmdPort {\n\t\tin onCmd : On;\n\t}\n\tport def OffCmdPort {\n\t\tin offCmd : Off;\n\t}\n\tpart context {\n\t\tpart user {\n\t\t\tport startCmdPort: StartCmdPort;\n\t\t\tport onCmdPort: OnCmdPort;\n\t\t\tport offCmdPort: OffCmdPort;\n\t\t\tperform switchState {\n\t\t\t\tin startCmd = startCmdPort.startCmd",
    "package 'VehicleHealthMonitoringSystem' {\n\tattribute def VehicleTemperature;\n\tattribute def MaxAllowableTemperature;\n\tattribute def HealthStatus;\n\tport def TemperatureSensorPort {\n\t\tin vehicleTemperature : VehicleTemperature;\n\t}\n\tport def HealthStatusPort {\n\t\tout healthStatus : HealthStatus;\n\t}\n\tport def MaintenancePort {\n\t\tout maintenance : Maintenance;\n\t}\n\tpart context {\n\t\tpart sensor {\n\t\t\tport temperatureSensorPort: TemperatureSensorPort;\n\t\t\t",
    "package 'Server' {\n\tattribute def State;\n\tattribute def LocalClock;\n\tport def RequestPort {\n\t\tin request : String;\n\t}\n\tport def ResponsePort {\n\t\tout response : String;\n\t}\n\tpart context {\n\t\tpart server {\n\t\t\tattribute state: State;\n\t\t\tattribute localClock: LocalClock;\n\t\t\tperform startUp.initialize {\n\t\t\t\tstate = off;\n\t\t\t}\n\t\t\tperform startUp.waitForStart {\n\t\t\t\tin request = RequestPort.request;\n\t\t\t\tstate = waiting;\n\t\t\t}\n\t\t\tperform startUp.wait",
    "package 'VehicleStartStop' {\n\tattribute def VehicleState;\n\tattribute def StartSignal;\n\tattribute def PowerOnSignal;\n\tattribute def BrakePedalStatus;\n\tport def StartSignalPort {\n\t\tin startSignal : StartSignal;\n\t}\n\tport def PowerOnSignalPort {\n\t\tin powerOnSignal : PowerOnSignal;\n\t}\n\tport def BrakePedalStatusPort {\n\t\tin brakePedalStatus : BrakePedalStatus;\n\t}\n\tpart context {\n\t\tpart vehicle {\n\t\t\tport startSignalPort: StartSignalPort;\n\t\t\tport powerOnSignalPort: PowerOn",
    "package 'VehicleControlSystem' {\n\tattribute def StartStopState;\n\tattribute def StartStopSignal;\n\tattribute def BrakePedalState;\n\tport def StartStopSignalPort {\n\t\tin startStopSignal : StartStopSignal;\n\t\tout startStopSignal : StartStopSignal;\n\t}\n\tport def BrakePedalStatePort {\n\t\tin brakePedalState : BrakePedalState;\n\t\tout brakePedalState : BrakePedalState;\n\t}\n\tpart context {\n",
    "package 'CruiseControlSystem' {\n\tattribute def SetSpeedCmd;\n\tattribute def ActualSpeed;\n\tport def SetSpeedCmdPort {\n\t\tin setSpeedCmd : SetSpeedCmd;\n\t}\n\tport def SpeedPort {\n\t\tin speed : ActualSpeed;\n\t}\n\tpart context {\n\t\tpart driver {\n\t\t\tport setSpeedCmdPort: SetSpeedCmdPort;\n\t\t\tperform setSpeed.sendSetSpeedCmd {\n\t\t\t\tin setSpeedCmd = setSpeedCmdPort.setSpeedCmd;\n\t\t\t}\n\t\t}\n\t\tpart cruiseController {\n\t\t\tport setSpeedCmdPort: ~SetSpeedCmdPort;\n",
    "package 'CruiseControl' {\n\tattribute def SetSpeedCmd;\n\tattribute def RealTimeSpeed;\n\tport def SetSpeedCmdPort {\n\t\tin setSpeed : SetSpeedCmd;\n\t}\n\tport def SpeedPort {\n\t\tin realTimeSpeed : RealTimeSpeed;\n\t}\n\tport def ThrottleCmdPort {\n\t\tout throttleCmd : ThrottleCmd;\n\t}\n\tpart context {\n\t\tpart driver {\n\t\t\tport setSpeedCmdPort: SetSpeedCmdPort;\n\t\t\tperform setSpeed.sendSetSpeedCmd {\n\t\t\t\tout setSpeed = setSpeedCmdPort.setSpeed;\n\t\t\t}\n\t\t}\n\t\tpart cruiseController {\n\t\t\tport setSpeedCmdPort: ~SetSpeedCmdPort;\n\t\t\tport speedPort:",
    "package 'CruiseControl' {\n\tattribute def SetSpeedCmd;\n\tattribute def CurrentSpeed;\n\tport def SetSpeedCmdPort {\n\t\tin setSpeedCmd : SetSpeedCmd;\n\t}\n\tport def SpeedSensorPort {\n\t\tin currentSpeed : CurrentSpeed;\n\t}\n\tport def ThrottleControlPort {\n\t\tout throttleControl : ThrottleControl;\n\t}\n\tpart context {\n\t\tpart driver {\n\t\t\tport setSpeedCmdPort: SetSpeedCmdPort;\n\t\t\tperform setSpeedCmd {\n\t\t\t\tin setSpeedCmd = setSpeedCmdPort.setSpeedCmd;\n\t\t\t}",
    "package 'CruiseControl' {\n\tattribute def SpeedSetting;\n\tattribute def ThrottleControl;\n\tport def SpeedSettingPort {\n\t\tin speedSetting : SpeedSetting;\n\t}\n\tport def ThrottleControlPort {\n\t\tout throttleControl : ThrottleControl;\n\t}\n\tpart context {\n\t\tpart driver {\n\t\t\tport speedSettingPort: SpeedSettingPort;\n\t\t\tperform setCruiseSpeed.sendSpeedSetting {\n\t\t\t\tin speedSetting = speedSettingPort.speedSetting;\n\t\t\t}\n\t\t}\n\t\tpart cruiseController {\n\t\t\tport speedSettingPort: SpeedSettingPort;\n\t\t\tport throttleControlPort: Thro",
    "package 'CruiseControl' {\n\tattribute def SetSpeed;\n\tattribute def ActualSpeed;\n\tport def SetSpeedPort {\n\t\tin setSpeed : SetSpeed;\n\t}\n\tport def ActualSpeedPort {\n\t\tin actualSpeed : ActualSpeed;\n\t}\n\tport def FuelControlPort {\n\t\tout fuelControl : FuelControl;\n\t}\n\tpart context {\n\t\tpart driver {\n\t\t\tport setSpeedPort: SetSpeedPort;\n\t\t\tperform setSpeed.sendSetSpeed {\n\t\t",
    "package 'CruiseControl' {\n\tattribute def SetSpeedCmd;\n\tattribute def RealTimeSpeed;\n\tport def SetSpeedCmdPort {\n\t\tin setSpeedCmd : SetSpeedCmd;\n\t}\n\tport def SpeedSensorPort {\n\t\tin realTimeSpeed : RealTimeSpeed;\n\t}\n\tport def FuelControlCmdPort {\n\t\tout fuelControlCmd : FuelControlCmd;\n\t}\n\tport def EngineControllerPort {\n\t\tin fuelControlCmd : FuelControlCmd;\n\t}\n\tpart context {\n\t\tpart driver {\n\t\t\tport setSpeedCmdPort: SetSpeedCmdPort;\n\t\t\tperform setSpeedCmdProcessing {\n\t\t\t\tin set",
    "package 'VehicleLifecycleManagement' {\n\tattribute def Vehicle;\n\tattribute def DeliveryDate;\n\tattribute def OwnerInfo;\n\tport def DeliveryPort {\n\t\tout deliveryDate : DeliveryDate;\n\t}\n\tport def OwnerInfoPort {\n\t\tout ownerInfo : OwnerInfo;\n\t}\n\tport def DriverInfoPort {\n\t\tout driverInfo : DriverInfo;\n\t}\n\tport def ScrappingInfoPort {\n\t\tout scrappingInfo : ScrappingInfo;\n\t}\n\tpart context {\n\t\tpart assemblyLine {\n\t\t\tport deliveryPort: DeliveryPort;\n\t\t\taction recordDelivery {\n\t\t",
    "package 'Vehicle' {\n\tattribute def Mass;\n\tattribute def OperationalStatus;\n\tattribute def GearSetting;\n\tattribute def AcceleratorPedalPosition;\n\tport def EnginePort {\n\t\tout engine: Engine;\n\t}\n\tport def DriverPort {\n\t\tout driver: Driver;\n\t}\n\tport def WheelPort {\n\t\tout wheel: Wheel;\n\t}\n\tpart context {\n\t\tpart vehicle {\n\t\t\tport enginePort: EnginePort;\n\t\t\tport driverPort: DriverPort;\n\t\t\tport wheelPort: WheelPort;\n\t\t\tattribute mass: Mass;\n\t\t\tattribute operationalStatus: OperationalStatus;\n\t\t\tattribute gearSetting: GearSetting;\n\t\t\tattribute acceleratorPedalPosition",
    "package 'VehicleSystem' {\n\tattribute def VehicleMass;\n\tattribute def Gear;\n\tattribute def AcceleratorPosition;\n\tport def VehicleMassPort {\n\t\tout vehicleMass : VehicleMass;\n\t}\n\tport def GearPort {\n\t\tout gear : Gear;\n\t}\n\tport def AcceleratorPositionPort {\n\t\tout acceleratorPosition : AcceleratorPosition;\n\t}\n\tpart context {\n\t\tpart vehicle {\n\t\t\tport vehicleMassPort: VehicleMassPort;\n\t\t\tport gearPort: GearPort;\n\t\t\tport acceleratorPositionPort: AcceleratorPositionPort;\n\t\t\tattribute vehicleMass: ~VehicleMass;\n\t\t",
    "package 'Vehicle' {\n\tattribute def Mass;\n\tattribute def Gear;\n\tattribute def Throttle;\n\tattribute def Driver;\n\tport def DriverPort {\n\t\tin driver : Driver;\n\t}\n\tport def MassPort {\n\t\tin mass : Mass;\n\t}\n\tport def GearPort {\n\t\tin gear : Gear;\n\t}\n\tport def ThrottlePort {\n\t\tin throttle : Throttle;\n\t}\n\tpart context {\n\t\tpart initialState {\n\t\t\tattribute mass: 2000;\n\t\t\tattribute",
    "package 'VehicleMassModel' {\n\tattribute def Mass;\n\tport def MassPort {\n\t\tin mass : Mass;\n\t\tout totalMass : Mass;\n\t}\n\tpart context {\n\t\tpart vehicle {\n\t\t\tport massPort: MassPort;\n\t\t\tattribute bodyMass;\n\t\t\tattribute engineMass;\n\t\t\tattribute transmissionMass;\n\t\t\tattribute otherComponentsMass;\n\t\t\tperform aggregateMass {\n\t\t\t\tin bodyMass = bodyMass;\n\t\t\t\tin engineMass = engineMass;\n\t\t\t\tin transmissionMass = transmission",
    "package 'VehicleMassManagement' {\n\tattribute def VehicleMass;\n\tattribute def ComponentMass;\n\tport def VehicleMassPort {\n\t\tin vehicleMass : VehicleMass;\n\t\tout vehicleMass : VehicleMass;\n\t}\n\tport def ComponentMassPort {\n\t\tin componentMass : ComponentMass;\n\t\tout componentMass : ComponentMass;\n\t}\n\tpart context {\n\t\tpart vehicle {\n\t\t\tport vehicleMassPort: VehicleMassPort;\n\t\t\tport componentMassPort: ComponentMassPort;\n\t\t\tattribute vehicleMass: VehicleMass;\n\t",
    "package 'MassAggregationManagement' {\n\tattribute def SimpleMass;\n\tattribute def TotalMass;\n\tport def MassAggregationPort {\n\t\tin simpleMass : SimpleMass;\n\t\tin totalMass : TotalMass;\n\t\tout simpleMass : SimpleMass;\n\t\tout totalMass : TotalMass;\n\t}\n\tpart context {\n\t\tpart simpleThing {\n\t\t\tattribute simpleMass: SimpleMass;\n\t\t\tattribute totalMass: TotalMass;\n\t\t\tperform aggregateMass {\n\t\t\t\tin simpleMass = simpleMass;\n\t\t\t\tout totalMass = simpleMass;\n\t\t\t}\n\t\t}\n\t\tpart compositeThing {\n\t\t\tattribute simpleMass: SimpleMass;\n\t\t\tattribute totalMass: TotalMass;\n\t\t\tport massAggregationPort: MassAgg",
    "package 'MassManagementSystem' {\n\tattribute def TotalMass;\n\tattribute def MinimumMassThreshold;\n\tport def MassPort {\n\t\tin mass : Mass;\n\t\tout totalMass : TotalMass;\n\t}\n\tport def FilterPort {\n\t\tin filter : Filter;\n\t\tout filteredMass : Mass;\n\t}\n\tpart context {\n\t\tpart object {\n\t\t\tattribute basicMass : Mass;\n\t\t\tattribute subcomponents : Mass;\n\t\t\tport massPort: MassPort;\n\t\t\tperform calculateTotalMass {\n\t\t\t\tout totalMass = basic",
    "package 'VehicleDynamics' {\n\tattribute def PowerOutput;\n\tattribute def Acceleration;\n\tattribute def Speed;\n\tattribute def Position;\n\tport def PowerInputPort {\n\t\tin wheelPower : PowerOutput;\n\t\tin aerodynamicDragCoefficient : PowerOutput;\n\t\tin frictionCoefficient : PowerOutput;\n\t\tin vehicleMass : PowerOutput;\n\t\tin currentSpeed : PowerOutput;\n\t}\n\tport def PowerOutputPort {\n\t\tout powerOutput : PowerOutput;\n\t}\n\tport def AccelerationOutputPort {\n\t\tout acceleration : Acceleration;\n\t}",
    "package 'VehicleDynamicSimulation' {\n\tattribute def InitialSpeed;\n\tattribute def InitialPosition;\n\tattribute def TimeStep;\n\tattribute def AerodynamicDragCoefficient;\n\tattribute def RollingResistanceCoefficient;\n\tattribute def TotalMass;\n\tattribute def WheelEndOutputPower;\n\tport def AccelerationPort {\n\t\tout acceleration : Acceleration;\n\t}\n\tport def SpeedPort {\n\t\tout speed : Speed;\n\t}\n\tport def PositionPort {\n\t\tout position : Position;\n\t}\n\tpart context {\n\t\tpart user {\n\t\t\tport accelerationPort: AccelerationPort",
    "package 'VehicleDynamics' {\n\tattribute def VehicleMass;\n\tattribute def WheelPower;\n\tattribute def AerodynamicDragCoefficient;\n\tattribute def RollingResistanceCoefficient;\n\tattribute def InitialSpeed;\n\tattribute def InitialPosition;\n\tattribute def TimeStep;\n\tattribute def Velocity;\n\tattribute def Acceleration;\n\tattribute def Displacement;\n\tattribute def AirResistance;\n\tattribute def FrictionalResistance;\n\tport def UserInputPort {\n\t\tin vehicleMass: VehicleMass;\n\t\tin wheelPower: WheelPower;\n\t\tin aerodynamicDragCoefficient: AerodynamicDragCoefficient;\n\t\tin rollingResistanceCoefficient: RollingResistanceCoefficient;\n\t\tin initialSpeed: InitialSpeed;\n\t\tin initialPosition: InitialPosition;\n",
    "package 'VehicleDynamicConstraints' {\n\tattribute def InitialPosition;\n\tattribute def InitialVelocity;\n\tattribute def Mass;\n\tattribute def WheelDrivePower;\n\tattribute def TimeInterval;\n\tattribute def DragCoefficient;\n\tattribute def FrictionCoefficient;\n\tattribute def AirResistance;\n\tattribute def FrictionalResistance;\n\tport def PositionPort {\n\t\tout position : InitialPosition;\n\t}\n\tport def VelocityPort {\n\t\tout velocity : InitialVelocity;\n\t}\n\tport def MassPort {\n\t\tout mass : Mass;\n\t}\n\tport def",
    "package 'VehicleWeightManagement' {\n\tattribute def ChassisMass;\n\tattribute def EngineMass;\n\tattribute def GearboxMass;\n\tattribute def TotalMass;\n\tport def MassCheckPort {\n\t\tin chassisMass : ChassisMass;\n\t\tin engineMass : EngineMass;\n\t\tin gearboxMass : GearboxMass;\n\t\tout totalMass : TotalMass;\n\t\tout overweightWarning : OverweightWarning;\n\t}\n\tpart context {\n\t\tpart chassis {\n\t\t\tattribute mass: ChassisMass;\n\t\t\tport massCheckPort: MassCheckPort;\n\t\t\tperform calculateTotalMass {\n\t\t\t\tin chassisMass = mass.mass;\n\t\t\t\tin engineMass = massCheckPort.engineMass;\n\t\t\t\tin gearboxMass =",
    "package 'VehicleMassManagement' {\n\tattribute def TotalMass;\n\tattribute def EngineMass;\n\tattribute def TransmissionMass;\n\tport def MassInputPort {\n\t\tin mass : kilograms;\n\t}\n\tport def MassOutputPort {\n\t\tout totalMass : TotalMass;\n\t\tout engineMass : EngineMass;\n\t\tout transmissionMass : TransmissionMass;\n\t}\n\tpart context {\n\t\tpart user {\n\t\t\tport massInputPort: MassInputPort;\n\t\t\tperform massInput.inputMass {\n\t\t\t\tin mass = massInputPort.mass;\n\t\t\t}\n\t\t\tport massOutputPort: MassOutputPort;\n",
    "package 'VehicleMassManagement' {\n\tattribute def ChassisMass;\n\tattribute def EngineMass;\n\tattribute def TransmissionMass;\n\tattribute def TotalMass;\n\tport def MassDataPort {\n\t\tin chassisMass : ChassisMass;\n\t\tin engineMass : EngineMass;\n\t\tin transmissionMass : TransmissionMass;\n\t}\n\tport def CompliancePort {\n\t\tout compliance : TotalMass;\n\t}\n\tpart context {\n\t\tpart chassis {\n\t\t\tport massDataPort: MassDataPort;\n\t\t\tattribute mass: ChassisMass;\n\t\t}\n\t\tpart engine {\n\t\t\tport massDataPort: MassDataPort;\n\t\t\tattribute mass: EngineMass;\n\t\t}\n\t\t",
    "package 'VehicleWeightManagement' {\n\tattribute def ChassisWeight;\n\tattribute def EngineWeight;\n\tattribute def TransmissionWeight;\n\tport def WeightDataPort {\n\t\tin chassisWeight : ChassisWeight;\n\t\tin engineWeight : EngineWeight;\n\t\tin transmissionWeight : TransmissionWeight;\n\t}\n\tport def WeightSumPort {\n\t\tout weightSum : sum(ChassisWeight, EngineWeight, TransmissionWeight);\n\t}\n\tport def WeightLimitPort {\n\t\tin weightLimit : 2500;\n\t}\n\tport def WarningPort {\n\t\tout warning : 'Weight Exceeded';\n\t}\n\tport def RestrictionPort {\n\t\tout restriction : 'Restriction Imposed';\n\t}\n\tpart context {\n\t\tpart vehicleComponents {\n\t\t\tport weightDataPort: WeightDataPort;\n\t",
    "package 'Vehicle' {\n\tattribute def ChassisMass;\n\tattribute def EngineMass;\n\tattribute def TransmissionMass;\n\tconstraint def TotalMassConstraint {\n\t\tconstraint mass: ChassisMass + EngineMass + TransmissionMass <= 2500;\n\t}\n\tport def ChassisMassPort {\n\t\tin chassisMass: ChassisMass;\n\t}\n\tport def EngineMassPort {\n\t\tin engineMass: EngineMass;\n\t}\n\tport def TransmissionMassPort {\n\t\tin transmissionMass: TransmissionMass;\n\t}\n\tpart context {\n\t\tpart chassis {\n\t\t\tport chassisMassPort: ChassisMassPort;\n\t\t\tattribute chassisMass: ~",
    "package 'VehicleMaintenance' {\n\tattribute def Vehicle;\n\tattribute def MaintenanceInterval;\n\tattribute def MaxAllowedTemp;\n\tattribute def MaintenanceTime;\n\tattribute def MaintenanceStartTime;\n\tattribute def MaintenanceEndTime;\n\tattribute def HealthStatus;\n\tport def VehiclePort {\n\t\tin vehicle: Vehicle;\n\t\tout maintenanceInterval: MaintenanceInterval;\n\t\tout maxAllowedTemp: MaxAllowedTemp;\n\t\tout maintenanceTime: MaintenanceTime;\n\t\tout maintenanceStartTime: MaintenanceStartTime;\n\t\tout maintenanceEndTime: MaintenanceEndTime;\n\t\tout healthStatus: HealthStatus;\n\t}\n\tport def MaintenancePort {\n\t\tin maintenanceInterval: MaintenanceInterval;\n\t\tin maxAll",
    "package 'Vehicle' {\n\tattribute def TotalMass;\n\tattribute def FuelMass;\n\tport def TotalMassPort {\n\t\tout totalMass : TotalMass;\n\t}\n\tport def FuelMassPort {\n\t\tout fuelMass : FuelMass;\n\t}\n\tpart context {\n\t\tpart vehicle {\n\t\t\tport totalMassPort: TotalMassPort;\n\t\t\tport fuelMassPort: FuelMassPort;\n\t\t\tconstraint totalMassConstraint {\n\t\t\t\tout totalMass = totalMassPort.totalMass;\n\t\t\t\tconstraint 'totalMass <= maxMassLimit';\n\t\t\t}\n\t\t\tconstraint fuelMassConstraint {\n\t\t\t\tout fuelMass = fuelMassPort.fuelMass;\n\t\t\t\tconstraint 'fuelMass >= 0';\n\t\t\t}\n\t\t\tinterface engineToClutch connect engine.torquePort to clutch.torquePort {\n\t\t\t\tref flow references engine.torqueFlow\n\t\t\t\t\tfrom",
    "package 'Vehicle' {\n\tattribute def TotalMass;\n\tattribute def FuelMass;\n\tport def FuelTankPort {\n\t\tin fuelMass : FuelMass;\n\t}\n\tport def EnginePort {\n\t\tin torque : Torque;\n\t\tout torque : Torque;\n\t}\n\tport def TransmissionPort {\n\t\tin torque : Torque;\n\t\tout torque : Torque;\n\t}\n\tport def ClutchInterfacePort {\n\t\tin torque : Torque;\n\t\tout torque : Torque;\n\t}\n\tpart context {\n\t\tpart fuelTank {\n\t\t\tport fuelTankPort: FuelTankPort;\n\t\t",
    "package 'Vehicle' {\n\tattribute def TotalMass;\n\tattribute def Engine;\n\tport def MassPort {\n\t\tin totalMass : TotalMass;\n\t}\n\tport def EnginePort {\n\t\tin engine : Engine;\n\t}\n\tpart context {\n\t\tpart vehicle {\n\t\t\tport massPort: MassPort;\n\t\t\tperform checkMass {\n\t\t\t\tin totalMass = massPort.totalMass;\n\t\t\t\tout result = checkMassResult;\n\t\t\t}\n\t\t\tport enginePort: EnginePort;\n\t\t}\n\t\tpart engine {\n\t\t\tport enginePort: ~EnginePort;\n\t\t\tperform checkEngine {\n\t\t\t\tin engine = enginePort.engine;\n\t\t\t\tout result = checkEngineResult;\n\t\t\t}\n\t\t}\n\t}\n\t",
    "package 'Vehicle' {\n\tattribute def MassLimit;\n\tattribute def FuelMass;\n\tattribute def CurbMass;\n\tattribute def EngineTorque;\n\tattribute def GearboxInterface;\n\tport def MassPort {\n\t\tout mass : MassLimit;\n\t}\n\tport def FuelPort {\n\t\tout fuel : FuelMass;\n\t}\n\tport def CurbMassPort {\n\t\tout curbMass : CurbMass;\n\t}\n\tport def EngineTorquePort {\n\t\tout engineTorque : EngineTorque;\n\t}\n\tport def GearboxInterfacePort {\n\t\tout gearboxInterface : GearboxInterface;\n\t}\n\tpart context {\n\t\tpart fuelTank {\n\t\t\tport",
    "package 'VehiclePerformanceAnalysis' {\n\tattribute def VehicleAttributes;\n\tattribute def DrivingCycle;\n\tport def VehicleAttributesPort {\n\t\tin vehicleAttributes : VehicleAttributes;\n\t}\n\tport def DrivingCyclePort {\n\t\tin drivingCycle : DrivingCycle;\n\t}\n\tpart context {\n\t\tpart user {\n\t\t\tport vehicleAttributesPort: VehicleAttributesPort;\n\t\t\tport drivingCyclePort",
    "package 'VehicleFuelEconomySimulation' {\n\tattribute def VehicleParameters;\n\tattribute def DrivingScenario;\n\tattribute def DrivingTrajectory;\n\tattribute def SpeedVariation;\n\tattribute def CurbWeight;\n\tattribute def Load;\n\tattribute def WheelDiameter;\n\tattribute def TransmissionEfficiency;\n\tattribute def EnginePowerDemand;\n\tattribute def FuelConsumption;\n\tattribute def FuelEconomy;\n\tport def VehicleParametersPort {\n\t\tin vehicleParameters : VehicleParameters;\n\t}\n\tport def DrivingScenarioPort {\n\t\tin drivingScenario : DrivingScenario;\n\t}\n\tport def DrivingTrajectoryPort {\n\t\tin drivingTrajectory : DrivingTrajectory;\n\t}\n",
    "package 'EngineSelectionSystem' {\n\tattribute def EngineType;\n\tattribute def KeyPerformanceIndicators;\n\tport def EngineTypePort {\n\t\tin engineType : EngineType;\n\t}\n\tport def KPIInputPort {\n\t\tin kpi : KeyPerformanceIndicators;\n\t}\n\tport def EvaluationFunctionPort {\n\t\tin evaluationFunction : EvaluationFunction;\n\t}\n\tport def RecommendationPort {\n\t\tout recommendation : Engine;\n\t}\n\tpart context {\n\t\tpart engineDatabase {\n\t\t\tport engineTypePort: EngineTypePort;\n\t\t\tport kpiInputPort: KPIInputPort;\n\t\t\tport evaluationFunctionPort: EvaluationFunctionPort;\n\t\t\tport recommendationPort: RecommendationPort;\n\t\t\tperform engineSelection {\n\t\t\t\tin engineType = engineTypePort.engineType;\n\t\t\t\tin kpi = kpiInputPort.kpi;\n\t\t\t\t",
    "package 'VehicleQualityCheck' {\n\tattribute def CurbWeight;\n\tattribute def WeightLimit;\n\tport def WeightDataPort {\n\t\tin weightData : CurbWeight;\n\t}\n\tport def EvaluationResultPort {\n\t\tout evaluationResult : String;\n\t}\n\tpart context {\n\t\tpart vehicle {\n\t\t\tport weightDataPort: WeightDataPort;\n\t\t\tperform weightCheck.collectWeightData {\n\t\t\t\tin weightData = weightDataPort.weightData;\n\t\t\t}\n\t\t\tport evaluationResultPort: EvaluationResultPort;\n\t\t}\n\t\tpart weightCheck {\n\t\t\tport weightDataPort: WeightDataPort;\n\t\t\taction collectWeightData { in weightData: CurbWeight; }\n\t\t\taction processWeightData {\n\t\t\t\tin weightData: CurbWeight;\n\t\t\t\tout processed",
    "package 'MassVerificationSystem' {\n\tattribute def Vehicle;\n\tattribute def WeighingEquipment;\n\tattribute def MassVerificationUnit;\n\tport def VehiclePort {\n\t\tin vehicle : Vehicle;\n\t\tout result : Boolean;\n\t}\n\tport def WeighingEquipmentPort {\n\t\tin vehicle : Vehicle;\n\t\tout mass : Double;\n\t}\n\tport def MassVerificationUnitPort {\n\t\tin mass : Double;\n\t\tout result : Boolean;\n\t}\n\tpart context {\n\t\tpart vehicle {\n\t\t\tport vehiclePort: VehiclePort;\n\t\t\tperform weighVehicle.sendVehicle {\n\t\t\t\tout result =",
    "package 'Vehicle' {\n\tattribute def PassengerCapacity;\n\tattribute def Driver;\n\tattribute def Destination;\n\tport def EntryExitPort {\n\t\tin entryExit : EntryExit;\n\t}\n\tport def EnvironmentPort {\n\t\tin environment : Environment;\n\t}\n\tport def InfrastructurePort {\n\t\tin infrastructure : Infrastructure;\n\t}\n\tport def RideExperiencePort {\n\t\tout rideExperience : RideExperience;\n\t}\n\tpart context {\n\t\tpart user {\n\t\t\tport entryExitPort: EntryExitPort;\n\t\t\tport environmentPort: EnvironmentPort;\n\t\t\tport infrastructurePort: InfrastructurePort;\n\t\t\tport rideExperiencePort: RideExperiencePort;\n\t\t\tperform userToVehicle connect user.entryExitPort to vehicle.entry",
    "package 'Vehicle' {\n\tattribute def Passengers;\n\tattribute def Driver;\n\tattribute def FuelLevel;\n\tport def DriverPort {\n\t\tin driver : Driver;\n\t\tout driver : Driver;\n\t}\n\tport def PassengerPort {\n\t\tin passenger : Passengers;\n\t\tout passenger : Passengers;\n\t}\n\tport def FuelPort {\n\t\tin fuel : Fuel;\n\t\tout fuel : Fuel;\n\t}\n\tpart context {\n\t\tpart user {\n\t\t\tport driverPort: DriverPort;\n\t\t\tport passengerPort: PassengerPort;\n\t\t\tport fuelPort: FuelPort;\n\t\t\tperform enterVehicle.sendDriver {\n\t\t\t\tout driver = driverPort.driver;\n\t\t\t}\n\t\t\tperform enterVehicle.sendPassenger {\n\t\t\t\tout passenger = passengerPort.passenger;\n\t\t\t",
    "package 'VehicleProductLine' {\n\tattribute def EngineType;\n\tattribute def TransmissionType;\n\tattribute def CylinderDiameter;\n\tport def EnginePort {\n\t\tin engine : EngineType;\n\t\tout cylinder : CylinderDiameter;\n\t}\n\tport def TransmissionPort {\n\t\tin transmission : TransmissionType;\n\t\tout cylinder : CylinderDiameter;\n\t}\n\tpart context {\n\t\tpart engine {\n\t\t\tport enginePort: EnginePort;\n\t\t\tperform engineConfiguration {\n\t\t\t\tin engine = enginePort.engine;\n\t\t\t\tout cylinder",
    "package 'Engine' {\n\tattribute def CylinderQuantity;\n\tattribute def CylinderDiameter;\n\tport def CylinderPort {\n\t\tin cylinder : Cylinder;\n\t}\n\tport def EnginePort {\n\t\tout engine : Engine;\n\t}\n\tpart context {\n\t\tpart user {\n\t\t\tport cylinderPort: CylinderPort;\n\t\t\tperform selectEngineVariant.sendCylinderQuantityAndDiameter {\n\t\t\t\tin cylinder = cylinderPort.cylinder;\n\t\t\t\tout engine = enginePort.engine;\n\t\t\t}\n\t\t}\n\t\tinterface userToEngine connect user.cylinderPort to engine.cylinderPort {\n\t\t\tref flow references selectEngineVariant.cylinderFlow\n\t\t\t\tfrom source.cylinder to target.cylinder;\n\t\t}\n\t\tpart engine {\n\t\t\tport cylinderPort: CylinderPort",
    "package 'VehicleConfiguration' {\n\tattribute def EngineType;\n\tattribute def TransmissionType;\n\tattribute def CylinderDiameter;\n\tport def EnginePort {\n\t\tout engine: EngineType;\n\t}\n\tport def TransmissionPort {\n\t\tout transmission: TransmissionType;\n\t}\n\tpart context {\n\t\tpart engine {\n\t\t\tport enginePort: EnginePort;\n\t\t\tperform engineTypeSelection {\n\t\t\t\tout engine = enginePort.engine;\n\t\t\t}\n\t\t}\n\t\tpart transmission {\n\t\t\tport transmissionPort: TransmissionPort;\n\t\t\tperform transmissionTypeSelection {\n\t",
    "package 'SystemAssembly' {\n\tpart computer {\n\t\tinterface computerToStorage connect computer.softwareDesign to storage.softwareCompatibility {\n\t\t\tref flow references softwareDesignFlow\n\t\t\t\tfrom source.softwareDesign to target.softwareCompatibility;\n\t\t}\n\t\tinterface computerToSoftware connect computer.functions to software.functions {\n\t\t\tref flow references functionIntegrationFlow\n\t\t\t\tfrom source.functions to target.functions;\n\t\t}\n\t\tinterface computerToStorage connect computer.messageFormat to storage.messageFormat {\n\t\t\tref flow references messageFormatFlow\n\t\t\t\tfrom source.messageFormat to target.messageFormat;\n\t\t}\n\t\tinterface computerToStorage connect computer.dataFormat to storage.dataFormat {\n\t\t\tref flow references dataFormatFlow\n\t\t\t\tfrom source.dataFormat to target.dataFormat;\n",
    "package 'PowertrainSystem' {\n\tattribute def Power;\n\tattribute def Torque;\n\tport def PowerPort {\n\t\tout power: Power;\n\t}\n\tport def TorquePort {\n\t\tout torque: Torque;\n\t}\n\tpart context {\n\t\tpart logicalLayer {\n\t\t\tport powerPort: PowerPort;\n\t\t\tport torquePort: TorquePort;\n\t\t\tperform logicalLayer.generateTorque {\n\t\t\t\tin power = powerPort.power;\n\t\t\t\tout torque = torquePort.torque;\n\t\t\t}\n\t\t}\n\t\tpart physicalLayer {\n\t\t",
    "package 'PowerTransmissionSystem' {\n\tattribute def Power;\n\tattribute def Torque;\n\tport def PowerPort {\n\t\tin power : Power;\n\t\tout power : Power;\n\t}\n\tport def TorquePort {\n\t\tin torque : Torque;\n\t\tout torque : Torque;\n\t}\n\tpart context {\n\t\tpart torqueGenerator {\n\t\t\tport powerPort: PowerPort;\n\t\t\tport torquePort: TorquePort;\n\t\t\tperform generateTorque {\n\t\t\t\tin power = powerPort.power;\n\t\t\t\tout torque = torquePort.torque;\n\t\t\t}\n\t\t}\n\t\tpart powert",
    "package 'VehicleFeatureAnnotationSystem' {\n\tattribute def SafetyFeatures;\n\tattribute def SecurityFeatures;\n\tport def SafetyFeaturesPort {\n\t\tout safetyFeatures : SafetyFeatures;\n\t}\n\tport def SecurityFeaturesPort {\n\t\tout securityFeatures : SecurityFeatures;\n\t}\n\tpart context {\n\t\tpart interior {\n\t\t\tport safetyFeaturesPort: SafetyFeaturesPort;\n\t\t\tport securityFeaturesPort: SecurityFeaturesPort;\n\t\t\tperform identifyAndManageFeatures {\n\t\t\t\tout safetyFeatures = safetyFeaturesPort.safetyFeatures;\n\t\t\t\tout securityFeatures = securityFeaturesPort.securityFeatures;\n\t\t\t}",
    "package 'VehicleDynamicSimulation' {\n\tattribute def InitialVelocity;\n\tattribute def InitialPosition;\n\tattribute def Acceleration;\n\tattribute def TimeStep;\n\tport def InputPort {\n\t\tin initialVelocity: InitialVelocity;\n\t\tin initialPosition: InitialPosition;\n\t\tin acceleration: Acceleration;\n\t\tin timeStep: TimeStep;\n\t}\n\tport def OutputPort {\n\t\tout velocity: Velocity;\n\t\tout position: Position;\n\t}\n\tpart context {\n\t\tpart user {\n\t\t\tport inputPort: InputPort;\n\t\t\tperform simulation {\n\t\t\t\tin initialVelocity = inputPort.initialVelocity;\n\t\t\t\tin initialPosition = inputPort.initialPosition;\n\t\t\t\tin acceleration = inputPort.acceleration;\n\t\t\t\tin timeStep = inputPort.timeStep;\n\t\t\t\tout",
    "package 'Vehicle' {\n\tpackage 'Safety Features' {\n\t\tpackage 'Mandatory Safety Features' {\n\t\t\tattribute def SeatBelts;\n\t\t\tattribute def Airbag;\n\t\t\tattribute def Bumper;\n\t\t\tattribute def ABS;\n\t\t}\n\t\tpackage 'Optional Safety Features' {\n\t\t\tattribute def KeylessEntry;\n\t\t}\n\t}\n\tpackage 'WheelAssembly' {\n\t\tattribute def Wheels;\n\t\tattribute def ABS;\n\t}",
    "package 'VehicleSafetyCompliance' {\n\tpart vehicle {\n\t\tattribute def SeatBelts;\n\t\tattribute def DriverAirbag;\n\t\tattribute def Bumper;\n\t\tattribute def KeylessEntrySystem;\n\t\tattribute def Tires;\n\t\tattribute def ABS;\n\t\tport def SeatBeltsPort {\n\t\t\tout seatBelts: SeatBelts;\n\t\t}\n\t\tport def DriverAirbagPort {\n\t\t\tout driverAirbag: DriverAirbag;\n\t\t}\n\t\tport def BumperPort {\n\t\t\tout bumper: Bumper;\n\t\t}\n\t\tport def KeylessEntrySystemPort {\n\t\t\t",
    "package 'RiskAndFailureManagement' {\n\tattribute def Risk;\n\tattribute def Failure;\n\tattribute def Probability;\n\tattribute def Severity;\n\tport def RiskPort {\n\t\tin risk: Risk;\n\t\tout risk: Risk;\n\t}\n\tport def FailurePort {\n\t\tin failure: Failure;\n\t\tout failure: Failure;\n\t}\n\tport def ProbabilityPort {\n\t\tin probability: Probability;\n\t\tout probability: Probability;\n\t}\n\tport def SeverityPort {\n\t\tin severity: Severity;\n\t\tout severity: Severity;\n\t}\n\tpart context {\n\t\tpart riskAnalysis {\n\t\t\tport riskPort: RiskPort;\n\t\t\tport failurePort: FailurePort;\n\t\t\tport probabilityPort: ProbabilityPort;\n\t\t\tport severityPort: SeverityPort;\n\t\t\tperform risk",
    "package 'SystematicRiskMetadataModeling' {\n\tattribute def Scenario;\n\tattribute def Cause;\n\tattribute def Probability;\n\tattribute def FailureType;\n\tattribute def SeverityLevel;\n\tport def ScenarioPort {\n\t\tin scenario: Scenario;\n\t}\n\tport def CausePort {\n\t\tin cause: Cause;\n\t}\n\tport def ProbabilityPort {\n\t\tin probability: Probability;\n\t}\n\tport def FailureTypePort {\n\t\tin failureType: FailureType;\n\t}\n\tport def SeverityLevelPort {\n\t\tin severityLevel: SeverityLevel;\n\t}\n\tpart context {\n\t\tpart user {\n\t\t\tport scenarioPort: Scenario",
    "package 'EquipmentRiskAnalysis' {\n\tattribute def BatteryLevel;\n\tattribute def BatteryFailureProbability;\n\tattribute def BatteryFailureThreshold;\n\tattribute def DeviceShutdownThreshold;\n\tattribute def BatteryFailureSeverity;\n\tattribute def DeviceShutdownSeverity;\n\tport def BatteryLevelPort {\n\t\tin batteryLevel : BatteryLevel;\n\t}\n\tport def BatteryFailureProbabilityPort {\n\t\tin batteryFailureProbability : BatteryFailureProbability;\n\t}\n\tport def BatteryFailure",
    "package 'System' {\n\tpackage 'Subsystem1' {\n\t\tpackage 'Component1' {\n\t\t\tattribute def Functionality;\n\t\t\tport def Interface1 {\n\t\t\t\tin input1 : Functionality;\n\t\t\t\tout output1 : Functionality;\n\t\t\t}\n\t\t\tport def Interface2 {\n\t\t\t\tin input2 : Functionality;\n\t\t\t\tout output2 : Functionality;\n\t\t\t}\n\t\t\tpart context {\n\t\t\t\tpart otherComponent {\n\t\t\t\t\tport interface1: Interface1;\n\t\t\t\t\tport interface2: Interface2;\n\t\t\t\t}\n\t\t\t\tinterface componentToOtherComponent connect Component1.Interface1 to OtherComponent.Interface1 {\n\t\t\t\t\tref flow references componentTo",
    "package 'AutomotiveSystem' {\n\timport 'Component';\n\timport 'Interface';\n\timport 'SafetyAttribute';\n\timport 'View';\n\t\n\tpackage 'RootComponent' {\n\t\timport 'Subsystem';\n\t\timport 'Component';\n\t\timport 'Interface';\n\t\timport 'SafetyAttribute';\n",
    "package 'Automobile' {\n\talias '汽车 (Car)' for '汽车';\n\tcomment 'This system model aims to provide standardized definitions and annotations for fundamental concepts and elements in the automotive domain.';\n\tattribute def Torque;\n\tport def TorquePort {\n\t\tin torque : Torque;\n\t}\n\tpart context {\n\t\tpart car {\n\t\t\tport torquePort: TorquePort;\n\t\t\tattribute torque: Torque;\n\t\t\tcomment 'The automobile is designated as a core component.';\n\t\t\tperform generateTorque {\n\t\t\t\tin torque = torquePort.torque;\n\t\t\t}\n\t\t}\n\t\tpart torqueSource {\n\t\t\tport torquePort: TorquePort;\n\t\t\tattribute torque: Torque;\n\t\t\tperform generateTorque {\n",
    "package 'DocumentManagementPlatform' {\n\timport 'Automobile' from 'CoreObjects';\n\timport 'Car' from 'CoreObjects';\n\timport 'TorqueValue' from 'PhysicalQuantities';\n\timport 'ISQ' from 'PhysicalQuantities';\n\timport 'ExplanatoryDocument' from 'Annotations';\n\t\n\tclass 'DocumentManagementPlatform' {\n\t\tattribute def CoreObject;\n\t\tattribute def Alias;\n\t\tattribute def PhysicalQuantitySystem;\n\t\tattribute def AnnotationSystem;\n\t\t\n\t\tport def CoreObjectPort {\n\t\t\tin coreObject : CoreObject;\n\t\t\t",
    "package 'Automobile' {\n\tattribute def Car;\n\tattribute def TorqueValue;\n\tport def CarPort {\n\t\tout car: Car;\n\t}\n\tport def TorqueValuePort {\n\t\tin torqueValue: TorqueValue;\n\t\tout torque: Torque;\n\t}\n\tpart context {\n\t\tpart user {\n\t\t\tport carPort: CarPort;\n\t\t\tport torqueValuePort: TorqueValuePort;\n\t\t\tperform importTorqueValue {\n\t\t\t\tin torqueValue = torqueValuePort.torqueValue;\n\t\t\t\tout torque = torqueValuePort.torque;\n\t\t\t}\n\t\t}\n\t\tpart automobile {\n\t\t\tport carPort: ~CarPort;\n\t\t\tport torqueValuePort: ~TorqueValuePort;\n\t\t\tperform manageTorque {\n\t\t\t\t",
    "package 'VehicleEngine' {\n\tattribute def VehicleSize;\n\tattribute def EngineCylinders;\n\tport def EngineCylindersPort {\n\t\tout engineCylinders : EngineCylinders;\n\t}\n\tpart context {\n\t\tpart vehicle {\n\t\t\tport vehicleSize: VehicleSize;\n\t\t\tport engineCylindersPort: EngineCylindersPort;\n\t\t\tperform selectEngineCylinders {\n\t\t\t\tout engineCylinders = vehicleSize.selectEngineCylinders(EngineCylinders);\n\t\t\t}\n\t\t}\n\t}\n\taction selectEngineCylinders {\n\t\tout engineCylinders: EngineCylinders;\n\t}\n}\npackage 'Vehicle' {\n\tattribute def VehicleSize;\n\tport def VehicleSizePort {\n\t\tout vehicleSize : VehicleSize;\n\t}\n\tpart context {\n\t\tpart engine {\n\t\t\tport engineCylindersPort: EngineCyl",
    "package 'FuelManagementSystem' {\n\tattribute def FuelInterface;\n\tattribute def FuelFlow;\n\tport def FuelInterfacePort {\n\t\tin out fuelInterface : FuelInterface;\n\t}\n\tport def FuelFlowPort {\n\t\tin out fuelFlow : FuelFlow;\n\t}\n\tpart context {\n\t\tpart fuelTank {\n\t\t\tport fuelInterfacePort: FuelInterfacePort;\n\t\t\tperform fuelManagement.monitorFuelTemperature {\n\t\t\t\tin fuelInterface = fuelInterfacePort.fuelInterface;\n\t\t\t}\n\t\t\tport fuelFlowPort: FuelFlowPort;\n\t\t}\n\t\tpart engine {\n\t\t\tport fuelInterfacePort: FuelInterfacePort;\n\t\t\tperform fuelManagement.deliverFuel {\n\t\t\t\tin fuelInterface = fuelInterfacePort.fuelInterface;\n\t\t\t}\n\t\t\tport fuelFlowPort: FuelFlowPort;\n\t\t}\n\t\tpart fuelManagement {\n\t\t\tport fuelInterfacePort: FuelInterfacePort;\n\t\t\tport fuelFlowPort: FuelFlowPort;\n\t",
    "package 'VehicleStructuralArchitecture' {\n\tattribute def Mass;\n\tattribute def FrontAxleType;\n\tattribute def RearAxleType;\n\tattribute def LeftWheel;\n\tattribute def RightWheel;\n\tport def MassPort {\n\t\tout mass: Mass;\n\t}\n\tport def FrontAxlePort {\n\t\tout frontAxle: FrontAxle;\n\t}\n\tport def RearAxlePort {\n\t\tout rearAxle: RearAxle;\n\t}\n\tport def LeftWheelPort {\n\t\tout leftWheel: LeftWheel;"
]